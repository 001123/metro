{"version":3,"sources":["components/AccentTypes.jsx","components/SoundMachineInstrument.jsx","components/InstrumentLib.jsx","components/PlayModes.jsx","components/SoundMachine.jsx","components/SimpleProgress.jsx","components/Utils.jsx","components/Planner.jsx","components/AdvancedSlider.jsx","components/Accent.jsx","components/BarManager.jsx","components/EditPresetModal.jsx","components/PresetsManager.jsx","components/SimplePanel.jsx","components/PlaybackModes.jsx","components/GeometricSlider.jsx","components/AdvancedRange.jsx","components/ModePanel.jsx","components/PresetsLib.jsx","components/Vis.jsx","App.jsx","serviceWorker.js","index.js"],"names":["accentTypes","ACCENT_1","ACCENT_2","ACCENT_3","accentTypesArr","SoundMachineInstrument","props","o","samples","baseUrl","key","label","Sampler","instruments","TABLA","ELECTRO_KIT","METRONOME","InstrumentLib","defaultInstrument","state","lib","currentInstrument","undefined","fft","tabla","electro","metronome","setInstrument","Tone","FFT","fan","toMaster","this","Error","Component","playModes","BY_BAR","BY_TIME","STABLE","SoundMachine","accentNotes","instrumentLib","currentBeat","beatsPerStep","progressRefreshRate","score","isPlaying","accents","executeStep","step","lastStep","currentStep","getBpm","bpm","setBpm","newLE","playMode","duration","Transport","setLoopPoints","lastLoopDuration","start","repeat","time","idx","note","getInstrument","triggerAttack","Draw","schedule","onBeat","isNaN","value","loopEnd","setBeatsPerStep","newBps","length","pop","push","timeSignature","loop","setState","handleStartStop","stop","instrument","onToggle","clearInterval","stepProgressUpdateTimer","setInterval","updateProgress","Synth","triggerAttackRelease","Buffer","on","onBufferError","onStop","onStart","onLoopEnd","context","latencyHint","Loop","onProgress","progress","vis","drawFFT","getValue","instrumentKey","i","Button","outline","color","onClick","block","active","defaultProps","SimpleProgress","Container","className","style","width","display","Utils","padTime","t","formatTime","timeInSeconds","Date","setSeconds","getMinutes","getSeconds","Planner","bars","stepProgress","isPaused","timer","ref","startTime","stepsCounter","barRender","b","cls","setStep","segmentDuration","toFixed","end","s","segments","min","bpmRange","max","segment","interval","bpmStep","Infinity","stableBpmSlider","uiStateObject","plan","makePlan","totalPlanTime","bar","timeEnd","startTimeFormatted","endTimeFormatted","prevState","stepChanged","pause","resetStep","stepIdx","getCurrentStep","onStep","date","Badge","currentBpm","lockBpm","opacity","map","AdvancedSlider","height","Slider","Accent","isCurrent","type","BarManager","defaultValue","onAfterChange","selected","newBars","lastActiveAccent","toggleCurrent","el","refs","handleCellClick","EditPresetModal","modal","preset","showDelete","toggle","bind","title","onSave","e","newTitle","target","onDeleteBtn","marginTop","size","onSaveBtn","Modal","isOpen","ModalHeader","ModalBody","Input","onChange","titleChanged","JSON","stringify","ModalFooter","handleSave","renderDelete","PresetsManager","showEdit","userPresets","cookies","get","Array","fill","onSelect","toLowerCase","saveInCookie","presets","set","path","indexOf","splice","stopPropagation","presetEditor","edit","p","getPreset","parse","Row","item","Col","hidden","isHidden","onPresetClick","onMouseEnter","showEditBtn","onMouseLeave","hideEditBtn","visibility","onPresetEdit","onPresetDelete","onSavePreset","SimplePanel","children","playbackModes","STOP","CYCLE","REPEAT","CONTINUE","GeometricSlider","regression","d","exponential","precision","prepareMarks","marks","marksAt","findX","markFormatter","Math","floor","marksStyle","v","predict","y","log","equation","onBadgeClick","badgeFormatter","included","marksNum","desc","AdvancedRange","bounds","Range","ModePanel","playbackMode","bpmStepDropdownOpen","byTimeInterval","byBarInterval","onBpmSliderChange","newMode","playBackMode","byBarSlider","byTimeSlider","setValue","barsNum","newPlaybackMode","ButtonDropdown","margin","onBpmStepChange","DropdownToggle","caret","DropdownMenu","DropdownItem","onBpmStepSelect","pushable","onBpmRangeChange","ButtonGroup","onModeChange","Collapse","renderSpeedRange","byBarFormatter","onBarIntervalChange","byTimeFormatter","onTimeIntervalChange","renderIncreaseBpmDropdown","30","100","200","300","400","500","600","onPlaybackChange","PresetsLib","InitPreset","Vis","values","redraw","ctx","canvas","getContext","clearRect","rect","barWidth","lineWidth","lineCap","len","x","h","strokeStyle","beginPath","moveTo","lineTo","stroke","window","addEventListener","updateDimensions","clientWidth","container","ReactGA","initialize","pageview","location","pathname","search","App","instrumentDropdownOpen","instrumentDropdownLabel","cycleDropdownOpen","playbackDirection","onBeatsPerStepChange","getUiState","sm","barManager","getAccents","setAccents","newBpm","document","handleKeyDown","planner","setPlan","setVis","keyCode","stepForward","preventDefault","stepBackward","newInstrument","getCurrentInstrumentLabel","onInstrumentChange","onInstrumentSelect","xs","renderInstrumentsDropDown","onAccentsChange","renderPresetsPane","href","rel","setProgress","beat","onModePanelChanged","renderPlaybackPane","onPresetSelect","modePanel","onPlanStep","isLastStep","isFirstStep","currentMode","setActive","renderLeftPane","renderRightPane","renderBottomPane","uiState","withCookies","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33567186.chunk.js","sourcesContent":["export const accentTypes = {\r\n\tACCENT_1: 0,\r\n\tACCENT_2: 1,\r\n\tACCENT_3: 2\r\n};\r\n\r\nexport const accentTypesArr = [\r\n\taccentTypes.ACCENT_1, accentTypes.ACCENT_2, accentTypes.ACCENT_3\r\n];","import {Sampler} from 'tone'\r\n\r\n\r\nclass SoundMachineInstrument extends Sampler {\r\n\r\n    constructor(props) {\r\n        // console.log('<SoundMachineInstrument>constructor', props.key)\r\n        var o = {\r\n            \"C3\" : props.samples[0],\r\n            \"C#3\" : props.samples[1],\r\n            \"D3\" : props.samples[2],\r\n        };\r\n        super(o,{\r\n            baseUrl: props.baseUrl || './audio/' + props.key + '/'\r\n        });\r\n        this.key = props.key;\r\n        this.label = props.label;\r\n    }\r\n}\r\n\r\nexport default SoundMachineInstrument;\r\n\r\n ","import { Component } from \"react\";\r\nimport SoundMachineInstrument from \"./SoundMachineInstrument\"\r\nimport Tone from 'tone'\r\nexport const instruments = {\r\n\tTABLA: \"tabla\",\r\n    ELECTRO_KIT: \"electrokit\",\r\n    METRONOME: \"metronome\"\t// ACOUSTIC_KIT: \"acoustic_kit\"\r\n};\r\n\r\nclass InstrumentLib extends Component {\r\n\tstate = {};\r\n    lib = {};\r\n    currentInstrument = undefined\r\n    fft = undefined\r\n\r\n\r\n    constructor(defaultInstrument) {\r\n        super();\r\n    \r\n        //Tone.Buffer.on(\"load\", () => this.onBufferLoaded());\r\n\t\tvar tabla = new SoundMachineInstrument({\r\n            key: instruments.TABLA,\r\n            label: \"Tabla\",\r\n\t\t\tsamples: [\"dha-slide.wav\", \"dhin-slide.wav\", \"tin.wav\"]\r\n        });\r\n        this.lib[ tabla.key ] = tabla;\r\n    \r\n        var electro = new SoundMachineInstrument({\r\n            key: instruments.ELECTRO_KIT,\r\n            label: 'Electronic Kit',\r\n\t\t\tsamples: [\"Kick.wav\", \"HiHat.wav\", \"Snare.wav\"]\r\n        });\r\n        this.lib[ electro.key ] = electro;\r\n\r\n        var metronome = new SoundMachineInstrument({\r\n            key: instruments.METRONOME,\r\n            label: \"Metronome\",\r\n            samples: [\"tap.wav\", \"down.wav\",\"up.wav\"]\r\n        })\r\n\r\n        this.lib[ metronome.key ] = metronome;\r\n        \r\n\r\n        this.setInstrument(defaultInstrument)\r\n        \r\n        // console.log('<InstrumentLib>done constructor')\r\n\r\n        this.fft = new Tone.FFT(128);\r\n        \r\n        // connect instruments to FFT analyzer\r\n        electro.fan(this.fft).toMaster();\r\n        tabla.fan(this.fft).toMaster();\r\n        metronome.fan(this.fft).toMaster();\r\n    }\r\n\r\n    setInstrument(key) {\r\n        if (this.lib[key] === undefined) {\r\n            throw new Error(\"InstrumentLib has no such instrument with given key: \" + key)\r\n        }\r\n        this.currentInstrument = key;\r\n    }\r\n \r\n    getInstrument() {\r\n        if (this.lib[this.currentInstrument] === undefined) {\r\n            throw new Error(\"There is no such instrument in InstrumentLib: \" + this.currentInstrument)\r\n        }\r\n        return this.lib[this.currentInstrument];\r\n    }\r\n\r\n\t// render() {\r\n\t// \treturn <div />;\r\n\t// }\r\n}\r\nexport default InstrumentLib;\r\n","export const playModes = {\r\n\tBY_BAR: \"by_bar\",\r\n\tBY_TIME: \"by_time\",\r\n\tSTABLE: \"stable\"\r\n};","import React, { Component } from \"react\";\r\nimport Tone from \"tone\";\r\nimport { accentTypes } from \"./AccentTypes\";\r\nimport InstrumentLib from \"./InstrumentLib\";\r\nimport { Button } from 'reactstrap'\r\nimport { playModes } from \"./PlayModes\";\r\n\r\nclass SoundMachine extends Component {\r\n\r\n\taccentNotes = [\"C3\", \"C#3\", \"D3\"]; // this stay in sync with AccentTypes\r\n\r\n\tinstrumentLib = undefined;\r\n\r\n\tcurrentBeat = 0;\r\n\tbeatsPerStep = 4;\r\n\r\n\tprogressRefreshRate = 1000 / 60; // fps\r\n\r\n\tscore = [\"C3\", \"C#3\", \"C#3\", \"C#3\"];\r\n\r\n\tstate = {\r\n\t\tisPlaying: false\r\n\t};\r\n\r\n\taccents = [accentTypes.ACCENT_1]; // default with accent on first beat\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t// init instruments library\r\n\t\tthis.instrumentLib = new InstrumentLib(this.props.instrument)\r\n\t}\r\n\r\n\tonBufferError() {\r\n\t\tthrow new Error(\"Some buffers weren't found\")\r\n\t}\r\n\r\n\tonStop() {\r\n\t\t// console.log('onStop')\r\n\t\tthis.props.onToggle(this.state.isPlaying)\r\n\r\n\t\tclearInterval(this.stepProgressUpdateTimer);\r\n\t}\r\n\r\n\tonStart() {\r\n\t\tthis.props.onToggle(this.state.isPlaying)\r\n\r\n\t\tthis.stepProgressUpdateTimer = setInterval(\r\n\t\t\t() => this.updateProgress(),\r\n\t\t\tthis.progressRefreshRate\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// reload/debug bell\r\n\t\tvar synth = new Tone.Synth().toMaster();\r\n\t\tsynth.triggerAttackRelease(\"A2\");\r\n\r\n\t\tTone.Buffer.on(\"error\", () => this.onBufferError());\r\n\r\n\t\tTone.Transport.on('stop', () => this.onStop());\r\n\t\tTone.Transport.on('start', () => this.onStart());\r\n\t\t// Tone.Transport.on('pause', () => console.log('TRANSPORT.pause'));\r\n\t\t// Tone.Transport.on('start', () => console.log('TRANSPORT.start'));\r\n\t\tTone.Transport.on('loop', (time) => this.props.onLoopEnd(time));\r\n\r\n\t\tTone.context.latencyHint = \"playback\";\r\n\r\n\t\tTone.Transport.timeSignature = 4;// [this.beatsPerStep, 4];\r\n\r\n\t\tTone.Transport.loop = true;\r\n\t\tTone.Transport.loopEnd = \"1m\"\r\n\r\n\t\tthis.loop = new Tone.Loop((time) => this.repeat(time), \"4n\");\r\n\t\tthis.loop.start()\r\n\t\t// console.log('Transport loopEnd set to', Tone.Transport.loopEnd)\r\n\r\n\t\t//Tone.Transport.scheduleRepeat((time) => this.repeat(time), \"4n\");\r\n\r\n\r\n\t}\r\n\r\n\tupdateProgress() {\r\n\t\tthis.props.onProgress(Tone.Transport.progress);\r\n\r\n\t\tif (this.vis) {\r\n\t\t\tthis.vis.drawFFT(this.instrumentLib.fft.getValue())\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetStep(step) {\r\n\t\t// console.log(\"<SM>store step:\", step)\r\n\r\n\t\tif (step === this.currentStep) {\r\n\t\t\t// console.log('step didnt changed so continue only')\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.currentStep = step;\r\n\r\n\t\tif (this.state.isPlaying === true) {\r\n\t\t\t// console.log(\"<SM>execute step:\", step)\r\n\t\t\tthis.executeStep(step)\r\n\t\t}\r\n\t\treturn this.currentStep.bpm\r\n\t}\r\n\r\n\texecuteStep = (step) => {\r\n\t\t// console.log('executeStep ', step)\r\n\r\n\t\t\r\n\t\tif (this.lastStep !== step) {\r\n\t\t\tthis.lastStep = step;\r\n\t\t\tthis.currentStep = step;\r\n\r\n\t\t\tif (this.getBpm() !== step.bpm) {\r\n\t\t\t\tthis.setBpm(step.bpm)\r\n\t\t\t}\r\n\r\n\t\t\tconst newLE =  this.currentStep.playMode === playModes.BY_TIME ?  step.duration : step.duration + 'm';\r\n\t\t\t// console.log('new Loop End', newLE)\r\n\t\t\tTone.Transport.setLoopPoints(0,  newLE);\r\n\t\t\tTone.Transport.lastLoopDuration = this.currentStep.duration;\r\n\t\t}\r\n\r\n\r\n\t\tif (Tone.Transport.state === 'stopped') {\r\n\t\t\tTone.Transport.start(\"+0.01\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trepeat = (time) => {\r\n\t\tconst idx = this.currentBeat++ % this.beatsPerStep;\r\n\r\n\t\tconst note = this.score[idx];\r\n\r\n\t\t// make sound\r\n\t\tthis.instrumentLib.getInstrument().triggerAttack(note, time);\r\n\r\n\r\n\r\n\r\n\t\t// draw stuff\r\n\t\tTone.Draw.schedule(() => this.onBeat(idx), time)\r\n\t}\r\n\r\n\tsetInstrument(instrumentKey) {\r\n\t\tthis.instrumentLib.setInstrument(instrumentKey);\r\n\t}\r\n\r\n\tgetCurrentInstrumentLabel() {\r\n\t\treturn this.instrumentLib.getInstrument().label;\r\n\t}\r\n\r\n\tsetBpm = bpm => {\r\n\r\n\t\tif (isNaN(bpm) || bpm <= 0 || bpm > 1000) {\r\n\t\t\tthrow new Error(\"Invalid BPM value: \" + bpm)\r\n\t\t}\r\n\r\n\t\tif (bpm !== Tone.Transport.bpm.value) {\r\n\t\t\tTone.Transport.bpm.value = bpm;\r\n\t\t\tTone.Transport.loopEnd = \"1m\"\r\n\t\t\t// console.log('bpm changed to', bpm)\r\n\t\t}\r\n\t};\r\n\r\n\tsetBeatsPerStep = newBps => {\r\n\t\t// console.log(\"<SoundMachine>setBeatsPerStep\", newBps)\r\n\r\n\r\n\t\tthis.beatsPerStep = newBps;\r\n\r\n\t\t// remove if needed\r\n\t\twhile (this.score.length > newBps) {\r\n\t\t\tthis.score.pop();\r\n\t\t}\r\n\r\n\t\t// add if needed\r\n\t\twhile (this.score.length < newBps) {\r\n\t\t\tthis.score.push(accentTypes.ACCENT_1)\r\n\t\t}\r\n\r\n\t\tTone.Transport.timeSignature = newBps;//[newBps, 4];\r\n\t\tTone.Transport.loop = true;\r\n\r\n\t\t// this will refresh visualisation\r\n\t\tthis.setState({ beatsPerStep: newBps })\r\n\t};\r\n\r\n\tonBeat = (currentBeat) => {\r\n\t\tthis.props.onBeat(currentBeat);\r\n\r\n\t\t// this.fft.connect(Tone.Master);\r\n\r\n\t\t// console.log('beat', this.fft.getValue())\r\n\t}\r\n\r\n\tsetAccents(accentTypesArr) {\r\n\t\tthis.accents = accentTypesArr;\r\n\r\n\t\tfor (let i = 0; i < this.score.length; i++) {\r\n\t\t\t// by default 2 will be the tick note\r\n\t\t\tlet note = this.accentNotes[accentTypes.ACCENT_2];\r\n\r\n\t\t\t// if accent for this step is specified set it here\r\n\t\t\tif (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_1\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_1];\r\n\t\t\t} else if (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_3\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_3];\r\n\t\t\t}\r\n\t\t\tthis.score[i] = note;\r\n\t\t}\r\n\t}\r\n\r\n\thandleStartStop = () => {\r\n\t\t// console.log(\"<SM>HandleStartStop, state:\", Tone.Transport.state)\r\n\r\n\t\tif (Tone.Transport.state === 'started') {\r\n\t\t\tthis.stop();\r\n\r\n\t\t} else {\r\n\t\t\tthis.start(this.currentStep);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\r\n\t\t\t<Button\r\n\t\t\t\toutline\r\n\t\t\t\tcolor=\"light\"\r\n\t\t\t\tonClick={() => this.handleStartStop()}\r\n\t\t\t\tblock\r\n\t\t\t\tactive={this.state.isPlaying}\r\n\t\t\t>\r\n\t\t\t\tStart / Stop\r\n\t\t\t</Button>\r\n\r\n\t\t\t// <div style={{width: '100%'}}>\r\n\t\t\t// \t{/* <div>Sound is {this.state.isPlaying === true ? \"playing\" : \"stopped\"}</div> */}\r\n\t\t\t// \t{/* <SimpleVis ref=\"vis\" beats={this.state.beatsPerStep}/> */}\r\n\t\t\t// </div>\r\n\t\t);\r\n\t}\r\n\r\n\tsetVis(vis) {\r\n\t\tthis.vis = vis;\r\n\t}\r\n\tstop() {\r\n\t\t// console.log('<SM>stop')\r\n\t\tthis.setState({ isPlaying: false });\r\n\t\tthis.currentBeat = 0;\r\n\t\tTone.Transport.stop();\r\n\t}\r\n\r\n\tstart(step) {\r\n\t\t// console.log('<SM>Start')\r\n\t\tthis.setState({ isPlaying: true }, this.executeStep(step));\r\n\r\n\t}\r\n\r\n\tgetBpm = () => {\r\n\t\treturn Tone.Transport.bpm.value;\r\n\t};\r\n}\r\n\r\nexport default SoundMachine;\r\n\r\n\r\nSoundMachine.defaultProps = {\r\n\tbeatsPerStep: 4,\r\n\tonLoopEnd: function (time) { },\r\n\tonToggle: function (state) { },\r\n\tonProgress: function (progress) { }\r\n};","import React, { Component } from 'react';\r\nimport {Container} from 'reactstrap';\r\n\r\nclass SimpleProgress extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( <Container className=\"SimpleProgress\">\r\n            <div className=\"bar\" style={{width: this.props.value  + \"%\", display: 'block'}} />\r\n        </Container> );\r\n    }\r\n}\r\n \r\nexport default SimpleProgress;","const Utils = {\r\n    padTime: function(t) {\r\n\t\treturn t < 10 ? \"0\" + t : t;\r\n\t},\r\n\tformatTime: function(timeInSeconds) {\r\n\t\t//{this.leadingZeroCheck(now.getMinutes())}:{now.getSeconds()} --\r\n\t\tlet t = new Date(0, 0, 0, 0, 0, 0, 0);\r\n\t\tt.setSeconds(timeInSeconds);\r\n\t\tlet m = t.getMinutes();\r\n\t\tlet o = \"\";\r\n\t\tif (m !== 0) {\r\n\t\t\to += t.getMinutes(); //this.padTime(t.getMinutes());\r\n            o += \":\";\r\n            o += \"\" + Utils.padTime(t.getSeconds());\r\n        }\r\n        else {\r\n            o += t.getSeconds();\r\n        }\r\n\t\treturn o;\r\n    }\r\n}\r\n\r\nexport default Utils;","import React, { Component } from \"react\";\r\nimport { Badge } from \"reactstrap\";\r\nimport { playModes } from \"./PlayModes\";\r\nimport SimpleProgress from \"./SimpleProgress\";\r\nimport Utils from \"./Utils\";\r\n\r\nclass Planner extends Component {\r\n\tstate = {\r\n\t\tbars: [],\r\n\t\tstepProgress: 0,\r\n\t\tisPaused: false\r\n\t};\r\n\r\n\ttimer = {\r\n\t\tref: null,\r\n\t\tstartTime: null\r\n\t};\r\n\tstepsCounter = 0;\r\n\t// stepProgressUpdateInterval = 1000 / 30; // 30 fps\r\n\r\n\tmakePlan(s) {\r\n\t\tlet segments = [];\r\n\r\n\t\tif (s.playMode === playModes.BY_BAR) {\r\n\t\t\tconst min = s.bpmRange[0];\r\n\t\t\tconst max = s.bpmRange[1];\r\n\t\t\tlet bpm = min;\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tlet segment = {\r\n\t\t\t\t\tbpm: bpm,\r\n\t\t\t\t\tduration: s.interval,\r\n\t\t\t\t\tend: s.interval \t// TODO <--- remove this \r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (s.playMode === playModes.BY_TIME) {\r\n\t\t\tconst min = s.bpmRange[0];\r\n\t\t\tconst max = s.bpmRange[1];\r\n\t\t\tlet bpm = min;\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tlet segment = {\r\n\t\t\t\t\ttime: i * s.interval,\r\n\t\t\t\t\tstart: i * s.interval,\r\n\t\t\t\t\tend: i * s.interval + s.interval,\r\n\t\t\t\t\tduration: s.interval,\r\n\t\t\t\t\tbpm: bpm\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t} else if (s.playMode === playModes.STABLE) {\r\n\t\t\tlet segment = {\r\n\t\t\t\ttime: Infinity, // TODO <--remove\r\n\t\t\t\tduration: Infinity,\r\n\t\t\t\tbpm: s.stableBpmSlider\r\n\t\t\t};\r\n\t\t\tsegments.push(segment);\r\n\t\t}\r\n\t\treturn segments;\r\n\t}\r\n\r\n\t// TODO: this is ugly\r\n\tsetPlan(uiStateObject) {\r\n\t\t// debugger\r\n\t\tconst plan = this.makePlan(uiStateObject);\r\n\r\n\t\t// console.log(\"<Planner>setPlan\", plan);\r\n\t\tvar bars = [];\r\n\r\n\t\tlet totalPlanTime = 0;\r\n\t\tconst playMode = uiStateObject.playMode;\r\n\t\tlet i = 0;\r\n\r\n\t\tswitch (uiStateObject.playMode) {\r\n\t\t\tcase playModes.BY_BAR:\r\n\t\t\t\tfor (i = 0; i < plan.length; i++) {\r\n\t\t\t\t\tconst bar = {\r\n\t\t\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\t\t\tduration: plan[i].end,\r\n\t\t\t\t\t\tend: plan[i].end,\r\n\t\t\t\t\t\tstep: this.stepsCounter++,\r\n\t\t\t\t\t\tplayMode: playModes.BY_BAR\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\ttotalPlanTime +=\r\n\t\t\t\t\t\t(60 / plan[i].bpm) *\r\n\t\t\t\t\t\tuiStateObject.beatsPerStep *\r\n\t\t\t\t\t\tplan[i].end;\r\n\t\t\t\t\tbars.push(bar);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase playModes.BY_TIME:\r\n\t\t\t\tfor (i = 0; i < plan.length; i++) {\r\n\t\t\t\t\tconst bar = {\r\n\t\t\t\t\t\ttime: plan[i].time,\r\n\t\t\t\t\t\tduration: plan[i].end - plan[i].time,\t// TODO: remove other unnecesary parameters\r\n\t\t\t\t\t\ttimeEnd: plan[i].end,\r\n\t\t\t\t\t\tsegmentDuration: plan[i].end - plan[i].time,\r\n\t\t\t\t\t\tstartTimeFormatted: Utils.formatTime(plan[i].start),\r\n\t\t\t\t\t\tendTimeFormatted: Utils.formatTime(plan[i].end),\r\n\t\t\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\t\t\tplayMode: playModes.BY_TIME,\r\n\t\t\t\t\t\tstep: this.stepsCounter++\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\ttotalPlanTime += plan[i].end;\r\n\r\n\t\t\t\t\tbars.push(bar);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase playModes.STABLE:\r\n\t\t\t\ttotalPlanTime = Infinity;\r\n\t\t\t\tbars.push({\r\n\t\t\t\t\tbpm: plan[0].bpm,\r\n\t\t\t\t\tduration: Infinity,\r\n\t\t\t\t\tplayMode: playModes.STABLE,\r\n\t\t\t\t\ttime: Infinity,\r\n\t\t\t\t\tstep: 0\r\n\t\t\t\t});\r\n\t\t\t\t// console.log(\"plan set to play at {0} bpm\", plan[0].bpm);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// update to new state\r\n\t\tthis.stepsCounter = 0;\r\n\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({\r\n\t\t\t\ttotalPlanTime: totalPlanTime,\r\n\t\t\t\tcurrentStep: 0,\r\n\t\t\t\tbars: bars,\r\n\t\t\t\tplayMode: playMode\r\n\t\t\t}),\r\n\t\t\t() => this.stepChanged()\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\t\t// console.log(\"lockBpm\", this.props.lockBpm);\r\n\t\tthis.pause();\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tsetStep(stepIdx) {\r\n\t\t// console.log('this.state.currentStep !== stepIdx',this.state.currentStep , stepIdx)\r\n\r\n\t\tif (this.state.currentStep !== stepIdx) {\r\n\t\t\tthis.setState({currentStep: stepIdx}, this.stepChanged)\r\n\t\t}\r\n\t}\r\n\r\n\tisLastStep() {\r\n\t\treturn this.state.currentStep === this.state.bars.length -1;\r\n\t}\r\n\t\r\n\tisFirstStep() {\r\n\t\treturn this.state.currentStep === 0;\r\n\t}\r\n\r\n\r\n\tstepForward() {\r\n\t\t// console.log(\"<Planner>stepForward()\")\r\n\t\t// check if we're not at the end of plan\r\n\t\tif (this.state.currentStep + 1 < this.state.bars.length) {\r\n\t\t\tthis.setStep(this.state.currentStep + 1)\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// console.log('no more steps')\r\n\t\t}\r\n\t}\r\n\r\n\tstepBackward() {\r\n\t\t// console.log(\"<Planner>stepBackward()\")\r\n\r\n\r\n\t\tif (this.state.currentStep - 1 >= 0) {\r\n\t\t\tthis.setStep(this.state.currentStep - 1)\r\n\t\t}\r\n\t}\r\n\r\n\t// onInterval() {\r\n\t// \tthis.stepForward();\r\n\t// \t// if (this.timer) {\r\n\t// \t// \t// set time when we changed step to be able to render progress easily\r\n\t// \t// \tthis.timer.startTime = new Date();\r\n\t// \t// }\r\n\t// }\r\n\r\n\tstart() {\r\n\t\t\r\n\t}\r\n\r\n\tsetProgress(progress) {\r\n\t\tthis.setState({stepProgress: progress});\r\n\t}\r\n\t\r\n\tstepChanged() {\r\n\t\t// console.log(\"<Planner>stepChanged\")\r\n\t\tconst step = this.getCurrentStep();\r\n\t\tthis.props.onStep(step);\r\n\t}\r\n\r\n\tresetStep() {\r\n\t\t// console.log('<Planner> resetStep()')\r\n\t\tthis.setStep(0)\r\n\t}\r\n\r\n\tgetCurrentStep() {\r\n\t\tif (this.state.currentStep >= this.state.bars.length) {\r\n\t\t\tthrow new Error(\"Trying to get step that doesn't exists\");\r\n\t\t}\r\n\t\treturn this.state.bars[this.state.currentStep];\r\n\t}\r\n\r\n\tbarRender = b => {\r\n\t\tconst cls = this.state.currentStep === b.step ? \"current-step\" : \"\";\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => this.setStep(b.step)}\r\n\t\t\t\tclassName={\"step \" + cls}\r\n\t\t\t\tkey={\"key_\" + b.bpm}\r\n\t\t\t>\r\n\t\t\t\t{b.segmentDuration !== undefined\r\n\t\t\t\t\t? Utils.formatTime(b.segmentDuration.toFixed(0)) + \" \"\r\n\t\t\t\t\t: b.end + \" bars \"}\r\n\t\t\t\tat {b.bpm.toFixed(0)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tformatTime(date) {\r\n\t\treturn date.getMinutes() + \":\" + date.getSeconds();\r\n\t}\r\n \r\n\trender() {\r\n\t\tif (this.state.bars.length === 0) {\r\n\t\t\treturn <div>No plan</div>;\r\n\t\t}\r\n\t\telse if (this.state.bars[0].time === Infinity) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{/* Playing at constant speed {this.state.bars[0].bpm} bpm */}\r\n\t\t\t\t\t<h2><Badge color=\"dark\">BPM: {this.props.currentBpm}</Badge></h2>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Planner\">\r\n\t\t\t\t<h2><Badge color=\"dark\">BPM: {this.props.currentBpm}</Badge></h2>\r\n\t\t\t\t{/* <div>Next step in {this.state.stepProgress.toFixed(1)} seconds</div> */}\r\n\t\t\t\t<SimpleProgress value={this.state.stepProgress * 100} />\r\n\r\n\t\t\t\t{/* <Button onClick={() => this.togglePause()}>\r\n\t\t\t\t\tisPaused:\r\n\t\t\t\t\t{this.state.isPaused === true ? \"paused\" : \"normal\"}\r\n\t\t\t\t</Button> */}\r\n\r\n\t\t\t\t<div style={this.props.lockBpm ? { opacity: 0.5 } : {}}>\r\n\t\t\t\t\t{this.state.bars.map(bar => this.barRender(bar))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tTotal time: {Utils.formatTime(this.state.totalPlanTime)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Planner;\r\n\r\nPlanner.defaultProps = {\r\n\tplayMode: playModes.BY_BAR,\r\n\tcurrentStep: 0,\r\n\tonStep: function(step) {}\r\n};\r\n","import React from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { Badge  } from \"reactstrap\";\r\n// import {Container, Row, Col} from 'reactstrap'\r\n\r\nclass AdvancedSlider extends Slider {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t// onClick={this.onBadgeClick}\r\n\t\t\t\t\t\tclassName=\"d-i\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.value}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ height: \"30px\" }}>\r\n\t\t\t\t\t<div>{super.render()}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonBadgeClick() {\r\n\t\t// TODO attach editorInPlace\r\n\t}\r\n}\r\n\r\nexport default AdvancedSlider;\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nclass Accent extends Component {\r\n\tstate = {\r\n\t\tisCurrent: false\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={\"Accent \" + (this.state.isCurrent === true ? \"active\" : \"\")}  onClick={this.props.onClick}>\r\n\t\t\t\t<div className={\"type\" + this.props.type}></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\ttoggleCurrent() {\r\n\t\tthis.setState({isCurrent: !this.state.isCurrent})\r\n\t}\r\n}\r\n\r\nexport default Accent;\r\n","import React, { Component } from \"react\";\r\nimport { accentTypesArr } from \"./AccentTypes\";\r\nimport Accent from \"./Accent\";\r\n\r\nclass BarManager extends Component {\r\n\tstate = {\r\n\t\tbars: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state.bars = props.defaultValue;\r\n\t}\r\n\r\n\tsetAccents(accents, beatsPerStep) {\r\n\t\tthis.setState({ bars: accents }, this.props.onAfterChange);\r\n\t}\r\n\r\n\thandleCellClick(selected) {\r\n\t\tlet newBars = [...this.state.bars];\r\n\t\t\r\n\t\tconst type = newBars[selected];\r\n\t\t// set new type\r\n\t\tnewBars[selected] = accentTypesArr[(type + 1) % 3];;\r\n\t\t\r\n\t\tthis.setState({bars: newBars}, this.props.onAfterChange)\r\n\t}\r\n\r\n\tgetAccents() {\r\n\t\treturn this.state.bars;\r\n\t}\r\n\r\n\tsetActive(idx) {\r\n\t\t// unselect previous element\r\n\t\tif (this.lastActiveAccent) {\r\n\t\t\tthis.lastActiveAccent.toggleCurrent();\r\n\t\t\tthis.lastActiveAccent = undefined\r\n\t\t}\r\n\t\t// select new \r\n\t\tconst el = this.refs[\"accent\" + idx];\r\n\r\n\t\t// make sure it exits though\r\n\t\tif (el) {\r\n\t\t\tel.toggleCurrent();\r\n\t\t\tthis.lastActiveAccent = el;\r\n\t\t}\r\n\t}\r\n \r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{this.state.bars.map((bar, idx) => (\r\n\t\t\t\t\t<Accent ref={\"accent\" + idx}\r\n\t\t\t\t\t\tkey={\"accent\" + idx}\r\n\t\t\t\t\t\ttype={bar}\r\n\t\t\t\t\t\tonClick={() => this.handleCellClick(idx)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BarManager;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n\tInput,\r\n\tButton,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tModalFooter\r\n} from \"reactstrap\";\r\n\r\nclass EditPresetModal extends Component {\r\n\tstate = {\r\n\t\tmodal: false,\r\n\t\tpreset: null,\r\n\t\tshowDelete: false\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmodal: false\r\n\t\t};\r\n\t\tthis.toggle = this.toggle.bind(this);\r\n\t}\r\n\r\n\ttoggle() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tmodal: !prevState.modal\r\n\t\t}));\r\n\t}\r\n\r\n\thandleSave() {\r\n\t\tconst preset = this.state.preset;\r\n\t\tconst title = this.state.preset.title;\r\n\t\tif (title && title.length > 0) {\r\n\t\t\tthis.props.onSave(title, preset);\r\n\t\t\tthis.toggle();\r\n\t\t}\r\n\t}\r\n\r\n\tedit(preset, showDelete) {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tpreset: preset,\r\n\t\t\t\tshowDelete: showDelete\r\n\t\t\t},\r\n\t\t\tthis.toggle\r\n\t\t);\r\n\t}\r\n\r\n\ttitleChanged(e) {\r\n\t\tconst newTitle = e.target.value;\r\n\t\tlet preset = { ...this.state.preset };\r\n\t\tpreset.title = newTitle;\r\n\t\tthis.setState({ preset });\r\n\t\t// this.setState()\r\n\t\t// this.setState({title: e.target.value}\r\n\t}\r\n\r\n\tonDeleteBtn() {\r\n\t\tthis.props.onDeleteBtn(this.state.preset);\r\n\t\tthis.toggle();\r\n\t}\r\n\r\n\trenderDelete() {\r\n\t\t \r\n\t\tif (this.state.showDelete === true) {\r\n\t\t\treturn(<Button color=\"warning\" onClick={() => this.onDeleteBtn()}>\r\n\t\t\t\tDelete\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{marginTop: '0.5em'}}\r\n\t\t\t\t\toutline\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\tonClick={this.props.onSaveBtn}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave current settings\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tisOpen={this.state.modal}\r\n\t\t\t\t\ttoggle={this.toggle}\r\n\t\t\t\t\tclassName={this.props.className}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggle}>Save Preset</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tonChange={e => this.titleChanged(e)}\r\n\t\t\t\t\t\t\tdefaultValue={\r\n\t\t\t\t\t\t\t\t(this.state.preset &&\r\n\t\t\t\t\t\t\t\t\tthis.state.preset.title) ||\r\n\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"code\">\r\n\t\t\t\t\t\t\t{JSON.stringify(this.state.preset)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => this.handleSave()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggle}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{this.renderDelete()}\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditPresetModal;\r\n\r\n\r\nEditPresetModal.defaultProps = {\r\n\tonDeleteBtn: function(preset) {},\r\n\tonSave: function(title, preset) {},\r\n\tonSaveBtn: function(e, idx) {}\r\n };\r\n","import React, { Component } from \"react\";\r\nimport {Container, Row, Col } from \"reactstrap\";\r\nimport EditPresetModal from \"./EditPresetModal\"\r\n\r\nclass PresetsManager extends Component {\r\n\tstate = {\r\n\t\tshowDelete: [],\r\n\t\tshowEdit: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.userPresets = this.props.cookies.get('userPresets');\r\n\t\t\r\n\t\tthis.state.showDelete = this.userPresets ? Array(this.userPresets.length).fill(false) : []\r\n\t\tthis.state.showEdit = this.userPresets ? Array(this.userPresets.length).fill(false) : []\r\n\t}\r\n\t\r\n\tonPresetClick(preset) {\r\n\t\tthis.props.onSelect(preset);\r\n\t}\r\n\r\n\tonSavePreset(title, o) {\r\n\t\tconst preset = {title: title, ...o}\r\n\t\t\r\n\t\tlet userPresets = this.props.cookies.get('userPresets');\r\n\r\n\t\tif (!userPresets) {\r\n\t\t\tuserPresets = [];\r\n\t\t}\r\n\t\t\r\n\t\t// overwrite by title \r\n\t\tlet idx = -1;\r\n\r\n\t\tfor (let i = 0 ; i < userPresets.length; i++) {\r\n\t\t\tif (userPresets[i].title.toLowerCase() === title.toLowerCase()) {\r\n\t\t\t\tidx = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (idx < 0) {\r\n\t\t\tuserPresets.push(preset)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tuserPresets[idx] = preset;\r\n\t\t}\r\n\r\n\t\tthis.saveInCookie(userPresets);\r\n\t}\r\n\r\n\tsaveInCookie(presets) {\r\n\t\tthis.props.cookies.set('userPresets', JSON.stringify(presets),{ path: '/' });\r\n\t\tthis.userPresets = presets;\r\n\t}\r\n\r\n\tshowDeleteBtn(e, idx) {\r\n\t\tlet showDelete = {...this.state};\r\n\t\tshowDelete[idx] = true;\r\n\t\tthis.setState({showDelete});\r\n\t}\r\n\r\n\tshowEditBtn(e, idx) {\r\n\t\tlet showEdit = {...this.state};\r\n\t\tshowEdit[idx] = true;\r\n\t\tthis.setState({showEdit});\r\n\t}\r\n\thideEditBtn(e) {\r\n\t\tthis.setState({showEdit: false})\r\n\t}\r\n\r\n\tonPresetDelete(preset) {\r\n\t\tlet idx = this.userPresets.indexOf(preset) \r\n\t\tif (idx < 0) {\r\n\t\t\tthrow new Error(\"Selected preset \" +  preset.title + \" has not been found in the store\" )\r\n\t\t}\r\n\t\tthis.userPresets.splice(idx,1);\r\n\t\tthis.saveInCookie(this.userPresets);\r\n\t}\r\n\r\n\tonPresetEdit(e, idx) {\r\n\t\t// console.log('preset EDIT',e,idx);\r\n\t\t/// prevent from triggerring onClick \r\n\t\te.stopPropagation()\r\n\t\t\r\n\r\n\t\tif (idx !== undefined) {\r\n\t\t\tthis.refs.presetEditor.edit(this.userPresets[idx], true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// new preset\r\n\t\t\tvar p = this.props.getPreset();\r\n\t\t\tthis.refs.presetEditor.edit(p)\r\n\t\t}\r\n\t}\r\n\r\n\tsetPreset(preset) {\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst userPresets = this.props.cookies.cookies.userPresets ?  JSON.parse(  this.props.cookies.cookies.userPresets ) : [];\r\n\t\t// // console.log('<PresetsManager>userPresets', userPresets)\r\n\t\treturn (\r\n\t\t\t<Container className=\"PresetsManager\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{this.props.presets.map((item, idx) => (\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Col className=\"preset\" hidden={item.isHidden}\r\n\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\tSaved presets:\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{userPresets.map((item, idx) => (\r\n\t\t\t\t\t\t<Col className=\"preset\"\r\n\t\t\t\t\t\t\tonMouseEnter={(e) => this.showEditBtn(e, idx)}\r\n\t\t\t\t\t\t\tonMouseLeave={(e) => this.hideEditBtn(e, idx)}\r\n\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t\t<div className='x' style={{visibility: this.state.showEdit[idx] ? '' : 'hidden'}} onClick={(e) => this.onPresetEdit(e,idx)}>Edit</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\t\t\t\t\t\r\n\t\t\t\t\t<EditPresetModal ref='presetEditor' onDeleteBtn={(preset) => this.onPresetDelete(preset)} onSaveBtn={(e,idx) => this.onPresetEdit(e,idx)} onSave={(title, preset) => this.onSavePreset(title, preset)}/>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PresetsManager;\r\n\r\nPresetsManager.defaultProps = {\r\n\tonSelect: function(preset) {}\r\n };","import React, { Component } from 'react';\r\nimport {Container, Row} from 'reactstrap'\r\n\r\nclass SimplePanel extends Component {\r\n    render() { \r\n        return (\r\n            <Container className={\"pane \" + this.props.className}>\r\n\t\t\t\t<Row className=\"pane-title\">{this.props.title}</Row>\r\n\t\t\t\t<Row className=\"pane-body\">{this.props.children}</Row>\r\n            </Container>\r\n            );\r\n    }\r\n}\r\n \r\nexport default SimplePanel;\r\n\r\n\r\nSimplePanel.defaultProps = {\r\n    title: 'title',\r\n    children: [],\r\n    className: ''\r\n };","export const playbackModes = {\r\n\tSTOP: \"stop\",\r\n\tCYCLE: \"cycle\",\r\n\tREPEAT: \"repeat\",\r\n\tCONTINUE: \"continue\"\r\n};","import React, { Component } from 'react';\r\nimport Slider from 'rc-slider'\r\nimport regression from 'regression';\r\nimport {Badge} from 'reactstrap'\r\n\r\n\r\nclass GeometricSlider extends Component {\r\n\tstate = {\r\n        value: undefined,\r\n        regression: undefined\r\n\t};\r\n\r\n    constructor(props) {\r\n        // TOneverDo \r\n        // currently it works only for min=1 only\r\n        super(props);\r\n        \r\n        const d = [[0,this.props.min],  [100, this.props.max]];\r\n        \r\n        this.state.regression = regression.exponential(d, {precision : 10 })\r\n        // console.log('slider func', this.state.regression.string)\r\n\r\n        this.prepareMarks();\r\n\r\n        this.state.value = this.props.defaultValue;\r\n        \r\n    }\r\n\r\n    prepareMarks() {\r\n        this.marks = {};\r\n        \r\n        for (let i = 0; i < this.props.marksAt.length; i++) {\r\n            this.marks[  this.findX(this.props.marksAt[i]) ]  = this.props.marksAt[i];\r\n        }\r\n    }\r\n\r\n    makeMark(value) {\r\n        return {\r\n            label: this.props.markFormatter(\r\n                Math.floor(value)\r\n            ),\r\n            style: this.props.marksStyle\r\n        };\r\n    }\r\n\r\n    onChange(v) {\r\n        // console.log('onChange', v)\r\n        const value =  Math.floor(this.state.regression.predict(v)[1]);\r\n        this.setState({value: value})\r\n        this.props.onChange(value)\r\n    }\r\n \r\n    findX(y) {\r\n        // y = e^bx ==> x = ln(y) / b\r\n        return Math.log(y)/this.state.regression.equation[1];\r\n    }\r\n    \r\n    setValue(v) {\r\n        this.setState({value: v})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            \t<div>\r\n\t\t\t\t\t<Badge  color=\"light\" onClick={this.onBadgeClick} className=\"d-i\">\r\n                        {this.props.badgeFormatter(this.state.value)}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n                <Slider ref=\"slider\" included={false} value={this.findX(this.state.value)} style={{height: '45px'}} onChange={(v) => this.onChange(v)} min={0} max={100} step={0.5} marks={this.marks}/>\r\n            </>\r\n        )\r\n\r\n    }\r\n    \r\n}\r\n \r\nexport default GeometricSlider;\r\n\r\nGeometricSlider.defaultProps = {\r\n    marksNum: 6,\r\n    marksStyle: {\r\n        color: '#ccc'\r\n    },\r\n    desc: '',\r\n    badgeFormatter: function(v) {return v;},\r\n    markFormatter: function(v) {return v;},\r\n    defaultValue: 50,\r\n    marksAt: []\r\n}","import React from \"react\";\r\nimport { Range } from \"rc-slider\";\r\nimport { Badge } from \"reactstrap\";\r\n\r\nclass AdvancedRange extends Range {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t// onClick={this.onBadgeClick}\r\n\t\t\t\t\t\tclassName=\"d-i\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.bounds[0]} - {this.state.bounds[1]}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n                <div style={{ height: \"30px\" }}>\r\n                {super.render()}\r\n                </div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AdvancedRange;\r\n","import React, { Component } from \"react\";\r\nimport SimplePanel from \"./SimplePanel\";\r\nimport {\r\n\tButtonGroup,\r\n\tButton,\r\n\tCollapse,\r\n\tButtonDropdown,\r\n\tDropdownToggle,\r\n\tDropdownItem,\r\n\tDropdownMenu\r\n} from \"reactstrap\";\r\nimport { playModes } from \"./PlayModes\";\r\nimport { playbackModes } from \"./PlaybackModes\";\r\nimport GeometricSlider from \"./GeometricSlider\";\r\nimport AdvancedRange from \"./AdvancedRange\"\r\nimport AdvancedSlider from \"./AdvancedSlider\"\r\nimport Utils from \"./Utils\";\r\n\r\nclass ModePanel extends Component {\r\n\tstate = {\r\n\t\tplaybackMode: playbackModes.STOP,\r\n\t\tplayMode: playModes.BY_TIME,\r\n\t\tbpmStep: 10,\r\n\t\tbpmStepDropdownOpen: false,\r\n\t\tbyTimeInterval: 5,\r\n\t\tbyBarInterval: 2,\r\n\t\tstableBpmSlider: 300,\r\n\t\tbpmRange: [100, 250]\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state.playMode = props.playMode;\r\n\t\tif (props.playMode === playModes.BY_BAR) {\r\n\t\t\tthis.state.byBarInterval = props.interval;\r\n\t\t} else {\r\n\t\t\tthis.state.byTimeInterval = props.interval;\r\n\t\t}\r\n\t\tthis.state.bpmStep = props.bpmStep;\r\n\t\tthis.state.bpmRange = props.bpmRange;\r\n\t\t// console.log('<ModePanel> constructor')\r\n\t}\r\n\r\n\tonModeChange(newMode) {\r\n\t\tthis.setState({ playMode: newMode }, this.props.onAfterChange);\r\n\t}\r\n\r\n\r\n\tonBpmRangeChange(bpmRange) {\r\n\t\t// console.log('<ModePanel>onBpmRangeChange(' + bpmRange[0] + ')')\r\n\t\tthis.setState({ bpmRange: bpmRange }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBpmSliderChange = (value) => {\r\n\t\t// console.log('onBpmSliderChange', value)\r\n\t\tthis.setState({ stableBpmSlider: value }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBpmStepChange() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tbpmStepDropdownOpen: !prevState.bpmStepDropdownOpen\r\n\t\t}));\r\n\t}\r\n\r\n\tonBpmStepSelect(value) {\r\n\t\tthis.setState({ bpmStep: value }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tgetValue() {\r\n\r\n\t\t// console.log('getValue', this.state.playbackMode)\r\n\r\n\t\tconst o = {\r\n\t\t\tplayMode: this.state.playMode,\r\n\t\t\tplaybackMode: this.state.playbackMode,\r\n\t\t\tinterval:\r\n\t\t\t\tthis.state.playMode === playModes.BY_BAR\r\n\t\t\t\t\t? this.state.byBarInterval\r\n\t\t\t\t\t: this.state.byTimeInterval,\r\n\t\t\tbpmStep: this.state.bpmStep,\r\n\t\t\tbpmRange: this.state.playMode !== playModes.STABLE ? this.state.bpmRange : this.props.bpmRange,//this.refs.bpmRange.getValue() : null,\r\n\t\t\tstableBpmSlider: this.state.stableBpmSlider\r\n\t\t};\r\n\t\t// debugger\r\n\t\treturn o;\r\n\t}\r\n\r\n\tsetValue(o) {\r\n\t\t// console.log(\"<ModePanel>setValue\", o)\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tplayMode: o.playMode,\r\n\t\t\t\tplayBackMode: o.playBackMode || this.state.playBackMode,\r\n\t\t\t\tbpmStep: o.bpmStep,\r\n\t\t\t\tbyBarInterval:\r\n\t\t\t\t\to.playMode === playModes.BY_BAR\r\n\t\t\t\t\t\t? o.interval\r\n\t\t\t\t\t\t: this.state.byBarInterval,\r\n\t\t\t\tbyTimeInterval:\r\n\t\t\t\t\to.playMode === playModes.BY_TIME\r\n\t\t\t\t\t\t? o.interval\r\n\t\t\t\t\t\t: this.state.byTimeInterval,\r\n\t\t\t\tbpmRange: o.bpmRange,\r\n\t\t\t\tstableBpmSlider: o.stableBpmSlider || this.state.stableBpmSlider\r\n\t\t\t},\r\n\t\t\tthis.props.onAfterChange\r\n\t\t);\r\n\r\n\r\n\t\tconst slider =\r\n\t\t\to.playMode === playModes.BY_BAR\r\n\t\t\t\t? this.refs.byBarSlider\r\n\t\t\t\t: this.refs.byTimeSlider;\r\n\t\tslider.setValue(o.interval);\r\n\r\n\t\tthis.refs.bpmRange.setState({ bounds: o.bpmRange })\r\n\t}\r\n\r\n\tonTimeIntervalChange(v) {\r\n\t\tthis.setState({ byTimeInterval: v }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBarIntervalChange(v) {\r\n\t\tthis.setState({ byBarInterval: v }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tbyBarFormatter(barsNum) {\r\n\t\tlet s = barsNum + \" \";\r\n\t\tif (barsNum === 1) {\r\n\t\t\ts += \"bar\";\r\n\t\t} else {\r\n\t\t\ts += \"bars\";\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\r\n\tbyTimeFormatter(time) {\r\n\t\tlet s = Utils.formatTime(time) + \" \";\r\n\r\n\t\tif (time === 1) {\r\n\t\t\ts += \"second\";\r\n\t\t} else if (time < 60) {\r\n\t\t\ts += \"seconds\";\r\n\t\t} else if (time < 120) {\r\n\t\t\ts += \"minute\";\r\n\t\t} else {\r\n\t\t\ts += \"minutes\";\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\r\n\tonPlaybackChange(newPlaybackMode) {\r\n\t\tthis.setState({ playbackMode: newPlaybackMode });\r\n\t}\r\n\r\n\trenderIncreaseBpmDropdown() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\tincrease speed by\r\n\t\t\t\t<ButtonDropdown\r\n\t\t\t\t\tstyle={{ margin: \"0px 5px\" }}\r\n\t\t\t\t\tisOpen={this.state.bpmStepDropdownOpen}\r\n\t\t\t\t\ttoggle={() => this.onBpmStepChange()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DropdownToggle caret size=\"sm\" outline color=\"light\">\r\n\t\t\t\t\t\t{this.state.bpmStep}\r\n\t\t\t\t\t</DropdownToggle>\r\n\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(5);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t5\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(10);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t10\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(20);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t20\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(30);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t30\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(50);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t50\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t</ButtonDropdown>\r\n\t\t\t\tbpm\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\trenderSpeedRange() {\r\n\r\n\t\t// console.log('renderSpeedRange', this.state.bpmRange[0])\r\n\t\treturn (<div>\r\n\t\t\tSpeed range\r\n\t\t\t<AdvancedRange\r\n\t\t\t\tref=\"bpmRange\"\r\n\t\t\t\tmin={30}\r\n\t\t\t\tmax={600}\r\n\t\t\t\tdefaultValue={[\r\n\t\t\t\t\tthis.state.bpmRange[0],\r\n\t\t\t\t\tthis.state.bpmRange[1]\r\n\t\t\t\t]}\r\n\t\t\t\tpushable={true}\r\n\t\t\t\tonAfterChange={(value) => this.onBpmRangeChange(value)}\r\n\t\t\t/>\r\n\t\t</div>);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SimplePanel className=\"ModePanel\" title=\"Mode\">\r\n\t\t\t\t<ButtonGroup size=\"sm\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.BY_BAR)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.BY_BAR}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBy bar\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.BY_TIME)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.BY_TIME}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBy time\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.STABLE)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.STABLE}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStable\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== playModes.STABLE}>\r\n\t\t\t\t\t{/* {this.state.playMode !== playModes.STABLE ? this.renderSpeedRange() : ''} */}\r\n\t\t\t\t\t{this.renderSpeedRange()}\r\n\t\t\t\t</Collapse>\r\n\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.BY_BAR}>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tIncrease speed every\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byBarSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byBarInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={this.byBarFormatter}\r\n\t\t\t\t\t\t\tonChange={v => this.onBarIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={301}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 5, 10, 20, 50, 100, 300]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.BY_TIME}>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tIncrease speed every\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byTimeSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byTimeInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={this.byTimeFormatter}\r\n\t\t\t\t\t\t\tmarkFormatter={Utils.formatTime}\r\n\t\t\t\t\t\t\tonChange={v => this.onTimeIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={600}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 5, 10, 30, 60, 120, 240, 600]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t{this.state.playMode !== playModes.STABLE ? this.renderIncreaseBpmDropdown() : ''}\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.STABLE}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tChoose bpm\r\n\r\n\t\t\t\t\t\t<AdvancedSlider\r\n\t\t\t\t\t\t\tref=\"stableBpmSlider\"\r\n\t\t\t\t\t\t\tincluded={false}\r\n\t\t\t\t\t\t\tmin={10}\r\n\t\t\t\t\t\t\tmax={600}\r\n\t\t\t\t\t\t\tmarks={{ 30: '30', 100: '100', 200: '200', 300: '300', 400: '400', 500: '500', 600: '600' }}\r\n\t\t\t\t\t\t\tvalue={this.state.stableBpmSlider}\r\n\t\t\t\t\t\t\tonChange={this.onBpmSliderChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== playModes.STABLE}>\r\n\t\t\t\t\t<div>After plan</div>\r\n\t\t\t\t\t<ButtonGroup size=\"sm\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(playbackModes.STOP)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === playbackModes.STOP}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tStop\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(playbackModes.CYCLE)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === playbackModes.CYCLE}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCycle back\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(playbackModes.CONTINUE)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === playbackModes.CONTINUE}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLast speed\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(playbackModes.REPEAT)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === playbackModes.REPEAT}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tStart over\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</SimplePanel>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModePanel;\r\n\r\nModePanel.defaultProps = {\r\n\tonAfterChange: null\r\n};\r\n","import {playModes} from \"./PlayModes\"\r\nimport {playbackModes} from \"./PlaybackModes\"\r\nimport { instruments } from \"./InstrumentLib\";\r\n\r\n\r\nexport const PresetsLib = [\r\n    {\r\n        title: \"4 beats every 4 bars\",\r\n        beatsPerStep: 4,\r\n        playMode: playModes.BY_BAR,\r\n        interval: 4,\r\n        bpmStep: 20,\r\n        bpmRange: [100, 400],\r\n        accents: [0, 1, 2, 1]\r\n    },\r\n    {\r\n        title: \"Jhaptal tabla\",\r\n        instrument: instruments.TABLA,\r\n\t\tbeatsPerStep: 10,\r\n\t\tbpmRange: [200, 400],\r\n        accents: [0, 1, 0, 0, 1, 2, 1, 0, 0, 1 ],\r\n        playMode: playModes.BY_TIME,\r\n        interval: 5*60,\r\n        bpmStep: 10\r\n    },\r\n    {title: \"Balkan 1\", \"bpmRange\":[241,400],\"beatsPerStep\":7,\"accents\":[0,1,2,0,1,2,1],\"instrument\":\"electrokit\",\"playMode\":\"by_bar\",\"interval\":20,\"bpmStep\":30},\r\n    {title: \"Balkan 2\", \"bpmRange\":[293,400],\"beatsPerStep\":7,\"accents\":[0,1,2,0,1,2,1],\"instrument\":\"tabla\",\"playMode\":\"by_bar\",\"interval\":300,\"bpmStep\":50},\r\n    {title: \"Groove 1\", \"bpmRange\":[222,262],\"beatsPerStep\":8,\"accents\":[0,2,1,2,1,0,1,1],\"instrument\":\"electrokit\",\"playMode\":\"by_time\",\"interval\":600,\"bpmStep\":50},\r\n    {title: \"Groove 2\", \"bpmRange\":[222,400],\"beatsPerStep\":8,\"accents\":[0,2,0,2,2,2,0,1],\"instrument\":\"electrokit\",\"playMode\":\"by_bar\",\"interval\":20,\"bpmStep\":50},\r\n\r\n\r\n];\r\n\r\nexport const InitPreset = {\r\n    title: \"INIT\",\r\n    instrument: instruments.TABLA,\r\n    beatsPerStep: 4,\r\n    bpmRange: [300, 400],\r\n    accents: [1, 0, 0, 0],\r\n    playMode: playModes.BY_TIME,\r\n    playbackMode: playbackModes.STOP,\r\n    interval: 10,\r\n    bpmStep: 50,\r\n    isHidden: true\r\n}","import React, { Component } from 'react';\r\n\r\nclass Vis extends Component {\r\n    state = {}\r\n    ctx;\r\n    width = 300;\r\n    height = 200;\r\n    values = [];\r\n\r\n    drawFFT(values) {\r\n        this.values = values;\r\n        this.redraw();\r\n    }\r\n\r\n    redraw() {\r\n        this.ctx = this.refs.canvas.getContext(\"2d\");\r\n        \r\n        // this.ctx.clearRect(0, 0,this.width,this.height);\r\n        // console.log('<Vis>redraw', this.width, this.height)\r\n        this.ctx.clearRect(0,0,this.width, this.height)\r\n        this.ctx.rect(0, 0, this.width, this.height);\r\n        // this.ctx.stroke();\r\n        \r\n        var max = -Infinity;\r\n        var min = Infinity;\r\n\r\n        if (this.values.length > 0) {\r\n            \r\n            const barWidth = this.width / (this.values.length+2);\r\n\r\n            // this.values store decibels for each freq in range [-140,0]\r\n            this.ctx.lineWidth = barWidth;\r\n            this.ctx.lineCap = \"round\";\r\n            for (let i = 0, len = this.values.length; i < len ; i++) {\r\n                // debugger\r\n                var x = (barWidth + 5)* i + barWidth / 2 ;\r\n                \r\n                var h = ((this.values[i] + 140) / 140) * this.height;\r\n\r\n\r\n                max = Math.max(max, this.values[i])\r\n                min = Math.min(min, this.values[i])\r\n                // this.ctx.fillStyle = \"rgba(255, 85, 85, \"+ (1 - i/(len+10)) + \")\";\r\n                // this.ctx.fillRect(x, this.height, barWidth, -h);\r\n                this.ctx.strokeStyle = \"rgba(255, 85, 85, \"+ (1 - i/(len+10)) + \")\";\r\n                this.ctx.beginPath();\r\n                this.ctx.moveTo(x, this.height );\r\n                this.ctx.lineTo(x, this.height - h);\r\n                // this.ctx.lineTo(70, 100);\r\n                \r\n                this.ctx.stroke();\r\n                \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // drawBar(val) {\r\n    //     // if (val > 0) {\r\n    //         console.log('val',val)\r\n    //     // }\r\n    //     // this.ctx.clearRect(0, 0, this.width, this., canvasHeight);\r\n    //     var barWidth = this.width / val.size;\r\n    //     debugger\r\n    //     for (var i = 0, len = values.length; i < len; i++){\r\n    //         var x = canvasWidth * (i / len);\r\n    //         var y = (values[i] + 140) * 2;\r\n    //         fftContext.fillStyle = \"rgba(0, 0, 0, \" + i/len + \")\";\r\n    //         fftContext.fillRect(x, canvasHeight - y, barWidth, canvasHeight);\r\n    //     }\r\n    // }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", () => this.updateDimensions());\r\n        this.updateDimensions()\r\n        this.redraw();\r\n    }\r\n\r\n    updateDimensions() {\r\n        let { clientWidth } = this.refs.container;\r\n        \r\n        this.refs.canvas.width = clientWidth;\r\n        // this.refs.canvas.height = clientHeight\r\n\r\n        this.width = clientWidth;\r\n        // this.height = clientHeight;\r\n \r\n        this.redraw();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div ref=\"container\">\r\n                    <canvas ref='canvas' height=\"200\"/>\r\n                </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Vis;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./components/SoundMachine\";\nimport SoundMachine from \"./components/SoundMachine\";\nimport Planner from \"./components/Planner\";\nimport \"rc-slider/assets/index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport {\n\tButtonDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem\n} from \"reactstrap\";\nimport AdvancedSlider from \"./components/AdvancedSlider\";\nimport BarManager from \"./components/BarManager\";\nimport { instruments } from \"./components/InstrumentLib\";\nimport PresetsManager from \"./components/PresetsManager\";\nimport ModePanel from \"./components/ModePanel\";\nimport { playModes } from \"./components/PlayModes\";\nimport { withCookies } from \"react-cookie\";\nimport { PresetsLib, InitPreset } from \"./components/PresetsLib\";\nimport { accentTypes } from \"./components/AccentTypes\";\nimport SimplePanel from \"./components/SimplePanel\";\nimport Vis from \"./components/Vis\"\nimport { playbackModes } from \"./components/PlaybackModes\";\nimport ReactGA from 'react-ga';\nReactGA.initialize('UA-151010848-1');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nclass App extends Component {\n\tstate = {\n\t\tcurrentBpm: 60,\n\t\tinstrument: instruments.ELECTRO_KIT,\n\t\tinstrumentDropdownOpen: false,\n\t\tinstrumentDropdownLabel: \"Electro kit\", // bit messy, why would we hardcode this here, it ought to be taken from instrumentLib\n\t\tcycleDropdownOpen: false\n\t};\n\n\tplaybackDirection = true; // true => forward, false => backward\n\n\tcomponentDidMount() {\n\t\t// initialize accents\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getAccents());\n\n\t\t// keyboard listeners\n\t\tdocument.addEventListener(\"keydown\", e => this.handleKeyDown(e));\n\n\t\t// initialize with UI settings\n\t\tthis.refs.planner.setPlan(this.getUiState());\n\n\t\t// this.refs.sm.setBpm(this.state.currentBpm)\n\t\t// this.initialized = true;\n\n\t\tthis.refs.sm.setVis(this.refs.vis)\n\t}\n\n\n\thandleKeyDown(e) {\n\t\t// console.log(\"key\", e);\n\t\tswitch (e.keyCode) {\n\t\t\tcase 32: // space\n\t\t\t\t// e.preventDefault();\n\t\t\t\tif (this.refs.sm.state.isPlaying) {\n\t\t\t\t\tthis.refs.planner.stepForward();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.refs.sm.handleStartStop();\n\t\t\t\t}\n\t\t\t\t// if (this.state.keysActive) {\n\t\t\t\t// \te.preventDefault();\n\t\t\t\t// }\n\n\t\t\t\tbreak;\n\t\t\tcase 38: // Arrow up\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.state.currentBpm < 600) {\n\t\t\t\t\tthis.setBpm(this.state.currentBpm + 10);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 40: // arrow down\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.state.currentBpm > 10) {\n\t\t\t\t\tthis.setBpm(this.state.currentBpm - 10);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 37: // Arrow left\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.refs.planner.stepBackward();\n\t\t\t\tbreak;\n\t\t\tcase 39: // Arrow right\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.refs.planner.stepForward();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tonInstrumentSelect(newInstrument) {\n\t\tthis.refs.sm.setInstrument(newInstrument);\n\t\tconst label = this.refs.sm.getCurrentInstrumentLabel();\n\t\t// trigger storing current instrument. Bit clunky...\n\n\n\t\tthis.setState({\n\t\t\tinstrument: newInstrument,\n\t\t\tinstrumentDropdownLabel: label\n\t\t}, this.getUiState);\n\n\n\t}\n\n\n\t// TODO: make it automatic\n\trenderInstrumentsDropDown() {\n\t\treturn (<ButtonDropdown\n\t\t\tisOpen={this.state.instrumentDropdownOpen}\n\t\t\ttoggle={() => this.onInstrumentChange()}\n\t\t>\n\t\t\t<DropdownToggle\n\t\t\t\tcaret\n\t\t\t\tsize=\"sm\"\n\t\t\t\toutline\n\t\t\t\tcolor=\"light\"\n\t\t\t>\n\t\t\t\t{this.state.instrumentDropdownLabel}\n\t\t\t</DropdownToggle>\n\t\t\t<DropdownMenu>\n\t\t\t\t<DropdownItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\tinstruments.TABLA\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tTabla\n\t\t\t\t</DropdownItem>\n\t\t\t\t<DropdownItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\tinstruments.ELECTRO_KIT\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tElectro Kit\n\t\t\t\t</DropdownItem>\n\t\t\t\t<DropdownItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\tinstruments.METRONOME\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tMetronome\n\t\t\t\t</DropdownItem>\n\t\t\t</DropdownMenu>\n\t\t</ButtonDropdown>);\n\n\t}\n\trenderPlaybackPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">PLAYBACK</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"3\">Instrument</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t{this.renderInstrumentsDropDown()}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Beats per step</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"beatsPerStep\"\n\t\t\t\t\t\t\tmin={2}\n\t\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\t\tdefaultValue={this.props.beatsPerStep}\n\t\t\t\t\t\t\tonAfterChange={() => this.onBeatsPerStepChange()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Accents</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<BarManager\n\t\t\t\t\t\t\tonAfterChange={() => this.onAccentsChange()}\n\t\t\t\t\t\t\tref=\"barManager\"\n\t\t\t\t\t\t\tdefaultValue={this.props.accents}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col xs=\"3\">Playback</Col>\n\t\t\t\t\t<Col>One Time/LoopBack/Repeat</Col>\n\t\t\t\t</Row> */}\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonModePanelChanged() {\n\t\t// console.log(\"<App>onModePanelChanged\")\n\t\tconst state = this.getUiState();\n\n\t\t// create new plan\n\t\tthis.refs.planner.setPlan(state);\n\t}\n\n\trenderBottomPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPresetsPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title={\"Keyboard controls\"} className=\"about\">\n\t\t\t\t\t\t\t<div><code>up/down</code> - adjust tempo</div>\n\t\t\t\t\t\t\t<div><code>left/right</code> - previous/next step according to plan</div>\n\t\t\t\t\t\t\t<div><code>space</code> - start/next step</div>\n\t\t\t\t\t\t</SimplePanel>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\t<div>By using this site you agree to the use of cookies to store user defined presets.</div>\n\t\t\t\t\t<div>Created using React and <a href=\"https://tonejs.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\">Tone.js</a>. Source code available <a  href=\"https://github.com/indiebubbler/metro\">here</a>. <br/>Contact dev at <a href=\"mailto:indiebubbler@gmail.com?subject=Feedback\">indiebubbler@gmail.com</a>.</div>\n\t\t\t\t</div>\n\t\t\t</Container>\n\n\t\t);\n\t}\n\n\tonProgress(progress) {\n\t\tthis.refs.planner.setProgress(progress)\n\t}\n\n\trenderLeftPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title=\"Control\">\n\t\t\t\t\t\t\t<SoundMachine\n\t\t\t\t\t\t\t\tref=\"sm\"\n\t\t\t\t\t\t\t\tbeatsPerStep={this.state.beatsPerStep}\n\t\t\t\t\t\t\t\tonLoopEnd={() => this.onLoopEnd()}\n\t\t\t\t\t\t\t\tonBeat={beat => this.onBeat(beat)}\n\t\t\t\t\t\t\t\tinstrument={this.state.instrument}\n\t\t\t\t\t\t\t\t// onToggle={(state) => this.onSoundMachineToggle(state)}\n\t\t\t\t\t\t\t\tonProgress={(progress) => this.onProgress(progress)}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t</SimplePanel>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ModePanel\n\t\t\t\t\t\t\tref=\"modePanel\"\n\t\t\t\t\t\t\tplayMode={this.props.playMode}\n\t\t\t\t\t\t\tinterval={this.props.interval}\n\t\t\t\t\t\t\tbpmStep={this.props.bpmStep}\n\t\t\t\t\t\t\tbpmRange={this.props.bpmRange}\n\t\t\t\t\t\t\t//bpmStableSlider={this.props.bpmStableSlider}\n\t\t\t\t\t\t\tcurrentBpm={this.state.currentBpm}\n\t\t\t\t\t\t\t// defaultValue={{playMode: this.props.playMode, interval: this.props.interval, bpmStep: this.props.bpmStep}}\n\t\t\t\t\t\t\tonAfterChange={() => this.onModePanelChanged()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPlaybackPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col>{this.renderCyclePane()}</Col>\n\t\t\t\t</Row> */}\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderPresetsPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">Presets</Row>\n\t\t\t\t<PresetsManager\n\t\t\t\t\tref=\"presetsManager\"\n\t\t\t\t\tcookies={this.props.cookies}\n\t\t\t\t\tpresets={PresetsLib}\n\t\t\t\t\tgetPreset={() => this.getUiState()}\n\t\t\t\t\tonSelect={preset => this.onPresetSelect(preset)}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonPresetSelect(preset) {\n\t\t// console.log(\"setting preset\", preset);\n\n\t\tthis.refs.beatsPerStep.setState({ value: preset.beatsPerStep });\n\n\t\tthis.refs.sm.setBeatsPerStep(preset.beatsPerStep);\n\n\t\tthis.onInstrumentSelect(preset.instrument || instruments.TABLA);\n\n\t\tthis.refs.barManager.setAccents(preset.accents, preset.beatsPerStep);\n\n\t\tthis.refs.modePanel.setValue(preset);\n\n\t}\n\n\trenderRightPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title={\"Plan\"}>\n\t\t\t\t\t\t\t<Planner\n\t\t\t\t\t\t\t\tcurrentBpm={this.state.currentBpm}\n\t\t\t\t\t\t\t\t// onChange={() => this.onPlanChanged()}\n\t\t\t\t\t\t\t\tonStep={step => this.onPlanStep(step)}\n\t\t\t\t\t\t\t\tref=\"planner\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</SimplePanel>\n\n\n\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title={\"Visualisation\"}>\n\t\t\t\t\t\t\t<Vis ref=\"vis\" />\n\t\t\t\t\t\t</SimplePanel>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonLoopEnd() {\n\n\t\tconst pm = this.refs.modePanel.state.playbackMode;\n\n\t\tswitch (pm) {\n\t\t\tcase playbackModes.CYCLE:\n\t\t\t\tif (this.refs.planner.isLastStep() || this.refs.planner.isFirstStep()) {\n\t\t\t\t\tthis.playbackDirection = !this.playbackDirection;\n\t\t\t\t}\n\t\t\t\tthis.playbackDirection === true ? this.refs.planner.stepForward() : this.refs.planner.stepBackward();\n\t\t\t\tbreak;\n\t\t\tcase playbackModes.REPEAT:\n\t\t\t\tif (this.refs.planner.isLastStep()) {\n\t\t\t\t\tthis.refs.planner.setStep(0)\n\t\t\t\t} else {\n\t\t\t\t\tthis.refs.planner.stepForward();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase playbackModes.CONTINUE:\n\t\t\t\tif (this.refs.planner.isLastStep()) {\n\t\t\t\t\tlet currentMode = this.refs.modePanel.getValue();\n\t\t\t\t\tcurrentMode.playMode = playModes.STABLE;\n\t\t\t\t\tcurrentMode.stableBpmSlider = this.state.currentBpm;\n\t\t\t\t\tthis.refs.modePanel.setValue(currentMode);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.refs.planner.stepForward();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase playbackModes.STOP:\n\t\t\t\tif (this.refs.planner.isLastStep()) {\n\t\t\t\t\tthis.refs.sm.handleStartStop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.refs.planner.stepForward();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.refs.planner.stepForward();\n\t\t}\n\t}\n\n\tonBeat(idx) {\n\t\tthis.refs.barManager.setActive(idx);\n\t}\n\n\trender() {\n\t\t// set the title with current BPM\n\t\tdocument.title =\n\t\t\t\"BPM: \" + this.state.currentBpm.toFixed(0) + \" | SpeedTrainer\"\n\n\t\t// render everything else\n\t\treturn (\n\t\t\t<div className=\"App\">\n\n\t\t\t\t<Container className=\"app-container\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* left pane with controls */}\n\t\t\t\t\t\t\t{this.renderLeftPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>{this.renderRightPane()}</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* right pane with examples and plan*/}\n\t\t\t\t\t\t\t{this.renderBottomPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tonBeatsPerStepChange = () => {\n\t\t// plan doesn't change here, just the beats per step amount\n\t\tconst newBps = this.getUiState().beatsPerStep;\n\n\t\tif (newBps !== this.refs.sm.beatsPerStep) {\n\t\t\tconst accents = this.refs.barManager.getAccents();\n\n\t\t\twhile (accents.length > newBps) {\n\t\t\t\taccents.pop();\n\t\t\t}\n\t\t\twhile (accents.length < newBps) {\n\t\t\t\taccents.push(accentTypes.ACCENT_2);\n\t\t\t}\n\n\t\t\tthis.refs.sm.setBeatsPerStep(newBps);\n\t\t\tthis.refs.barManager.setAccents(accents);\n\t\t\tthis.setState({ beatsPerStep: newBps });\n\t\t}\n\t};\n\n\tonPlanStep(step) {\n\t\t// console.log(\"<Apdiv>onPlanStep\", step)\n\t\t// this.setBpm(step.bpm);\n\n\t\tif (step) {\n\t\t\tthis.setState({ currentBpm: this.refs.sm.setStep(step) });\n\t\t}\n\t}\n\n\n\tsetBpm = newBpm => {\n\t\tthis.setState({ currentBpm: newBpm });\n\t\tthis.refs.sm.setBpm(newBpm);\n\t};\n\n\tonInstrumentChange() {\n\t\tthis.setState(prevState => ({\n\t\t\tinstrumentDropdownOpen: !prevState.instrumentDropdownOpen\n\t\t}));\n\n\t}\n\n\n\tgetUiState() {\n\n\t\tconst s1 = {\n\t\t\tbeatsPerStep: this.refs.beatsPerStep.getValue(),\n\t\t\taccents: this.refs.barManager.getAccents(),\n\t\t\tinstrument: this.state.instrument\n\t\t};\n\n\t\tconst s2 = this.refs.modePanel.getValue();\n\t\t// console.log('s2',s2.playbac)\n\t\tconst uiState = { ...s1, ...s2 };\n\n\t\t// console.log(\"storing uiState\", this.uiState);\n\t\tthis.uiState = uiState;\n\t\t// HACK\n\n\n\t\tthis.uiState.instrument = this.state.instrument;\n\t\t// console.log('uiState instrument',this.uiState.instrument)\n\t\treturn uiState;\n\t}\n\n\tonAccentsChange() {\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getAccents());\n\t}\n}\n\nexport default withCookies(App);\n\n// this serves as default app settings\nApp.defaultProps = {\n\tplaybackMode: InitPreset.playbackMode,\n\tplayMode: InitPreset.playMode,// playModes.BY_BAR,\n\tinterval: InitPreset.interval,\n\tinstrument: InitPreset.instrument,\n\tbpmStep: InitPreset.bpmStep,\n\tbpmRange: InitPreset.bpmRange,\n\tbeatsPerStep: InitPreset.beatsPerStep,\n\taccents: InitPreset.accents\n};\n\n// App.defaultProps = {...App.defaultProps, InitPreset}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {CookiesProvider} from 'react-cookie'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(  <CookiesProvider> <App  /> </CookiesProvider> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}