{"version":3,"sources":["components/SoundMachineInstrument.jsx","components/AccentTypes.jsx","components/InstrumentLib.jsx","components/SimpleVis.jsx","components/SoundMachine.jsx","components/PlayModes.jsx","components/SimpleProgress.jsx","components/Utils.jsx","components/Planner.jsx","components/AdvancedSlider.jsx","components/AdvancedRange.jsx","components/Accent.jsx","components/BarManager.jsx","components/EditPresetModal.jsx","components/SavePresetModal.jsx","components/PresetsManager.jsx","components/SimplePanel.jsx","components/GeometricSlider.jsx","components/ModePanel.jsx","components/PresetsLib.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SoundMachineInstrument","props","_this","Object","classCallCheck","this","console","log","key","o","C3","samples","C#3","D3","possibleConstructorReturn","getPrototypeOf","call","baseUrl","label","Sampler","accentTypes","ACCENT_1","ACCENT_2","ACCENT_3","accentTypesArr","instruments","TABLA","ELECTRO_KIT","InstrumentLib","defaultInstrument","state","lib","currentInstrument","undefined","tabla","toMaster","electro","setInstrument","Error","Component","SimpleVis","radius","height","myRef","React","createRef","idx","lastEl","classList","remove","beats","el","refs","add","a","b","width","current","offsetWidth","radDelta","Math","PI","i","x","sin","y","cos","style","position","left","top","cell","push","react_default","createElement","ref","Container","className","renderCells","defaultProps","SoundMachine","accentNotes","instrumentLib","currentBeat","beatsPerStep","score","isPlaying","accents","part","repeat","time","note","getInstrument","triggerAttackRelease","updateVis","Tone","Draw","schedule","setBpm","bpm","Transport","value","setBeatsPerStep","newBps","length","pop","timeSignature","setLoopEnd","loopEndEvent","barsAmount","setState","onBeat","playNote","getBpm","instrument","_this2","Synth","Buffer","on","onBufferError","context","latencyHint","scheduleRepeat","Event","onLoopEndFunc","onLoopEnd","loop","instrumentKey","bars","cancel","loopEnd","start","Fragment","stop","playModes","BY_BAR","BY_TIME","SimpleProgress","display","Utils","padTime","t","formatTime","timeInSeconds","Date","setSeconds","getMinutes","getSeconds","Planner","stepProgress","timer","startTime","stepsCounter","stepProgressUpdateInterval","planChanged","onChange","barRender","cls","currentStep","step","onClick","onStepClick","segmentDuration","toFixed","end","s","min","bpmRange","max","segments","playMode","segment","interval","bpmStep","uiStateObject","plan","makePlan","totalPlanTime","bar","timeEnd","startTimeFormatted","endTimeFormatted","prevState","clearInterval","stepProgressUpdateTimer","resetStep","lockBpm","onAdvance","stepForward","_this3","onInterval","bind","setInterval","updateStepProgress","event","getCurrentBar","progress","now","getTime","_this4","_this5","components_SimpleProgress","opacity","map","AdvancedSlider","Badge","color","onBadgeClick","get","prototype","Slider","AdvancedRange","bounds","Range","Accent","isCurrent","type","BarManager","defaultValue","onAfterChange","selected","newType","forceUpdate","lastActiveAccent","toggleCurrent","components_Accent","handleCellClick","EditPresetModal","modal","preset","showDelete","toggle","assertThisInitialized","title","onSave","e","newTitle","target","objectSpread","onDeleteBtn","Button","outline","size","onSaveBtn","Modal","isOpen","ModalHeader","ModalBody","Input","titleChanged","JSON","stringify","ModalFooter","handleSave","renderDelete","PresetsManager","showEdit","userPresets","cookies","Array","fill","onSelect","toLowerCase","saveInCookie","presets","set","path","indexOf","splice","stopPropagation","presetEditor","edit","parse","Row","item","Col","onPresetClick","onMouseEnter","showEditBtn","onMouseLeave","hideEditBtn","class","visibility","onPresetEdit","components_EditPresetModal","onPresetDelete","onSavePreset","SimplePanel","children","GeometricSlider","regression","d","exponential","order","precision","string","prepareMarks","marks","marksAt","findX","markFormatter","floor","marksStyle","v","predict","equation","badgeFormatter","es","included","marksNum","desc","ModePanel","bpmStepDropdownOpen","byTimeInterval","byBarInterval","newMode","byBarSlider","byTimeSlider","setValue","barsNum","components_SimplePanel","ButtonGroup","onModeChange","active","Collapse","components_GeometricSlider","byBarFormatter","onBarIntervalChange","byTimeFormatter","onTimeIntervalChange","ButtonDropdown","margin","onBpmStepChange","DropdownToggle","caret","DropdownMenu","DropdownItem","onBpmStepSelect","PresetsLib","App","timerRef","currentBpm","instrumentDropdownOpen","instrumentDropdownLabel","cycleDropdownOpen","onBeatsPerStepChange","getUiState","sm","barManager","getAccents","setAccents","onPlanAdvanced","newStep","planner","newBpm","onPlanChanged","handleStartStop","setPlan","setProgressEvent","document","addEventListener","handleKeyDown","keyCode","stepBackward","newInstrument","getCurrentInstrumentLabel","xs","components_AdvancedRange","pushable","onBpmRangeChange","onInstrumentChange","onInstrumentSelect","components_AdvancedSlider","components_BarManager","onAccentsChange","renderPresetsPane","block","renderBpmRangePane","components_ModePanel","onModePanelChanged","renderPlaybackPane","_this6","components_PresetsManager","uiState","onPresetSelect","modePanel","_this7","components_Planner","renderPlanPane","setActive","_this8","components_SoundMachine","beat","renderLeftPane","renderMidPane","renderRightPane","s1","getValue","s2","withCookies","Boolean","window","location","hostname","match","ReactDOM","render","es6","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.483b9d9f.chunk.js","sourcesContent":["import {Sampler} from 'tone'\r\n\r\n\r\nclass SoundMachineInstrument extends Sampler {\r\n\r\n    constructor(props) {\r\n        console.log('<SoundMachineInstrument>constructor', props.key)\r\n        var o = {\r\n            \"C3\" : props.samples[0],\r\n            \"C#3\" : props.samples[1],\r\n            \"D3\" : props.samples[2],\r\n        };\r\n        super(o,{\r\n            baseUrl: props.baseUrl || './audio/' + props.key + '/'\r\n        });\r\n        this.key = props.key;\r\n        this.label = props.label;\r\n    }\r\n}\r\n\r\nexport default SoundMachineInstrument;\r\n\r\n ","export const accentTypes = {\r\n\tACCENT_1: 0,\r\n\tACCENT_2: 1,\r\n\tACCENT_3: 2\r\n};\r\n\r\nexport const accentTypesArr = [\r\n\taccentTypes.ACCENT_1, accentTypes.ACCENT_2, accentTypes.ACCENT_3\r\n];","import React, { Component } from \"react\";\r\nimport SoundMachineInstrument from \"./SoundMachineInstrument\"\r\n\r\nexport const instruments = {\r\n\tTABLA: \"tabla\",\r\n\tELECTRO_KIT: \"electrokit\"\r\n\t// ACOUSTIC_KIT: \"acoustic_kit\"\r\n};\r\n\r\nclass InstrumentLib extends Component {\r\n\tstate = {};\r\n    lib = {};\r\n    currentInstrument = undefined\r\n\r\n\r\n    constructor(defaultInstrument) {\r\n        super();\r\n    \r\n        //Tone.Buffer.on(\"load\", () => this.onBufferLoaded());\r\n\t\tvar tabla = new SoundMachineInstrument({\r\n            key: instruments.TABLA,\r\n            label: \"Tabla\",\r\n\t\t\tsamples: [\"dha-slide.wav\", \"dhin-slide.wav\", \"tin.wav\"]\r\n        }).toMaster();\r\n        \r\n        this.lib[ tabla.key ] = tabla;\r\n    \r\n        var electro = new SoundMachineInstrument({\r\n            key: instruments.ELECTRO_KIT,\r\n            label: 'Electronic Kit',\r\n\t\t\tsamples: [\"Kick.wav\", \"HiHat.wav\", \"Snare.wav\"]\r\n        }).toMaster();\r\n        \r\n        this.lib[ electro.key ] = electro;\r\n\r\n        this.setInstrument(defaultInstrument)\r\n        \r\n        console.log('<InstrumentLib>done constructor')\r\n    }\r\n\r\n    setInstrument(key) {\r\n        if (this.lib[key] === undefined) {\r\n            throw new Error(\"InstrumentLib has no such instrument with given key: \" + key)\r\n        }\r\n        this.currentInstrument = key;\r\n    }\r\n \r\n    getInstrument() {\r\n        if (this.lib[this.currentInstrument] === undefined) {\r\n            throw new Error(\"There is no such instrument in InstrumentLib: \" + this.currentInstrument)\r\n        }\r\n        return this.lib[this.currentInstrument];\r\n    }\r\n\r\n\t// render() {\r\n\t// \treturn <div />;\r\n\t// }\r\n}\r\nexport default InstrumentLib;\r\n","import React, {Component} from 'react';\r\nimport {Container} from 'reactstrap'\r\nclass SimpleVis extends Component {\r\n    state = { \r\n        radius: 50,\r\n        height: 150\r\n    }\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n    }\r\n    setActive(idx)  {\r\n        //  console.log('setActive',idx)\r\n        // cap idx\r\n        // idx = idx % this.props.beats;\r\n\r\n        if (this.lastEl) {\r\n           this.lastEl.classList.remove('active')\r\n        }\r\n\r\n        // belts and braces \r\n        if (idx < this.props.beats) {\r\n            let el = this.refs[\"el\" + idx];\r\n            el.classList.add('active')\r\n            this.lastEl = el;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(a,b) {\r\n        //  console.log('<SimpleVis>componentDidUpdate');\r\n\r\n        // reposition elements\r\n        const width = this.myRef.current.offsetWidth;\r\n\r\n        let radius = width / 2 - 5;\r\n        // console.log('radius', radius)\r\n        let radDelta = 2*Math.PI / this.props.beats;\r\n\r\n        for (let i = 0 ; i < this.props.beats ; i++) {\r\n            let x =  this.state.radius * Math.sin(radDelta * i);\r\n            let y =  -this.state.radius * Math.cos(radDelta * i);\r\n     \r\n  \r\n            this.refs[\"el\" + i].style.position = 'absolute';\r\n            this.refs[\"el\" + i].style.left =  - 20 + width/2 + x + 'px';  // hardcoded numbers determined visually\r\n            this.refs[\"el\" + i].style.top = 50 +  y + 'px';\r\n        }   \r\n    }\r\n\r\n    renderCells(cell) {\r\n        let o = [];\r\n        // console.log('radDelta',radDelta)\r\n        for (let i = 0 ; i < this.props.beats ; i++) {\r\n            \r\n            o.push(<div ref={\"el\" + i}>{i+1}</div>);\r\n        }\r\n        return o\r\n    }\r\n\r\n    render() {  \r\n        return (\r\n        <Container>\r\n            <div ref={this.myRef} className=\"SimpleVis\" style={{ height: this.state.height}}>{this.renderCells()}</div>\r\n        </Container>);\r\n    }\r\n}\r\n \r\nexport default SimpleVis; \r\n\r\nSimpleVis.defaultProps = {\r\n    beats: 4\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Tone from \"tone\";\r\nimport SoundMachineInstrument from \"./SoundMachineInstrument\";\r\nimport { accentTypes } from \"./AccentTypes\";\r\nimport InstrumentLib, {instruments} from \"./InstrumentLib\";\r\nimport SimpleVis from \"./SimpleVis\"\r\n\r\n\r\nclass SoundMachine extends Component {\r\n\r\n\taccentNotes = [\"C3\", \"C#3\", \"D3\"]; // this stay in sync with AccentTypes\r\n\r\n\tinstrumentLib = undefined;\r\n\r\n\tcurrentBeat = 0;\r\n\tbeatsPerStep = 4;\t\r\n\r\n\r\n\tscore = [\"C3\", \"C#3\",\"C#3\",\"C#3\"];\r\n\r\n\tstate = {\r\n\t\t// currentBeat: 0,\r\n\t\t//isInitialized: false,\r\n\t\t// instrument: instruments.ELECTRO_KIT,\r\n\t\tisPlaying: false\r\n\t\t// cnt:0 \r\n\t};\r\n\r\n\taccents = [accentTypes.ACCENT_1]; // default with accent on first beat\r\n\tsamples = {};\r\n\r\n\tinstruments = {};\r\n\r\n\tpart = null;\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t// if (!props.beatsPerStep) {\r\n\t\t// \tthrow new Error(\"props.beatsPerStep is missing\");\r\n\t\t// }\r\n\t\t// this.state.beatsPerStep = props.beatsPerStep;\r\n\t\t// onAfterChange: null\r\n\t\t// onLoopEnd = props.onLoopEnd\r\n\r\n\t\t// init library\r\n\t\tthis.instrumentLib = new InstrumentLib(this.props.instrument)\r\n\t}\r\n\t\r\n\tonBufferError() {\r\n\t\tthrow new Error(\"Some buffers weren't found\")\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// reload/debug bell\r\n\t\tvar synth = new Tone.Synth().toMaster();\r\n\t\tsynth.triggerAttackRelease(\"A2\");\r\n\r\n\t\tTone.Buffer.on(\"error\", () => this.onBufferError());\r\n\r\n\t\t// Tone.Transport.on('stop', () => console.log('TRANSPORTstop'));\r\n\t\t// Tone.Transport.on('pause', () => console.log('TRANSPORT.pause'));\r\n\t\t// Tone.Transport.on('start', () => console.log('TRANSPORTstart'));\r\n\t\t// Tone.Transport.on('loop', () => console.log('TRANSPORT loop'));\r\n\t\t\r\n\t\tTone.context.latencyHint = \"playback\";\r\n\t\t\r\n\t\tlet repeat =  this.repeat;\r\n\r\n\t\t// Tone.Transport.scheduleRepeat(function(time){\r\n\t\t// \t//use the time argument to schedule a callback with Tone.Draw\r\n\t\t// \tTone.Draw.schedule(updateVis, time)\r\n\t\t// }, \"4n\", 0)\r\n\t\t\r\n\t\tTone.Transport.scheduleRepeat((time) => repeat(time), \"4n\", 0);\r\n\r\n\t\tthis.loopEndEvent = new Tone.Event(function(time, onLoopEndFunc) {\r\n\t\t\t// console.log('loop has finished!',time)\r\n\t\t\tonLoopEndFunc();\r\n\t\t}, this.props.onLoopEnd);\r\n\r\n\t\tthis.loopEndEvent.loop = true;\r\n\t\t\r\n\t\t\r\n\r\n\t\t// TODO: dispatch ready event, so we can enable UI elements\r\n\t}\r\n\r\n\trepeat = (time) => {\r\n\t\tlet idx = this.currentBeat++ % this.beatsPerStep;\r\n\t\t\r\n\t\tlet note = this.score[idx];\r\n\t\t// console.log('play note', note, time)\r\n\t\t// debugger\r\n\t\tthis.instrumentLib.getInstrument().triggerAttackRelease(note, \"4n\", time);\r\n\t\tlet updateVis = this.updateVis;\r\n\r\n\t\tTone.Draw.schedule(() => updateVis(idx), time)\r\n\t\t\r\n\r\n\t\t\r\n\t\t// init with ACCENT_2 note, it will be changed in setAccents\r\n\t\t// for (let i = 0; i < this.state.beatsPerStep; i++) {\r\n\t\t// \tscore.push([\"0:\" + i, this.accentNotes[accentTypes.ACCENT_2]]);\r\n\t\t// }\r\n\r\n\t}\r\n\r\n\tsetInstrument(instrumentKey) {\r\n\t\tthis.instrumentLib.setInstrument(instrumentKey);\r\n\t}\r\n\r\n\tgetCurrentInstrumentLabel() {\r\n\t\treturn this.instrumentLib.getInstrument().label;\r\n\t}\r\n\r\n\tsetBpm = bpm => {\r\n\t\tTone.Transport.bpm.value = bpm;\r\n\t};\r\n\r\n\tsetBeatsPerStep = newBps => {\r\n\t\t// console.log(\"<SoundMachine>setBeatsPerStep\", newBps)\r\n\t\t\r\n\t \r\n\t\tthis.beatsPerStep = newBps;\r\n\t\t\r\n\t\t// remove if needed\r\n        while (this.score.length > newBps) {\r\n\t\t\tthis.score.pop();\r\n\t\t}\r\n\r\n\t\t// add if needed\r\n\t\twhile (this.score.length < newBps) {\r\n\t\t\tthis.score.push(accentTypes.ACCENT_1)\r\n\t\t}\r\n\t\t\r\n\t\tTone.Transport.timeSignature = [newBps, 4];\r\n\r\n\t\t// restart loopevent because score length has been changed\r\n\t\tthis.setLoopEnd(this.loopEndEvent.barsAmount);\r\n\r\n\t\t// this will refresh visualisation\r\n\t\tthis.setState({beatsPerStep: newBps})\r\n\t};\r\n\r\n\tupdateVis = (currentBeat) => {\r\n\t\t// console.log('updateVis.currentBeat', currentBeat, Tone.Transport.progress)\r\n\t\tconsole.log(\"<SM>updateVis\", currentBeat)\r\n\t\tthis.props.onBeat(currentBeat);\r\n\r\n\t\t// this.refs.vis.setActive(currentBeat)\r\n\t}\r\n\r\n\tplayNote = (time, note) => {\r\n\t\tthis.instrumentLib.getInstrument().triggerAttackRelease(note, \"4n\", time);\r\n\t}\r\n \r\n\tsetLoopEnd(bars) {\r\n\t\t// console.log('<SM>setLoopEnd', bars)\r\n\t\tthis.loopEndEvent.cancel();\r\n\r\n\r\n\t\tthis.loopEndEvent.barsAmount = bars;\r\n\t\t\r\n\t\tthis.loopEndEvent.loopEnd = this.loopEndEvent.barsAmount + \"m\"; \r\n\t\tthis.loopEndEvent.loop = true;\r\n\t\tthis.loopEndEvent.start(  this.loopEndEvent.barsAmount + \"m\") \r\n\t}\r\n\tsetAccents(accentTypesArr) {\r\n\t\t// if (accentTypesArr.length != this.part.length) {\r\n\t\t//     throw new Error(\"accentTypes has incorrect number of elements \" + accentTypesArr.length + \" vs \" + this.part.length)\r\n\t\t// }\r\n\t\tthis.accents = accentTypesArr;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.score.length; i++) {\r\n\t\t\t// by default 2 will be the tick note\r\n\t\t\tlet note = this.accentNotes[accentTypes.ACCENT_2];\r\n\r\n\t\t\t// if accent for this step is specified set it here\r\n\t\t\tif (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_1\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_1];\r\n\t\t\t} else if (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_3\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_3];\r\n\t\t\t}\r\n\t\t\tthis.score[i] = note;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t// <div style={{width: '100%'}}>\r\n\t\t\t// \t{/* <div>Sound is {this.state.isPlaying === true ? \"playing\" : \"stopped\"}</div> */}\r\n\t\t\t// \t{/* <SimpleVis ref=\"vis\" beats={this.state.beatsPerStep}/> */}\r\n\t\t\t// </div>\r\n\t\t<></>);\r\n\t}\r\n\r\n\tstop() {\r\n\t\t// console.log(\"<SoundMachine>stop()\");\r\n\t\tthis.setState({ isPlaying: false });\r\n\t\tthis.currentBeat = 0;\r\n\r\n\t\tTone.Transport.stop();\r\n\t}\r\n\r\n\tstart() {\r\n\t\t// console.log(\"<SoundMachine>start()\");\r\n\r\n\t\tthis.setState({ isPlaying: true });\r\n\t\t\r\n\t\tTone.Transport.start(\"+0.1\");\r\n\r\n\t}\r\n\r\n\tgetBpm = () => {\r\n\t\treturn Tone.Transport.bpm.value;\r\n\t};\r\n}\r\n\r\nexport default SoundMachine;\r\n\r\n\r\nSoundMachine.defaultProps = {\r\n\tbeatsPerStep: 4,\r\n\tonLoopEnd: null\r\n };","export const playModes = {\r\n\tBY_BAR: \"by_bar\",\r\n\tBY_TIME: \"by_time\"\r\n};","import React, { Component } from 'react';\r\nimport {Container, Col} from 'reactstrap';\r\n\r\nclass SimpleProgress extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( <Container className=\"SimpleProgress\">\r\n            <div className=\"bar\" style={{width: this.props.value  + \"%\", display: 'block'}} />\r\n            {/* <div style={{backgroundColor: 'red', width: this.props.value  + \"%\" }}>{this.props.value.toFixed(0) }</div> */}\r\n            {/* <Col style={{backgroundColor: 'red'}} width=\"20px\">\r\n                progress {this.props.value}\r\n            </Col> */}\r\n        </Container> );\r\n    }\r\n}\r\n \r\nexport default SimpleProgress;","const Utils = {\r\n    padTime: function(t) {\r\n\t\treturn t < 10 ? \"0\" + t : t;\r\n\t},\r\n\tformatTime: function(timeInSeconds) {\r\n\t\t//{this.leadingZeroCheck(now.getMinutes())}:{now.getSeconds()} --\r\n\t\tlet t = new Date(0, 0, 0, 0, 0, 0, 0);\r\n\t\tt.setSeconds(timeInSeconds);\r\n\t\tlet m = t.getMinutes();\r\n\t\tlet o = \"\";\r\n\t\tif (m !== 0) {\r\n\t\t\to += t.getMinutes(); //this.padTime(t.getMinutes());\r\n            o += \":\";\r\n            o += \"\" + Utils.padTime(t.getSeconds());\r\n        }\r\n        else {\r\n            o += t.getSeconds();\r\n        }\r\n\t\treturn o;\r\n    }\r\n}\r\n\r\nexport default Utils;","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { playModes } from \"./PlayModes\";\r\nimport Tone  from \"tone\"\r\nimport SimpleProgress from \"./SimpleProgress\";\r\nimport  Utils  from \"./Utils\"\r\n\r\nclass Planner extends Component {\r\n\tstate = {\r\n\t\tbars: [],\r\n\t\tstepProgress: 0\r\n\t};\r\n\r\n\ttimer = {\r\n\t\tref: null,\r\n\t\tstartTime: null\r\n\t};\r\n\tstepsCounter = 0;\r\n\tstepProgressUpdateInterval = 50;\t// in ms\r\n\r\n\tmakePlan(s) {\r\n \r\n\t\tconst min = s.bpmRange[0];\r\n\t\tconst max = s.bpmRange[1];\r\n\r\n\t\tlet segments = [];\r\n\t\tlet bpm = min;\r\n\r\n\t\tif (s.playMode === playModes.BY_BAR) {\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tlet segment = {\r\n\t\t\t\t\tbpm: bpm,\r\n\t\t\t\t\tend: s.interval\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tlet i = 0;\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tlet segment = {\r\n\t\t\t\t\ttime: i * s.interval,\r\n\t\t\t\t\tstart: i * s.interval,\r\n\t\t\t\t\tend: i * s.interval + s.interval,\r\n\t\t\t\t\tbpm: bpm\r\n\t\t\t\t}\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\t \r\n\t\t\t\r\n\t\t}\r\n\t\treturn segments;\r\n\t}\r\n \r\n\t// TODO: this is ugly\r\n\tsetPlan(uiStateObject) {\r\n\t\tconst plan = this.makePlan(uiStateObject);\r\n\r\n\t\t// console.log(\"<Planner>setPlan\", plan);\r\n\t\tvar bars = [];\r\n \r\n\t\tlet totalPlanTime = 0;\r\n\t\tconst playMode = uiStateObject.playMode;\r\n\r\n\t\tif (uiStateObject.playMode === playModes.BY_BAR) {\r\n\t\t\tfor (var i = 0; i < plan.length; i++) {\r\n\t\t\t\tconst bar = {\r\n\t\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\t\tend: plan[i].end,\r\n\t\t\t\t\tstep: this.stepsCounter++\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\ttotalPlanTime += 60 / plan[i].bpm  * uiStateObject.beatsPerStep * plan[i].end;\t\r\n\t\t\t\tbars.push(bar);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (var i = 0; i < plan.length; i++) {\r\n\t\t\t\tconst bar = {\r\n\t\t\t\t\ttime: plan[i].time,\r\n\t\t\t\t\ttimeEnd: plan[i].end,\r\n\t\t\t\t\tsegmentDuration: plan[i].end - plan[i].time,\r\n\t\t\t\t\tstartTimeFormatted: Utils.formatTime(plan[i].start),\r\n\t\t\t\t\tendTimeFormatted: Utils.formatTime(plan[i].end),\r\n\t\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\t\tstep: this.stepsCounter++\r\n\t\t\t\t};\r\n\r\n\t\t\t\ttotalPlanTime += plan[i].end;\r\n\t\t\t\t\r\n\t\t\t\tbars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// update to new state\r\n\t\tthis.stepsCounter = 0;\r\n\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({\r\n\t\t\t \ttotalPlanTime:  totalPlanTime,\r\n\t\t\t\tcurrentStep: 0,\r\n\t\t\t\tbars: bars,\r\n\t\t\t\tplayMode: playMode\r\n\t\t\t}),\r\n\t\t\t() => this.planChanged()\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\t\t// console.log(\"lockBpm\", this.props.lockBpm);\r\n\t\tif (this.timer) {\r\n\t\t\t// clear timer\r\n\t\t\tclearInterval(this.timer.ref);\r\n\t\t\tthis.timer = undefined;\r\n\t\t}\r\n\r\n\t\t\r\n\t\tif (this.stepProgressUpdateTimer) {\r\n\t\t\t// console.log('clearing stepProgressUpdateTimer')\r\n\t\t\tclearInterval(this.stepProgressUpdateTimer);\r\n\t\t\tthis.stepProgressUpdateTimer = undefined\r\n\t\t}\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tstepForward() {\r\n\t\tif (this.props.lockBpm) {\r\n\t\t\t// console.log(\"<Planner>isLocked == true so don't advance anything\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar currentStep = this.state.currentStep;\r\n\r\n\t\t// check if we're not at the end of plan\r\n\t\tif (currentStep + 1 >= this.state.bars.length) {\r\n\t\t\t// console.log(\"no more steps, please stop()\");\r\n\t\t\tif (this.timer) {\r\n\t\t\t\tclearInterval(this.timer.ref);\r\n\t\t\t\tthis.time = undefined;\r\n\t\t\t}\r\n\t\t\tthis.props.onAdvance(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({ currentStep:  this.state.currentStep + 1 });\r\n\t\tthis.props.onAdvance(this.state.bars[  this.state.currentStep ]);\r\n\t\t// this.props.onAdvance(this.state.bars[this.state.currentStep]);\r\n\t}\r\n\r\n\tstepBackward() {\r\n\t\tif (this.props.lockBpm) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar currentStep = this.state.currentStep;\r\n\r\n\t\tif (currentStep - 1 < 0) {\r\n\t\t\t// console.log(\"no more steps, please stop()\");\r\n\t\t\tif (this.timer) {\r\n\t\t\t\tclearInterval(this.timer.ref);\r\n\t\t\t\tthis.time = undefined;\r\n\t\t\t}\r\n\t\t\tthis.props.onAdvance(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({ currentStep:  this.state.currentStep - 1 });\r\n\t\tthis.props.onAdvance(this.state.bars[  this.state.currentStep ]);\r\n\t}\r\n\t\r\n\tonInterval() {\r\n\t\tthis.stepForward();\t\r\n\t}\r\n\r\n\tstart() {\r\n\t\t// console.log(\"<Planner>start()\");\r\n\t\t// debugger\r\n\t\t// make sure we dispose any timer that's currently set\r\n\t\tif (this.timer) {\r\n\t\t\t// console.log(\"<Planner>startTimer() old timer disposed\");\r\n\t\t\tclearInterval(this.timer.ref);\r\n\t\t\tthis.timer.ref = undefined;\r\n\t\t\tthis.timer.startTime = null;\r\n\t\t\tthis.resetStep();\r\n\t\t}\r\n\r\n\t\t\r\n\t\t// if we step forward after time interval, then set the timer func here\r\n\t\tif (this.state.playMode === playModes.BY_TIME) {\r\n\t\t\t// we're in playMode === BY_TIME mode\r\n\t\t\t// calc segment length between steps and set timer for such\r\n\t\t\tconst time =\r\n\t\t\t\t1000 *\r\n\t\t\t\t(this.state.bars[this.state.currentStep].timeEnd -\r\n\t\t\t\t\tthis.state.bars[this.state.currentStep].time);\r\n\t\t\tvar onInterval = this.onInterval.bind(this);\r\n\t\t\t// console.log(\"setting interval\", time);\r\n\r\n\t\t\tthis.timer = {\r\n\t\t\t\tref: setInterval(onInterval, time),\r\n\t\t\t\tstartTime: new Date() \r\n\t\t\t};\r\n\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.stepProgressUpdateTimer) {\r\n\t\t\tthis.stepProgressUpdateTimer = setInterval(() => this.updateStepProgress(), this.stepProgressUpdateInterval);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tsetProgressEvent(event) {\r\n\t\t// if (this.state.playMode === playModes.BY_BAR) {\r\n\t\tthis.event = event;\r\n\t\t// }\r\n\t}\r\n\r\n\tupdateStepProgress() {\r\n\t\t\r\n\t\tif (this.props.lockBpm) {\r\n \t\t\treturn\r\n\t\t}\r\n\t\t// console.log('updateStepProgress()', this.event.progress)\r\n\t\tconst bar = this.getCurrentBar();\r\n\t\tlet progress = 0;\r\n\r\n\t\tif (this.state.playMode === playModes.BY_BAR) {\r\n\t\t\tprogress = \tthis.event.progress\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tlet now = Date.now() - this.timer.startTime.getTime();\r\n\t\t\t// console.log('lockstart',this.timer.lockStart);\r\n\t\t\t// console.log(' this.timer.startTime.getTime()', this.timer.startTime.getTime())\r\n\t\t\tconst elapsedTime = now - ( bar.segmentDuration * bar.step ) * 1000;\r\n\t\t\tprogress = \t(elapsedTime / bar.segmentDuration) / 1000\r\n\t\t\t// console.log('progress %f, elapsed %d', progress,elapsedTime)\r\n\t\t\t// console.log('BY_TIME')\r\n\t\t}\r\n\t\t// cheat\r\n\t\tif (progress > 1) {\r\n\t\t\tprogress = 1;\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({stepProgress:  progress})\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.stepsCounter = 0;\r\n\t\tthis.setState({ bars: [], currentStep: 0 });\r\n\t\tthis.planChanged();\r\n\t}\r\n\r\n\tplanChanged = () => {\r\n\t\tconsole.log(\"<Planner>planChanged\");\r\n\t\tif (this.props.onChange) {\r\n\t\t\t// console.log(\"<Planner>fire onChange\");\r\n\t\t\tthis.props.onChange();\r\n\t\t}\r\n\t};\r\n\r\n\tresetStep() {\r\n\t\tthis.setState({ currentStep: 0 });\r\n\t\tthis.props.onAdvance(this.state.bars[0]);\r\n\t}\r\n\r\n\tgetCurrentBar() {\r\n\t\tif (this.state.currentStep >= this.state.bars.length) {\r\n\t\t\tthrow new Error(\"Trying to get step that doesn't exists\");\r\n\t\t}\r\n\t\treturn this.state.bars[this.state.currentStep];\r\n\t}\r\n\r\n\tonStepClick(idx) {\r\n\t\tthis.setState({ currentStep: idx }, () =>\r\n\t\t\tthis.props.onAdvance(this.state.bars[this.state.currentStep])\r\n\t\t);\r\n\t}\r\n\r\n\tbarRender = b => {\r\n\t\tconst cls = this.state.currentStep === b.step ? \"current-step\" : \"\";\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => this.onStepClick(b.step)}\r\n\t\t\t\tclassName={\"step \" + cls}\r\n\t\t\t\tkey={\"key_\" + b.bpm}\r\n\t\t\t>\r\n\t\t\t\t{b.segmentDuration !== undefined\r\n\t\t\t\t\t? Utils.formatTime(b.segmentDuration.toFixed(0)) + \" \"\r\n\t\t\t\t\t: b.end + \" bars \"}\r\n\t\t\t\t at {b.bpm.toFixed(0)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\t// console.log(\"<Planner> render\");\r\n\t\t// don't doo much if no plan yet\r\n\t\tif (this.state.bars.length === 0) {\r\n\t\t\treturn <div>No plan</div>;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Container className=\"Planner\">\r\n\t\t\t\t{/* <div>Next step in {this.state.stepProgress.toFixed(1)} seconds</div> */}\r\n\t\t\t\t<SimpleProgress value={this.state.stepProgress  * 100}/>\r\n\t\t\t\t<div style={this.props.lockBpm ? { opacity: 0.5 } : {}}>\r\n\t\t\t\t\t{this.state.bars.map(bar => this.barRender(bar))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>Total time: {Utils.formatTime(this.state.totalPlanTime)}</div>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n\r\n\t\r\n}\r\n\r\nexport default Planner;\r\n\r\nPlanner.defaultProps = {\r\n\tplayMode: playModes.BY_BAR,\r\n\tcurrentStep: 0\r\n}\t","import React from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { Badge, Row , Col} from \"reactstrap\";\r\n// import {Container, Row, Col} from 'reactstrap'\r\n\r\nclass AdvancedSlider extends Slider {\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Badge color=\"light\" onClick={this.onBadgeClick} className=\"d-i\">\r\n\t\t\t\t\t\t{this.state.value}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{height:'30px'}}>\r\n\t\t\t\t\t<div>{super.render()}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonBadgeClick() {\r\n\t\t// TODO attach editorInPlace\r\n\t}\r\n}\r\n\r\nexport default AdvancedSlider;\r\n","import React from 'react'\r\nimport { Range } from 'rc-slider'\r\nimport {Badge} from 'reactstrap'\r\n\r\nclass AdvancedRange extends Range {\r\n    render() { \r\n        return (<>\r\n            <Badge color=\"light\" onClick={this.onBadgeClick} className=\"d-i\">{this.state.bounds[0]} - {this.state.bounds[1]}</Badge>\r\n            {super.render()}\r\n            \r\n        </>);\r\n    }\r\n}\r\n\r\nexport default AdvancedRange;\r\n","import React, { Component } from \"react\";\r\nimport { accentTypes } from \"./AccentTypes\";\r\n\r\nclass Accent extends Component {\r\n\tstate = {\r\n\t\tisCurrent: false\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={\"Accent \" + (this.state.isCurrent === true ? \"active\" : \"\")}  onClick={this.props.onClick}>\r\n\t\t\t\t<div className={\"type\" + this.props.type}></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\ttoggleCurrent() {\r\n\t\tthis.setState({isCurrent: !this.state.isCurrent})\r\n\t}\r\n}\r\n\r\nexport default Accent;\r\n","import React, { Component } from \"react\";\r\nimport { accentTypesArr } from \"./AccentTypes\";\r\nimport Accent from \"./Accent\";\r\n\r\nclass BarManager extends Component {\r\n\tstate = {\r\n\t\tbars: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state.bars = props.defaultValue;\r\n\t}\r\n\r\n\tsetAccents(accents, beatsPerStep) {\r\n\t\tthis.setState({ bars: accents }, this.props.onAfterChange);\r\n\t}\r\n\r\n\thandleCellClick(selected) {\r\n\t\t// old type\r\n\t\tconst type = this.state.bars[selected];\r\n\r\n\t\t// new type\r\n\t\tconst newType = accentTypesArr[(type + 1) % 3];\r\n\r\n\t\tthis.state.bars[selected] = newType;\r\n\t\tthis.forceUpdate();\r\n\t\tthis.props.onAfterChange();\r\n\t\t/// hmm good patern to update arrays in state, doesn't want to lose it\r\n\t\t// const index = this.state.accentBars.indexOf(selected);\r\n\t\t// if (index < 0) {\r\n\t\t// \tthis.state.accentBars.push(selected);\r\n\t\t// } else {\r\n\t\t// \tthis.state.accentBars.splice(index, 1);\r\n\t\t// }\r\n\t\t// this.setState({ accentBars: [...this.state.accentBars] });\r\n\t}\r\n\r\n\tgetAccents() {\r\n\t\treturn this.state.bars;\r\n\t}\r\n\r\n\tsetActive(idx) {\r\n\t\t// unselect previous element\r\n\t\tif (this.lastActiveAccent) {\r\n\t\t\tthis.lastActiveAccent.toggleCurrent();\r\n\t\t}\r\n\t\t// select new \r\n\t\tconst el = this.refs[\"accent\" + idx];\r\n\t\tel.toggleCurrent();\r\n\t\tthis.lastActiveAccent = el;\r\n\t}\r\n\r\n\t// renderCells = bars => {\r\n\t// \treturn\r\n\t// \t));\r\n\t// };\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{this.state.bars.map((bar, idx) => (\r\n\t\t\t\t\t<Accent ref={\"accent\" + idx}\r\n\t\t\t\t\t\ttype={bar}\r\n\t\t\t\t\t\tonClick={() => this.handleCellClick(idx)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BarManager;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n\tInput,\r\n\tButton,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tModalFooter\r\n} from \"reactstrap\";\r\n\r\nclass EditPresetModal extends Component {\r\n\tstate = {\r\n\t\tmodal: false,\r\n\t\tpreset: null,\r\n\t\tshowDelete: false\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmodal: false\r\n\t\t};\r\n\t\tthis.toggle = this.toggle.bind(this);\r\n\t}\r\n\r\n\ttoggle() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tmodal: !prevState.modal\r\n\t\t}));\r\n\t}\r\n\r\n\thandleSave() {\r\n\t\tconst preset = this.state.preset;\r\n\t\tconst title = this.state.preset.title;\r\n\t\tif (title && title.length > 0) {\r\n\t\t\tthis.props.onSave(title, preset);\r\n\t\t\tthis.toggle();\r\n\t\t}\r\n\t}\r\n\r\n\tedit(preset, showDelete) {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tpreset: preset,\r\n\t\t\t\tshowDelete: showDelete\r\n\t\t\t},\r\n\t\t\tthis.toggle\r\n\t\t);\r\n\t}\r\n\r\n\ttitleChanged(e) {\r\n\t\tconst newTitle = e.target.value;\r\n\t\tlet preset = { ...this.state.preset };\r\n\t\tpreset.title = newTitle;\r\n\t\tthis.setState({ preset });\r\n\t\t// this.setState()\r\n\t\t// this.setState({title: e.target.value}\r\n\t}\r\n\r\n\tonDeleteBtn() {\r\n\t\tthis.props.onDeleteBtn(this.state.preset);\r\n\t\tthis.toggle();\r\n\t}\r\n\r\n\trenderDelete() {\r\n\t\t \r\n\t\tif (this.state.showDelete === true) {\r\n\t\t\treturn(<Button color=\"warning\" onClick={() => this.onDeleteBtn()}>\r\n\t\t\t\tDelete\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button\r\n\t\t\t\t\toutline\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\tonClick={this.props.onSaveBtn}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave Preset\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tisOpen={this.state.modal}\r\n\t\t\t\t\ttoggle={this.toggle}\r\n\t\t\t\t\tclassName={this.props.className}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggle}>Save Preset</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tonChange={e => this.titleChanged(e)}\r\n\t\t\t\t\t\t\tdefaultValue={\r\n\t\t\t\t\t\t\t\t(this.state.preset &&\r\n\t\t\t\t\t\t\t\t\tthis.state.preset.title) ||\r\n\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"code\">\r\n\t\t\t\t\t\t\t{JSON.stringify(this.state.preset)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => this.handleSave()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggle}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{this.renderDelete()}\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditPresetModal;\r\n\r\n\r\nEditPresetModal.defaultProps = {\r\n\tonDeleteBtn: function(preset) {},\r\n\tonSave: function(title, preset) {},\r\n\tonSaveBtn: function(e, idx) {}\r\n };\r\n","import React, { Component } from \"react\";\r\nimport { Input, Button, Modal, ModalHeader, ModalBody, ModalFooter} from \"reactstrap\";\r\n\r\nclass SavePresetModal extends Component {\r\n\tstate = {\r\n\t\tmodal: false,\r\n\t\tpreset: null\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmodal: false\r\n\t\t  };\r\n\t  \r\n\t\tthis.toggle = this.toggle.bind(this);\r\n\t}\r\n\r\n\ttoggle() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t  modal: !prevState.modal\r\n\t\t}));\r\n\t  }\r\n\t\r\n\thandleSave() {\r\n\t\tconst title = this.state.title;\r\n\t\tconst preset = this.props.preset;\r\n\t\tif (title && title.length > 0) {\r\n\t\t\tthis.props.onSave(title, preset);\r\n\t\t\tthis.toggle();\r\n\t\t}\r\n\t}\r\n\r\n\teditPreset(preset) {\r\n\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button  size=\"sm\" variant=\"primary\" onClick={this.toggle}>\r\n\t\t\t\t\tSave Preset\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n\t\t\t\t<ModalHeader toggle={this.toggle}>Save Preset</ModalHeader>\r\n\t\t\t\t<ModalBody>\r\n\t\t\t\t\t<Input onChange={e => this.setState({title: e.target.value})} value={(this.props.preset && this.props.preset.title) || ''}/>\r\n\t\t\t\t\t<div>{JSON.stringify(this.props.preset)}</div>\r\n\t\t\t\t</ModalBody>\r\n\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t<Button color=\"primary\" onClick={() => this.handleSave()}>Save</Button>{' '}\r\n\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n\t\t\t\t</ModalFooter>\r\n\t\t\t\t</Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SavePresetModal;\r\n","import React, { Component } from \"react\";\r\nimport {Button, Container, Row, Col } from \"reactstrap\";\r\nimport SavePresetModal from \"./SavePresetModal\"\r\nimport EditPresetModal from \"./EditPresetModal\"\r\n\r\nclass PresetsManager extends Component {\r\n\tstate = {\r\n\t\tshowDelete: [],\r\n\t\tshowEdit: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.userPresets = this.props.cookies.get('userPresets');\r\n\t\t\r\n\t\tthis.state.showDelete = this.userPresets ? Array(this.userPresets.length).fill(false) : []\r\n\t\tthis.state.showEdit = this.userPresets ? Array(this.userPresets.length).fill(false) : []\r\n\t}\r\n\t\r\n\tonPresetClick(preset) {\r\n\t\tconsole.log('preset CLICK')\r\n\t\tthis.props.onSelect(preset);\r\n\t}\r\n\r\n\tonSavePreset(title, o) {\r\n\t\tconst preset = {title: title, ...o}\r\n\t\t\r\n\t\tlet userPresets = this.props.cookies.get('userPresets');\r\n\r\n\t\tif (!userPresets) {\r\n\t\t\tuserPresets = [];\r\n\t\t}\r\n\t\t\r\n\t\t// overwrite by title \r\n\t\tlet idx = -1;\r\n\r\n\t\tfor (let i = 0 ; i < userPresets.length; i++) {\r\n\t\t\tif (userPresets[i].title.toLowerCase() === title.toLowerCase()) {\r\n\t\t\t\tidx = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (idx < 0) {\r\n\t\t\tuserPresets.push(preset)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tuserPresets[idx] = preset;\r\n\t\t}\r\n\r\n\t\tthis.saveInCookie(userPresets);\r\n\t}\r\n\r\n\tsaveInCookie(presets) {\r\n\t\tthis.props.cookies.set('userPresets', JSON.stringify(presets),{ path: '/' });\r\n\t\tthis.userPresets = presets;\r\n\t}\r\n\r\n\tshowDeleteBtn(e, idx) {\r\n\t\tlet showDelete = {...this.state};\r\n\t\tshowDelete[idx] = true;\r\n\t\tthis.setState({showDelete});\r\n\t}\r\n\r\n\tshowEditBtn(e, idx) {\r\n\t\tlet showEdit = {...this.state};\r\n\t\tshowEdit[idx] = true;\r\n\t\tthis.setState({showEdit});\r\n\t}\r\n\thideEditBtn(e) {\r\n\t\tthis.setState({showEdit: false})\r\n\t}\r\n\r\n\tonPresetDelete(preset) {\r\n\t\tlet idx = this.userPresets.indexOf(preset) \r\n\t\tif (idx < 0) {\r\n\t\t\tthrow new Error(\"Selected preset \" +  preset.title + \" has not been found in the store\" )\r\n\t\t}\r\n\t\tthis.userPresets.splice(idx,1);\r\n\t\tthis.saveInCookie(this.userPresets);\r\n\t}\r\n\r\n\tonPresetEdit(e, idx) {\r\n\t\tconsole.log('preset EDIT',e,idx);\r\n\t\t/// prevent from triggerring onClick \r\n\t\te.stopPropagation()\r\n\t\tif (idx !== undefined) {\r\n\t\t\tthis.refs.presetEditor.edit(this.userPresets[idx], true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// new preset\r\n\t\t\tthis.refs.presetEditor.edit(this.props.preset)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst userPresets = this.props.cookies.cookies.userPresets ?  JSON.parse(  this.props.cookies.cookies.userPresets ) : [];\r\n\t\t// console.log('<PresetsManager>userPresets', userPresets)\r\n\t\treturn (\r\n\t\t\t<Container className=\"PresetsManager\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{this.props.presets.map((item, idx) => (\r\n\t\t\t\t\t\t<Col className=\"preset\"\r\n\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\tmy presets:\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{userPresets.map((item, idx) => (\r\n\t\t\t\t\t\t<Col className=\"preset\"\r\n\t\t\t\t\t\t\tonMouseEnter={(e) => this.showEditBtn(e, idx)}\r\n\t\t\t\t\t\t\tonMouseLeave={(e) => this.hideEditBtn(e, idx)}\r\n\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t\t<div class='x' style={{visibility: this.state.showEdit[idx] ? '' : 'hidden'}} onClick={(e) => this.onPresetEdit(e,idx)}>Edit</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<EditPresetModal ref='presetEditor' onDeleteBtn={(preset) => this.onPresetDelete(preset)} onSaveBtn={(e,idx) => this.onPresetEdit(e,idx)} onSave={(title, preset) => this.onSavePreset(title, preset)}/>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PresetsManager;\r\n\r\nPresetsManager.defaultProps = {\r\n\tonSelect: function(preset) {}\r\n };","import React, { Component } from 'react';\r\nimport {Container, Row, Col} from 'reactstrap'\r\n\r\nclass SimplePanel extends Component {\r\n    render() { \r\n        return (\r\n            <Container className={\"pane \" + this.props.className}>\r\n\t\t\t\t<Row className=\"pane-title\">{this.props.title}</Row>\r\n\t\t\t\t<Row className=\"pane-body\">{this.props.children}</Row>\r\n            </Container>\r\n            );\r\n    }\r\n}\r\n \r\nexport default SimplePanel;\r\n\r\n\r\nSimplePanel.defaultProps = {\r\n    title: 'title',\r\n    children: [],\r\n    className: ''\r\n };","import React, { Component } from 'react';\r\nimport AdvancedSlider from './AdvancedSlider'\r\nimport Slider from 'rc-slider'\r\nimport regression from 'regression';\r\nimport {Badge} from 'reactstrap'\r\nimport Utils from \"./Utils\"\r\n\r\n\r\nclass GeometricSlider extends Component {\r\n\tstate = {\r\n        value: undefined,\r\n        regression: undefined\r\n\t};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        const d = [[0,this.props.min],  [100, this.props.max]];\r\n        \r\n        this.state.regression = regression.exponential(d, { order : 6, precision : 10 })\r\n        console.log('slider func', this.state.regression.string)\r\n\r\n        this.prepareMarks();\r\n\r\n        this.state.value = this.props.defaultValue;\r\n        \r\n    }\r\n\r\n    prepareMarks() {\r\n        this.marks = {};\r\n        \r\n        let marks = [];\r\n        for (let i = 0; i < this.props.marksAt.length; i++) {\r\n            this.marks[  this.findX(this.props.marksAt[i]) ]  = this.props.marksAt[i];\r\n        }\r\n        \r\n        // for (let i = 0; i <= 100; i += 100 / (this.props.marksNum - 1)) {\r\n        //     this.marks[i] = this.makeMark( this.state.regression.predict(i)[1] );\r\n        // }\r\n    }\r\n\r\n    makeMark(value) {\r\n        return {\r\n            label: this.props.markFormatter(\r\n                Math.floor(value)\r\n            ),\r\n            style: this.props.marksStyle\r\n        };\r\n    }\r\n\r\n    onChange(v) {\r\n        console.log('onChange', v)\r\n        const value =  Math.floor(this.state.regression.predict(v)[1]);\r\n        this.setState({value: value})\r\n        this.props.onChange(value)\r\n    }\r\n \r\n    findX(y) {\r\n        // y = e^bx ==> x = ln(y) / b\r\n        return Math.log(y)/this.state.regression.equation[1];\r\n    }\r\n    \r\n    setValue(v) {\r\n        this.setState({value: v})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            \t<div>\r\n\t\t\t\t\t<Badge  color=\"light\" onClick={this.onBadgeClick} className=\"d-i\">\r\n                        {this.props.badgeFormatter(this.state.value)}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n                <Slider ref=\"slider\" included={false} value={this.findX(this.state.value)} style={{height: '45px'}} onChange={(v) => this.onChange(v)} min={0} max={100} step={0.5} marks={this.marks}/>\r\n            </>\r\n        )\r\n\r\n    }\r\n    \r\n}\r\n \r\nexport default GeometricSlider;\r\n\r\nGeometricSlider.defaultProps = {\r\n    marksNum: 6,\r\n    marksStyle: {\r\n        color: '#ccc'\r\n    },\r\n    desc: '',\r\n    badgeFormatter: function(v) {return v;},\r\n    markFormatter: function(v) {return v;},\r\n    defaultValue: 50,\r\n    marksAt: []\r\n}","import React, { Component } from \"react\";\r\nimport SimplePanel from \"./SimplePanel\";\r\nimport {ButtonGroup, Button, Collapse, ButtonDropdown, DropdownToggle, DropdownItem, DropdownMenu} from \"reactstrap\";\r\nimport { playModes } from \"./PlayModes\"\r\nimport GeometricSlider from \"./GeometricSlider\";\r\nimport Utils from \"./Utils\";\r\n\r\n\r\nclass ModePanel extends Component {\r\n\tstate = {\r\n\t\tplayMode: playModes.BY_TIME,\r\n\t\tbpmStep: 10,\r\n        bpmStepDropdownOpen: false,\r\n        byTimeInterval: 5,\r\n        byBarInterval: 2\r\n    };\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state.playMode = props.playMode;\r\n\t\tif (props.playMode === playModes.BY_BAR) {\r\n\t\t\tthis.state.byBarInterval = props.interval;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.state.byTimeInterval  = props.interval;\r\n\t\t}\r\n\t\tthis.state.bpmStep = props.bpmStep;\r\n\t\t// debugger\r\n\t}\r\n\r\n\tonModeChange(newMode) {\r\n        this.setState({ playMode: newMode }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBpmStepChange() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tbpmStepDropdownOpen: !prevState.bpmStepDropdownOpen\r\n        }),);\r\n\t}\r\n\r\n\tonBpmStepSelect(value) {\r\n\t\tthis.setState({ bpmStep: value }, this.props.onAfterChange);\r\n\t}\r\n\r\n    getValue() {\r\n        const o = {\r\n            playMode: this.state.playMode,\r\n            interval: this.state.playMode === playModes.BY_BAR ? this.state.byBarInterval : this.state.byTimeInterval,\r\n            bpmStep: this.state.bpmStep\r\n\t\t}\r\n\t\treturn o;\r\n\t}\r\n\t\r\n\tsetValue(o) {\r\n\t\tthis.setState({\r\n\t\t\tplayMode: o.playMode,\r\n\t\t\tbpmStep: o.bpmStep,\r\n\t\t\tbyBarInterval: o.playMode === playModes.BY_BAR ? o.interval : this.state.byBarInterval,\r\n\t\t\tbyTimeInterval: o.playMode === playModes.BY_TIME ? o.interval : this.state.byTimeInterval\r\n\t\t}, this.props.onAfterChange);\r\n\r\n\t\tconst slider =  o.playMode === playModes.BY_BAR ? this.refs.byBarSlider : this.refs.byTimeSlider\r\n\t\tslider.setValue(o.interval)\r\n\r\n\t}\r\n\t\r\n\tonTimeIntervalChange(v) {\r\n\t\tthis.setState({byTimeInterval: v}, this.props.onAfterChange)\r\n\t}\r\n\r\n\tonBarIntervalChange(v) {\r\n\t\tthis.setState({byBarInterval: v}, this.props.onAfterChange)\r\n\t}\r\n\r\n\tbyBarFormatter(barsNum) {\r\n\t\tlet s = barsNum + ' '\r\n\t\tif (barsNum === 1) {\r\n\t\t\ts += 'bar'\r\n\t\t}\r\n\t\telse {\r\n\t\t\ts += 'bars'\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\t\r\n\tbyTimeFormatter(time) {\r\n\t\tlet s = Utils.formatTime(time) + ' '\r\n\r\n\t\tif (time === 1) {\r\n\t\t\ts += 'second';\r\n\t\t}\r\n\t\telse if (time < 60) {\r\n\t\t\ts += 'seconds';\r\n\t\t}\r\n\t\telse if (time < 120) {\r\n\t\t\ts += 'minute';\r\n\t\t}\r\n\t\telse {\r\n\t\t\ts += 'minutes';\r\n\t\t}\r\n\t\treturn s\r\n\t}\r\n \r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SimplePanel className=\"ModePanel\" title=\"Mode\"> \t\r\n\t\t\t\t<ButtonGroup  size=\"sm\">\r\n\t\t\t\t\t<Button size=\"sm\" outline color=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.BY_BAR)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.BY_BAR}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBy bar\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button  size=\"sm\" outline color=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.BY_TIME)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.BY_TIME}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBy time\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.BY_BAR}>\r\n\t\t\t\t\t<div>Increase speed every\r\n\t\t\t\t\t<GeometricSlider ref=\"byBarSlider\" defaultValue={this.state.byBarInterval} badgeFormatter={this.byBarFormatter} onChange={(v) => this.onBarIntervalChange(v)} min={1} max={301} marksAt={[1,2,5,10,20, 50,100,300]}/></div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.BY_TIME}>\t\t\t \r\n\t\t\t\t\t<div>Increase speed every\r\n\t\t\t\t\t\t<GeometricSlider ref=\"byTimeSlider\"  defaultValue={this.state.byTimeInterval} badgeFormatter={this.byTimeFormatter} markFormatter={Utils.formatTime} onChange={(v) => this.onTimeIntervalChange(v)} min={1} max={600} marksAt={[1,2,10,30,60,120,240,600]} />\r\n                    </div>\r\n\t\t\t\t\t\r\n\t\t\t\t</Collapse>\r\n                increase speed by\r\n                <ButtonDropdown  style={{margin: '0px 5px'}}\r\n\t\t\t\t\t\tisOpen={this.state.bpmStepDropdownOpen}\r\n\t\t\t\t\t\ttoggle={() => this.onBpmStepChange()}>\r\n\t\t\t\t\t\t<DropdownToggle caret size=\"sm\" outline color=\"light\">\r\n\t\t\t\t\t\t\t{this.state.bpmStep}\r\n\t\t\t\t\t\t</DropdownToggle>\r\n\t\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => {this.onBpmStepSelect(5)}}>\r\n\t\t\t\t\t\t\t\t5\r\n\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => {this.onBpmStepSelect(10)}}>\r\n\t\t\t\t\t\t\t\t10\r\n\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => {this.onBpmStepSelect(20)}}>\r\n\t\t\t\t\t\t\t\t20\r\n\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => {this.onBpmStepSelect(30)}}>\r\n                             \t30\r\n\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => {this.onBpmStepSelect(50)}}>\r\n\t\t\t\t\t\t\t\t50\r\n\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t\t</ButtonDropdown>\r\n\t\t\t\t\tbpm\r\n\t\t\t</SimplePanel>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModePanel;\r\n\r\nModePanel.defaultProps = {\r\n\tonAfterChange: null\r\n };","import {playModes} from \"./PlayModes\"\r\nimport InstrumentLib, { instruments } from \"./InstrumentLib\";\r\n\r\n\r\nexport const PresetsLib = [\r\n    {\r\n        title: \"4 beats every 4 bars\",\r\n        beatsPerStep: 4,\r\n        playMode: playModes.BY_BAR,\r\n        interval: 4,\r\n        bpmStep: 20,\r\n        bpmRange: [100, 400],\r\n        accents: [0, 1, 2, 1]\r\n    },\r\n    {\r\n        title: \"Jhaptal tabla\",\r\n        instrument: instruments.TABLA,\r\n\t\tbeatsPerStep: 10,\r\n\t\tbpmRange: [200, 400],\r\n        accents: [0, 1, 0, 0, 1, 2, 1, 0, 0, 1 ],\r\n        playMode: playModes.BY_TIME,\r\n        interval: 5*60,\r\n        bpmStep: 10\r\n    },\r\n    {title: \"Balkan 1\", \"bpmRange\":[241,400],\"beatsPerStep\":7,\"accents\":[0,1,2,0,1,2,1],\"instrument\":\"electrokit\",\"playMode\":\"by_bar\",\"interval\":20,\"bpmStep\":30},\r\n    {title: \"Balkan 2\", \"bpmRange\":[293,400],\"beatsPerStep\":7,\"accents\":[0,1,2,0,1,2,1],\"instrument\":\"tabla\",\"playMode\":\"by_bar\",\"interval\":300,\"bpmStep\":50},\r\n    {title: \"Groove 1\", \"bpmRange\":[222,262],\"beatsPerStep\":8,\"accents\":[0,2,1,2,1,0,1,1],\"instrument\":\"electrokit\",\"playMode\":\"by_time\",\"interval\":600,\"bpmStep\":50},\r\n    {title: \"Groove 2\", \"bpmRange\":[222,400],\"beatsPerStep\":8,\"accents\":[0,2,0,2,2,2,0,1],\"instrument\":\"electrokit\",\"playMode\":\"by_bar\",\"interval\":20,\"bpmStep\":50}\r\n];","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./components/SoundMachine\";\nimport SoundMachine from \"./components/SoundMachine\";\nimport Planner from \"./components/Planner\";\nimport \"rc-slider/assets/index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport {\n\tButtonDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem\n} from \"reactstrap\";\nimport AdvancedSlider from \"./components/AdvancedSlider\";\nimport AdvancedRange from \"./components/AdvancedRange\";\nimport BarManager from \"./components/BarManager\";\nimport { instruments } from \"./components/InstrumentLib\";\nimport PresetsManager from \"./components/PresetsManager\";\nimport ModePanel from \"./components/ModePanel\";\nimport { playModes } from \"./components/PlayModes\";\nimport { withCookies } from \"react-cookie\";\nimport { PresetsLib } from \"./components/PresetsLib\";\nimport { accentTypes } from \"./components/AccentTypes\";\nimport SimplePanel from \"./components/SimplePanel\";\n\nclass App extends Component {\n\ttimer = {\n\t\ttimerRef: null,\n\t\tstartTime: null\n\t};\n\n\tstate = {\n\t\tcurrentBpm: 60,\n\t\tinstrument: instruments.ELECTRO_KIT,\n\t\tinstrumentDropdownOpen: false,\n\t\tinstrumentDropdownLabel: \"Electro kit\", // bit messy, why would we hardcode this here, it ought to be taken from instrumentLib\n\t\tcycleDropdownOpen: false,\n\t\tlockBpm: false\n\t};\n\n\tcomponentDidMount() {\n\t\t// initialize with UI settings\n\t\tthis.refs.planner.setPlan(this.getUiState());\n\n\t\t// pass the event so we know how to display progress when in BY_BAR mode\n\t\tthis.refs.planner.setProgressEvent(this.refs.sm.loopEndEvent);\n\n\t\t// initialize accents\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getAccents());\n\n\t\t// keyboard listeners\n\t\tdocument.addEventListener(\"keydown\", (e) => this.handleKeyDown(e));\n\t}\n\n\thandleKeyDown(e) {\n\t\te.stopPropagation();\n\t\tconsole.log('key', e)\n\t\tswitch(e.keyCode)\n\t\t{\n\t\t\tcase 32: // space\n\t\t\t\tthis.handleStartStop()\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase 38: // Arrow up\n\t\t\t\te.stopPropagation();\n\t\t\t\tthis.refs.planner.stepForward()\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase 40: // arrow down\n\t\t\te.stopPropagation();\n\t\t\t\tthis.refs.planner.stepBackward()\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tdefault:\n\t\t}\n\t}\n\tonInstrumentSelect(newInstrument) {\n\t\tthis.refs.sm.setInstrument(newInstrument);\n\t\tconst label = this.refs.sm.getCurrentInstrumentLabel();\n\t\tconsole.log(\"setting new instrument. state.instrument\", newInstrument);\n\t\tthis.setState({\n\t\t\tinstrument: newInstrument,\n\t\t\tinstrumentDropdownLabel: label\n\t\t});\n\t}\n\n\t// renderCyclePane() {\n\t// \treturn (\n\t// \t\t<Container className=\"pane\">\n\t// \t\t\t<Row className=\"pane-title\">Cycle</Row>\n\t// \t\t\t<Row>\n\t// \t\t\t\t<Col xs={3}>Beats per step</Col>\n\t// \t\t\t\t<Col>\n\t// \t\t\t\t\t<AdvancedSlider\n\t// \t\t\t\t\t\tref=\"beatsPerStep\"\n\t// \t\t\t\t\t\tmin={2}\n\t// \t\t\t\t\t\tmax={16}\n\t// \t\t\t\t\t\tdefaultValue={this.props.beatsPerStep}\n\t// \t\t\t\t\t\tonAfterChange={() => this.onBeatsPerStepChange()}\n\t// \t\t\t\t\t/>\n\t// \t\t\t\t</Col>\n\t// \t\t\t</Row>\n\n\t// \t\t\t<Row>\n\t// \t\t\t\t<Col xs={3}>Accents</Col>\n\t// \t\t\t\t<Col>\n\t// \t\t\t\t\t<BarManager\n\t// \t\t\t\t\t\tonAfterChange={() => this.onAccentsChange()}\n\t// \t\t\t\t\t\tref=\"barManager\"\n\t// \t\t\t\t\t\tdefaultValue={this.props.accents}\n\t// \t\t\t\t\t/>\n\t// \t\t\t\t</Col>\n\t// \t\t\t</Row>\n\t// \t\t</Container>\n\t// \t);\n\t// }\n\n\trenderBpmRangePane() {\n\t\treturn (\n\t\t\t<SimplePanel title=\"RANGE\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"3\">BPM</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedRange\n\t\t\t\t\t\t\tref=\"bpmRange\"\n\t\t\t\t\t\t\tmin={30}\n\t\t\t\t\t\t\tmax={600}\n\t\t\t\t\t\t\tdefaultValue={[\n\t\t\t\t\t\t\t\tthis.props.bpmRange[0],\n\t\t\t\t\t\t\t\tthis.props.bpmRange[1]\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tpushable={true}\n\t\t\t\t\t\t\tonAfterChange={() => this.onBpmRangeChange()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</SimplePanel>\n\t\t);\n\t}\n\n\trenderPlaybackPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">PLAYBACK</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"3\">Instrument</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\tisOpen={this.state.instrumentDropdownOpen}\n\t\t\t\t\t\t\ttoggle={() => this.onInstrumentChange()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DropdownToggle caret size=\"sm\" outline color=\"light\">\n\t\t\t\t\t\t\t\t{this.state.instrumentDropdownLabel}\n\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tinstruments.TABLA\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tTabla\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tinstruments.ELECTRO_KIT\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tElectro Kit\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Beats per step</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"beatsPerStep\"\n\t\t\t\t\t\t\tmin={2}\n\t\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\t\tdefaultValue={this.props.beatsPerStep}\n\t\t\t\t\t\t\tonAfterChange={() => this.onBeatsPerStepChange()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Accents</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<BarManager\n\t\t\t\t\t\t\tonAfterChange={() => this.onAccentsChange()}\n\t\t\t\t\t\t\tref=\"barManager\"\n\t\t\t\t\t\t\tdefaultValue={this.props.accents}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col xs=\"3\">Playback</Col>\n\t\t\t\t\t<Col>One Time/LoopBack/Repeat</Col>\n\t\t\t\t</Row> */}\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonModePanelChanged() {\n\t\tconst state = this.getUiState();\n\n\t\tconsole.log(\"<App>onModePanelChanged\", state);\n\t\tthis.refs.planner.setPlan(state);\n\t\tif (state.playMode === playModes.BY_BAR) {\n\t\t\tthis.refs.sm.setLoopEnd(state.bars);\n\t\t}\n\t}\n\n\trenderRightPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPresetsPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\trenderLeftPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title=\"Control\">\n\t\t\t\t\t\t\t<Button outline color=\"light\"\n\t\t\t\t\t\t\t\tonClick={() => this.handleStartStop()}\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tStart / Stop\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{/* <Button onClick={() => this.onLockBpmBtn()}>\n\t\t\t\t\t\t\t\tLock BPM\n\t\t\t\t\t\t\t</Button> */}\n\t\t\t\t\t\t</SimplePanel>\n\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderBpmRangePane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ModePanel\n\t\t\t\t\t\t\tref=\"modePanel\"\n\t\t\t\t\t\t\tplayMode={this.props.playMode}\n\t\t\t\t\t\t\tinterval={this.props.interval}\n\t\t\t\t\t\t\tbpmStep={this.props.bpmStep}\n\t\t\t\t\t\t\t// defaultValue={{playMode: this.props.playMode, interval: this.props.interval, bpmStep: this.props.bpmStep}}\n\t\t\t\t\t\t\tonAfterChange={() => this.onModePanelChanged()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPlaybackPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col>{this.renderCyclePane()}</Col>\n\t\t\t\t</Row> */}\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderPresetsPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">Presets</Row>\n\t\t\t\t<PresetsManager\n\t\t\t\t\tref=\"presetsManager\"\n\t\t\t\t\tpreset={this.uiState}\n\t\t\t\t\tcookies={this.props.cookies}\n\t\t\t\t\tpresets={PresetsLib}\n\t\t\t\t\tonSelect={preset => this.onPresetSelect(preset)}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t);\n\t}\n \n\tonPresetSelect(preset) {\n\t\tconsole.log(\"setting preset\", preset);\n\n\t\t// this.setState({exerciseDuration: preset.exerciseDuration})\n\n\t\tthis.refs.bpmRange.setState({\n\t\t\tbounds: [preset.bpmRange[0], preset.bpmRange[1]]\n\t\t});\n\t\tthis.refs.beatsPerStep.setState({ value: preset.beatsPerStep });\n\t\t// this.refs.barManager.setBeatsAmount(preset.beatsPerStep);\n\t\tthis.refs.sm.setBeatsPerStep(preset.beatsPerStep);\n\t\t// this.refs.totalSteps.setState({ value: preset.totalSteps });\n\n\t\tthis.onInstrumentSelect(preset.instrument || instruments.TABLA);\n\n\t\tthis.refs.barManager.setAccents(preset.accents, preset.beatsPerStep);\n\n\t\t// set mode\n\t\tthis.refs.modePanel.setValue(preset);\n\n\t\t// this.refs.exerciseDuration.setState(\n\t\t// \t{ value: preset.exerciseDuration },\n\t\t// \tthis.exerciseDurationChanged\n\t\t// );\n\n\t\t// this will trigger restart\n\t\t// this.exerciseDurationChanged()\n\t\t//this.refs.exerciseDuration.setState({value: 20})\n\t\t//this.exerciseDuration.setValue(preset.exerciseDuration)\n\t}\n\n\trenderPlanPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">Plan</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Planner\n\t\t\t\t\t\tlockBpm={this.state.lockBpm}\n\t\t\t\t\t\t//plan={(this.state)}\n\t\t\t\t\t\tonChange={() => this.onPlanChanged()}\n\t\t\t\t\t\tonAdvance={currentStep =>\n\t\t\t\t\t\t\tthis.onPlanAdvanced(currentStep)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tref=\"planner\"\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderMidPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title={\"BPM\"}>\n\t\t\t\t\t\t\t{this.state.currentBpm.toFixed(0)}\n\t\t\t\t\t\t</SimplePanel>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPlanPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonLoopEnd() {\n\t\tconst s = this.getUiState();\n\t\tif (s.playMode === playModes.BY_BAR) {\n\t\t\tconsole.log(\"onLoopEnd fetched\");\n\t\t\tthis.refs.planner.onInterval();\n\t\t}\n\t}\n\n\tonBeat(idx) {\n\t\tthis.refs.barManager.setActive(idx);\n\t}\n\n\trender() {\n\t\t// set the title with current BPM\n\t\tdocument.title =\n\t\t\t\"SpeedTrainer | BPM: \" + this.state.currentBpm.toFixed(0);\n\n\t\t// render everything else\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<SoundMachine\n\t\t\t\t\tref=\"sm\"\n\t\t\t\t\tbeatsPerStep={this.state.beatsPerStep}\n\t\t\t\t\tonLoopEnd={() => this.onLoopEnd()}\n\t\t\t\t\tonBeat={beat => this.onBeat(beat)}\n\t\t\t\t\tinstrument={this.state.instrument}\n\t\t\t\t/>\n\t\t\t\t<Container className=\"app-container\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* left pane with controls */}\n\t\t\t\t\t\t\t{this.renderLeftPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>{this.renderMidPane()}</Col>\n\t\t\t\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* right pane with examples and plan*/}\n\t\t\t\t\t\t\t{this.renderRightPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tonLockBpmBtn() {\n\t\tthis.setState({ lockBpm: !this.state.lockBpm });\n\t}\n\n\t// totalStepsChanged = () => {\n\t// \tconst s = this.getUiState();\n\t// \tif (s.totalSteps !== this.state.totalSteps) {\n\t// \t\tthis.refs.planner.setPlan(s);\n\t// \t}\n\t// };\n\n\tonBeatsPerStepChange = () => {\n\t\t// plan doesn't change here, just the beats per step amount\n\t\tconst newBps = this.getUiState().beatsPerStep;\n\n\t\tif (newBps !== this.refs.sm.beatsPerStep) {\n\t\t\tconst accents = this.refs.barManager.getAccents();\n\n\t\t\twhile (accents.length > newBps) {\n\t\t\t\taccents.pop();\n\t\t\t}\n\t\t\twhile (accents.length < newBps) {\n\t\t\t\taccents.push(accentTypes.ACCENT_2);\n\t\t\t}\n\n\t\t\tthis.refs.sm.setBeatsPerStep(newBps);\n\t\t\tthis.refs.barManager.setAccents(accents);\n\t\t\tthis.setState({ beatsPerStep: newBps });\n\t\t}\n\t};\n\n\tonBpmRangeChange() {\n\t\tconst s = this.getUiState();\n\t\tif (\n\t\t\ts.bpmRange[0] !== this.props.bpmRange[0] ||\n\t\t\ts.bpmRange[1] !== this.props.bpmRange[1]\n\t\t) {\n\t\t\tthis.setState({ bpmRange: s.bpmRange });\n\t\t\tthis.refs.planner.setPlan(s);\n\t\t}\n\t}\n\n\tonPlanAdvanced = newStep => {\n\t\tif (newStep) {\n\t\t\tconsole.log(\"<App>onPlanAdvanced() new step:\", newStep);\n\t\t\tthis.setBpm(newStep.bpm);\n\t\t} else {\n\t\t\t// no step so just stop planner and transport\n\t\t\tthis.refs.planner.stop();\n\t\t\tthis.refs.sm.stop();\n\t\t}\n\t};\n\n\tsetBpm = newBpm => {\n\t\tthis.setState({ currentBpm: newBpm });\n\t\tthis.refs.sm.setBpm(newBpm);\n\t};\n\n\tonPlanChanged = () => {\n\t\tconsole.log(\"<App>onPlanChanged\");\n\n\t\t// this.refs.planner.start();\n\t\tlet bar = this.refs.planner.getCurrentBar();\n\n\t\tthis.refs.sm.setLoopEnd(bar.end || false);\n\n\t\t// set initial speed\n\t\tif (bar) {\n\t\t\tthis.setBpm(bar.bpm);\n\t\t}\n\n\t\tif (this.refs.sm.state.isPlaying) {\n\t\t\tthis.refs.planner.start();\n\t\t}\n\t};\n\n\tonInstrumentChange() {\n\t\tthis.setState(prevState => ({\n\t\t\tinstrumentDropdownOpen: !prevState.instrumentDropdownOpen\n\t\t}));\n\t}\n\n\thandleStartStop = () => {\n\t\tif (this.refs.sm.state.isPlaying === true) {\n\t\t\tthis.refs.planner.stop();\n\t\t\tthis.refs.sm.stop();\n\t\t} else {\n\t\t\tthis.refs.planner.start();\n\t\t\tthis.refs.sm.start();\n\t\t}\n\t};\n\n\tgetUiState() {\n\t\t// obsolete, we're going to use new UI from ModePanel\n\t\tconst s1 = {\n\t\t\tbpmRange: this.refs.bpmRange.getValue(),\n\t\t\tbeatsPerStep: this.refs.beatsPerStep.getValue(),\n\t\t\taccents: this.refs.barManager.getAccents(),\n\t\t\tinstrument: this.state.instrument\n\t\t};\n\n\t\tconst s2 = this.refs.modePanel.getValue();\n\n\t\tconst uiState = { ...s1, ...s2 };\n\t\t// console.log('uiState', uiState)\n\t\t// store current state in component state so we know what's going on always (do we? really?)\n\t\t// this.setState({ uiState });\n\t\t// store current state\n\t\tconsole.log(\"storing uiState\", this.uiState);\n\t\tthis.uiState = uiState;\n\t\t// HACK\n\t\tthis.uiState.instrument = this.state.instrument;\n\t\treturn uiState;\n\t}\n\n\tonAccentsChange() {\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getAccents());\n\t}\n}\n\nexport default withCookies(App);\n\n// this serves as default app settings\nApp.defaultProps = {\n\tplayMode: playModes.BY_BAR,\n\tinterval: 2,\n\tinstrument: instruments.TABLA,\n\tbpmStep: 50,\n\tbpmRange: [100, 400],\n\tbeatsPerStep: 4,\n\taccents: [0, 1, 2, 1]\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {CookiesProvider} from 'react-cookie'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(  <CookiesProvider> <App  /> </CookiesProvider> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}