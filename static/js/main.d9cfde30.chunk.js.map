{"version":3,"sources":["components/AccentTypes.jsx","components/SoundMachineInstrument.jsx","components/InstrumentLib.jsx","components/SoundMachine.jsx","components/PlayModes.jsx","components/SimpleProgress.jsx","components/Utils.jsx","components/Planner.jsx","components/AdvancedSlider.jsx","components/Accent.jsx","components/BarManager.jsx","components/EditPresetModal.jsx","components/PresetsManager.jsx","components/SimplePanel.jsx","components/GeometricSlider.jsx","components/AdvancedRange.jsx","components/ModePanel.jsx","components/PresetsLib.jsx","App.jsx","serviceWorker.js","index.js"],"names":["accentTypes","ACCENT_1","ACCENT_2","ACCENT_3","accentTypesArr","SoundMachineInstrument","props","_this","Object","classCallCheck","this","console","log","key","o","C3","samples","C#3","D3","possibleConstructorReturn","getPrototypeOf","call","baseUrl","label","Sampler","instruments","TABLA","ELECTRO_KIT","InstrumentLib","defaultInstrument","state","lib","currentInstrument","undefined","tabla","toMaster","electro","setInstrument","Error","Component","SoundMachine","accentNotes","instrumentLib","currentBeat","beatsPerStep","score","isPlaying","accents","part","repeat","time","idx","note","getInstrument","triggerAttackRelease","updateVis","Tone","Draw","schedule","setBpm","bpm","isNaN","Transport","value","setBeatsPerStep","newBps","length","pop","push","timeSignature","setLoopEnd","loopEndEvent","barsAmount","setState","onBeat","playNote","handleStartStop","stop","start","onToggle","getBpm","instrument","_this2","Synth","Buffer","on","onBufferError","context","latencyHint","scheduleRepeat","Event","onLoopEndFunc","initialized","onLoopEnd","loop","instrumentKey","bars","cancel","loopEnd","i","_this3","react_default","a","createElement","Button","outline","color","onClick","block","active","defaultProps","playModes","BY_BAR","BY_TIME","STABLE","SimpleProgress","Container","className","style","width","display","Utils","padTime","t","formatTime","timeInSeconds","Date","setSeconds","getMinutes","getSeconds","Planner","stepProgress","isPaused","timer","ref","startTime","stepsCounter","stepProgressUpdateInterval","planChanged","onChange","barRender","b","cls","currentStep","step","onStepClick","segmentDuration","toFixed","end","s","segments","playMode","min","bpmRange","max","segment","interval","bpmStep","Infinity","stableBpmSlider","uiStateObject","plan","makePlan","totalPlanTime","bar","timeEnd","startTimeFormatted","endTimeFormatted","prevState","pause","resetStep","lockBpm","clearInterval","onAdvance","stepForward","onInterval","bind","setInterval","stepProgressUpdateTimer","updateStepProgress","event","getCurrentBar","progress","now","getTime","_this4","date","_this5","Badge","currentBpm","components_SimpleProgress","opacity","map","AdvancedSlider","Fragment","height","get","prototype","Slider","Accent","isCurrent","type","BarManager","defaultValue","onAfterChange","selected","newBars","toConsumableArray","lastActiveAccent","toggleCurrent","el","refs","components_Accent","handleCellClick","EditPresetModal","modal","preset","showDelete","toggle","assertThisInitialized","title","onSave","e","newTitle","target","objectSpread","onDeleteBtn","size","onSaveBtn","Modal","isOpen","ModalHeader","ModalBody","Input","titleChanged","JSON","stringify","ModalFooter","handleSave","renderDelete","PresetsManager","showEdit","userPresets","cookies","Array","fill","onSelect","toLowerCase","saveInCookie","presets","set","path","indexOf","splice","stopPropagation","presetEditor","edit","parse","Row","item","Col","onPresetClick","onMouseEnter","showEditBtn","onMouseLeave","hideEditBtn","class","visibility","onPresetEdit","components_EditPresetModal","onPresetDelete","onSavePreset","SimplePanel","children","GeometricSlider","regression","d","exponential","precision","string","prepareMarks","marks","marksAt","findX","markFormatter","Math","floor","marksStyle","v","predict","y","equation","onBadgeClick","badgeFormatter","es","included","marksNum","desc","AdvancedRange","bounds","Range","ModePanel","bpmStepDropdownOpen","byTimeInterval","byBarInterval","onBpmSliderChange","newMode","byBarSlider","byTimeSlider","setValue","barsNum","ButtonDropdown","margin","onBpmStepChange","DropdownToggle","caret","DropdownMenu","DropdownItem","onBpmStepSelect","components_AdvancedRange","pushable","onBpmRangeChange","components_SimplePanel","ButtonGroup","onModeChange","Collapse","renderSpeedRange","components_GeometricSlider","byBarFormatter","onBarIntervalChange","byTimeFormatter","onTimeIntervalChange","renderIncreaseBpmDropdown","components_AdvancedSlider","30","100","200","300","400","500","600","PresetsLib","App","timerRef","instrumentDropdownOpen","instrumentDropdownLabel","cycleDropdownOpen","onBeatsPerStepChange","getUiState","sm","barManager","getAccents","setAccents","onPlanAdvanced","newStep","planner","newBpm","onPlanChanged","onSoundMachineToggle","setProgressEvent","document","addEventListener","handleKeyDown","setPlan","keyCode","preventDefault","stepBackward","newInstrument","getCurrentInstrumentLabel","xs","onInstrumentChange","onInstrumentSelect","components_BarManager","onAccentsChange","renderPresetsPane","components_SoundMachine","beat","components_ModePanel","onModePanelChanged","renderPlaybackPane","components_PresetsManager","uiState","onPresetSelect","modePanel","_this6","components_Planner","setActive","renderLeftPane","renderMidPane","renderRightPane","s1","getValue","s2","withCookies","Boolean","window","location","hostname","match","ReactDOM","render","es6","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9cfde30.chunk.js","sourcesContent":["export const accentTypes = {\r\n\tACCENT_1: 0,\r\n\tACCENT_2: 1,\r\n\tACCENT_3: 2\r\n};\r\n\r\nexport const accentTypesArr = [\r\n\taccentTypes.ACCENT_1, accentTypes.ACCENT_2, accentTypes.ACCENT_3\r\n];","import {Sampler} from 'tone'\r\n\r\n\r\nclass SoundMachineInstrument extends Sampler {\r\n\r\n    constructor(props) {\r\n        console.log('<SoundMachineInstrument>constructor', props.key)\r\n        var o = {\r\n            \"C3\" : props.samples[0],\r\n            \"C#3\" : props.samples[1],\r\n            \"D3\" : props.samples[2],\r\n        };\r\n        super(o,{\r\n            baseUrl: props.baseUrl || './audio/' + props.key + '/'\r\n        });\r\n        this.key = props.key;\r\n        this.label = props.label;\r\n    }\r\n}\r\n\r\nexport default SoundMachineInstrument;\r\n\r\n ","import { Component } from \"react\";\r\nimport SoundMachineInstrument from \"./SoundMachineInstrument\"\r\n\r\nexport const instruments = {\r\n\tTABLA: \"tabla\",\r\n\tELECTRO_KIT: \"electrokit\"\r\n\t// ACOUSTIC_KIT: \"acoustic_kit\"\r\n};\r\n\r\nclass InstrumentLib extends Component {\r\n\tstate = {};\r\n    lib = {};\r\n    currentInstrument = undefined\r\n\r\n\r\n    constructor(defaultInstrument) {\r\n        super();\r\n    \r\n        //Tone.Buffer.on(\"load\", () => this.onBufferLoaded());\r\n\t\tvar tabla = new SoundMachineInstrument({\r\n            key: instruments.TABLA,\r\n            label: \"Tabla\",\r\n\t\t\tsamples: [\"dha-slide.wav\", \"dhin-slide.wav\", \"tin.wav\"]\r\n        }).toMaster();\r\n        \r\n        this.lib[ tabla.key ] = tabla;\r\n    \r\n        var electro = new SoundMachineInstrument({\r\n            key: instruments.ELECTRO_KIT,\r\n            label: 'Electronic Kit',\r\n\t\t\tsamples: [\"Kick.wav\", \"HiHat.wav\", \"Snare.wav\"]\r\n        }).toMaster();\r\n        \r\n        this.lib[ electro.key ] = electro;\r\n\r\n        this.setInstrument(defaultInstrument)\r\n        \r\n        console.log('<InstrumentLib>done constructor')\r\n    }\r\n\r\n    setInstrument(key) {\r\n        if (this.lib[key] === undefined) {\r\n            throw new Error(\"InstrumentLib has no such instrument with given key: \" + key)\r\n        }\r\n        this.currentInstrument = key;\r\n    }\r\n \r\n    getInstrument() {\r\n        if (this.lib[this.currentInstrument] === undefined) {\r\n            throw new Error(\"There is no such instrument in InstrumentLib: \" + this.currentInstrument)\r\n        }\r\n        return this.lib[this.currentInstrument];\r\n    }\r\n\r\n\t// render() {\r\n\t// \treturn <div />;\r\n\t// }\r\n}\r\nexport default InstrumentLib;\r\n","import React, { Component } from \"react\";\r\nimport Tone from \"tone\";\r\nimport { accentTypes } from \"./AccentTypes\";\r\nimport InstrumentLib from \"./InstrumentLib\";\r\nimport {Button} from 'reactstrap'\r\n\r\nclass SoundMachine extends Component {\r\n\r\n\taccentNotes = [\"C3\", \"C#3\", \"D3\"]; // this stay in sync with AccentTypes\r\n\r\n\tinstrumentLib = undefined;\r\n\r\n\tcurrentBeat = 0;\r\n\tbeatsPerStep = 4;\t\r\n\r\n\r\n\tscore = [\"C3\", \"C#3\",\"C#3\",\"C#3\"];\r\n\r\n\tstate = {\r\n\t\t// currentBeat: 0,\r\n\t\t//isInitialized: false,\r\n\t\t// instrument: instruments.ELECTRO_KIT,\r\n\t\tisPlaying: false\r\n\t\t// cnt:0 \r\n\t};\r\n\r\n\taccents = [accentTypes.ACCENT_1]; // default with accent on first beat\r\n\tsamples = {};\r\n\r\n\tinstruments = {};\r\n\r\n\tpart = null;\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t// if (!props.beatsPerStep) {\r\n\t\t// \tthrow new Error(\"props.beatsPerStep is missing\");\r\n\t\t// }\r\n\t\t// this.state.beatsPerStep = props.beatsPerStep;\r\n\t\t// onAfterChange: null\r\n\t\t// onLoopEnd = props.onLoopEnd\r\n\r\n\t\t// init library\r\n\t\tthis.instrumentLib = new InstrumentLib(this.props.instrument)\r\n\t}\r\n\t\r\n\tonBufferError() {\r\n\t\tthrow new Error(\"Some buffers weren't found\")\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// reload/debug bell\r\n\t\tvar synth = new Tone.Synth().toMaster();\r\n\t\tsynth.triggerAttackRelease(\"A2\");\r\n\r\n\t\tTone.Buffer.on(\"error\", () => this.onBufferError());\r\n\r\n\t\t// Tone.Transport.on('stop', () => console.log('TRANSPORTstop'));\r\n\t\t// Tone.Transport.on('pause', () => console.log('TRANSPORT.pause'));\r\n\t\t// Tone.Transport.on('start', () => console.log('TRANSPORTstart'));\r\n\t\t// Tone.Transport.on('loop', () => console.log('TRANSPORT loop'));\r\n\t\t\r\n\t\tTone.context.latencyHint = \"playback\";\r\n\t\t\r\n\t\tTone.Transport.scheduleRepeat((time) => this.repeat(time), \"4n\", 0);\r\n\r\n\t\tthis.loopEndEvent = new Tone.Event(function(time, onLoopEndFunc) {\r\n\t\t\t// don't LoopEndFunc trigger on start when this event is executet for the first time\r\n\t\t\tif (this.initialized) {\r\n\t\t\t\tonLoopEndFunc();\r\n\t\t\t}\t\r\n\t\t\tthis.initialized = true;\r\n\t\t}, this.props.onLoopEnd);\r\n\r\n\t\tthis.loopEndEvent.loop = true;\r\n\r\n\t\t// TODO: dispatch ready event, so we can enable UI elements\r\n\t}\r\n\r\n\trepeat = (time) => {\r\n\t\tlet idx = this.currentBeat++ % this.beatsPerStep;\r\n\t\t\r\n\t\tlet note = this.score[idx];\r\n\t\t\r\n\t\t// make sound\r\n\t\tthis.instrumentLib.getInstrument().triggerAttackRelease(note, \"4n\", time);\r\n\t\t\r\n\t\t// draw stuff\r\n\t\tlet updateVis = this.updateVis;\r\n\t\tTone.Draw.schedule(() => updateVis(idx), time)\r\n\t}\r\n\r\n\tsetInstrument(instrumentKey) {\r\n\t\tthis.instrumentLib.setInstrument(instrumentKey);\r\n\t}\r\n\r\n\tgetCurrentInstrumentLabel() {\r\n\t\treturn this.instrumentLib.getInstrument().label;\r\n\t}\r\n\r\n\tsetBpm = bpm => {\r\n\t\tif (isNaN(bpm) || bpm <= 0 || bpm > 1000) {\r\n\t\t\tdebugger\r\n\r\n\t\t\tthrow new Error(\"Invalid BPM value: \" + bpm)\r\n\t\t}\r\n\t\tTone.Transport.bpm.value = bpm;\r\n\t};\r\n\r\n\tsetBeatsPerStep = newBps => {\r\n\t\t// console.log(\"<SoundMachine>setBeatsPerStep\", newBps)\r\n\t\t\r\n\t \r\n\t\tthis.beatsPerStep = newBps;\r\n\t\t\r\n\t\t// remove if needed\r\n        while (this.score.length > newBps) {\r\n\t\t\tthis.score.pop();\r\n\t\t}\r\n\r\n\t\t// add if needed\r\n\t\twhile (this.score.length < newBps) {\r\n\t\t\tthis.score.push(accentTypes.ACCENT_1)\r\n\t\t}\r\n\t\t\r\n\t\tTone.Transport.timeSignature = [newBps, 4];\r\n\r\n\t\t// restart loopevent because score length has been changed\r\n\t\tthis.setLoopEnd(this.loopEndEvent.barsAmount);\r\n\r\n\t\t// this will refresh visualisation\r\n\t\tthis.setState({beatsPerStep: newBps})\r\n\t};\r\n\r\n\tupdateVis = (currentBeat) => {\r\n\t\t// console.log('updateVis.currentBeat', currentBeat, Tone.Transport.progress)\r\n\t\t// console.log(\"<SM>updateVis\", currentBeat)\r\n\t\tthis.props.onBeat(currentBeat);\r\n\r\n\t\t// this.refs.vis.setActive(currentBeat)\r\n\t}\r\n\r\n\tplayNote = (time, note) => {\r\n\t\tthis.instrumentLib.getInstrument().triggerAttackRelease(note, \"4n\", time);\r\n\t}\r\n \r\n\tsetLoopEnd(bars) {\r\n\t\t// console.log('<SM>setLoopEnd', bars)\r\n\t\tthis.loopEndEvent.cancel();\r\n\r\n\r\n\t\tthis.loopEndEvent.barsAmount = bars;\r\n\t\t\r\n\t\tthis.loopEndEvent.loopEnd = this.loopEndEvent.barsAmount + \"m\"; \r\n\t\tthis.loopEndEvent.loop = true;\r\n\t\t//this.loopEndEvent.start(  this.loopEndEvent.barsAmount + \"m\") \r\n\t}\r\n\tsetAccents(accentTypesArr) {\r\n\t\t// if (accentTypesArr.length != this.part.length) {\r\n\t\t//     throw new Error(\"accentTypes has incorrect number of elements \" + accentTypesArr.length + \" vs \" + this.part.length)\r\n\t\t// }\r\n\t\tthis.accents = accentTypesArr;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.score.length; i++) {\r\n\t\t\t// by default 2 will be the tick note\r\n\t\t\tlet note = this.accentNotes[accentTypes.ACCENT_2];\r\n\r\n\t\t\t// if accent for this step is specified set it here\r\n\t\t\tif (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_1\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_1];\r\n\t\t\t} else if (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_3\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_3];\r\n\t\t\t}\r\n\t\t\tthis.score[i] = note;\r\n\t\t}\r\n\t}\r\n\r\n\thandleStartStop = () => {\r\n\t\tif (this.state.isPlaying === true) {\r\n\t\t\t// this.refs.planner.stop();\r\n\t\t\tthis.stop();\r\n\t\t\t\r\n\t\t} else {\t\t\t\r\n\t\t\t// if (this.state.playMode !== playModes.STABLE) {\r\n\t\t\t// \tthis.refs.planner.start();\r\n\t\t\t// }\t\t\t\r\n\t\t\tthis.start();\t\t\r\n\t\t}\r\n\r\n\t\tthis.props.onToggle(this.state.isPlaying)\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Button\r\n\t\t\t\toutline\r\n\t\t\t\tcolor=\"light\"\r\n\t\t\t\tonClick={() => this.handleStartStop()}\r\n\t\t\t\tblock\r\n\t\t\t\tactive={this.state.isPlaying}\r\n\t\t\t>\r\n\t\t\t\tStart / Stop\r\n\t\t\t</Button>\t\t\t\t\t\t\t\r\n\t\t\t// <div style={{width: '100%'}}>\r\n\t\t\t// \t{/* <div>Sound is {this.state.isPlaying === true ? \"playing\" : \"stopped\"}</div> */}\r\n\t\t\t// \t{/* <SimpleVis ref=\"vis\" beats={this.state.beatsPerStep}/> */}\r\n\t\t\t// </div>\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\t\t// console.log(\"<SoundMachine>stop()\");\r\n\t\tthis.setState({ isPlaying: false });\r\n\t\tthis.currentBeat = 0;\r\n\r\n\t\tTone.Transport.stop();\r\n\t\tthis.loopEndEvent.stop();\r\n\t}\r\n\r\n\tstart() {\r\n\t\t// console.log(\"<SoundMachine>start()\");\r\n\r\n\t\tthis.setState({ isPlaying: true });\r\n\t\t\r\n\t\tTone.Transport.start(\"+0.1\");\r\n\t\tthis.loopEndEvent.start(\"+0.1\");//this.loopEndEvent.barsAmount + \"m\");\r\n\r\n\t}\r\n\r\n\tgetBpm = () => {\r\n\t\treturn Tone.Transport.bpm.value;\r\n\t};\r\n}\r\n\r\nexport default SoundMachine;\r\n\r\n\r\nSoundMachine.defaultProps = {\r\n\tbeatsPerStep: 4,\r\n\tonLoopEnd: null,\r\n\tonToggle: function(state) {}\r\n };","export const playModes = {\r\n\tBY_BAR: \"by_bar\",\r\n\tBY_TIME: \"by_time\",\r\n\tSTABLE: \"stable\"\r\n};","import React, { Component } from 'react';\r\nimport {Container} from 'reactstrap';\r\n\r\nclass SimpleProgress extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( <Container className=\"SimpleProgress\">\r\n            <div className=\"bar\" style={{width: this.props.value  + \"%\", display: 'block'}} />\r\n        </Container> );\r\n    }\r\n}\r\n \r\nexport default SimpleProgress;","const Utils = {\r\n    padTime: function(t) {\r\n\t\treturn t < 10 ? \"0\" + t : t;\r\n\t},\r\n\tformatTime: function(timeInSeconds) {\r\n\t\t//{this.leadingZeroCheck(now.getMinutes())}:{now.getSeconds()} --\r\n\t\tlet t = new Date(0, 0, 0, 0, 0, 0, 0);\r\n\t\tt.setSeconds(timeInSeconds);\r\n\t\tlet m = t.getMinutes();\r\n\t\tlet o = \"\";\r\n\t\tif (m !== 0) {\r\n\t\t\to += t.getMinutes(); //this.padTime(t.getMinutes());\r\n            o += \":\";\r\n            o += \"\" + Utils.padTime(t.getSeconds());\r\n        }\r\n        else {\r\n            o += t.getSeconds();\r\n        }\r\n\t\treturn o;\r\n    }\r\n}\r\n\r\nexport default Utils;","import React, { Component } from \"react\";\r\nimport { Badge } from \"reactstrap\";\r\nimport { playModes } from \"./PlayModes\";\r\nimport SimpleProgress from \"./SimpleProgress\";\r\nimport Utils from \"./Utils\";\r\n\r\nclass Planner extends Component {\r\n\tstate = {\r\n\t\tbars: [],\r\n\t\tstepProgress: 0,\r\n\t\tisPaused: false\r\n\t};\r\n\r\n\ttimer = {\r\n\t\tref: null,\r\n\t\tstartTime: null\r\n\t};\r\n\tstepsCounter = 0;\r\n\tstepProgressUpdateInterval = 1000 / 30; // 30 fps\r\n\r\n\tmakePlan(s) {\r\n\t\tlet segments = [];\r\n\r\n\t\tif (s.playMode === playModes.BY_BAR) {\r\n\t\t\tconst min = s.bpmRange[0];\r\n\t\t\tconst max = s.bpmRange[1];\r\n\t\t\tlet bpm = min;\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tlet segment = {\r\n\t\t\t\t\tbpm: bpm,\r\n\t\t\t\t\tend: s.interval\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t} else if (s.playMode === playModes.BY_TIME) {\r\n\t\t\tconst min = s.bpmRange[0];\r\n\t\t\tconst max = s.bpmRange[1];\r\n\t\t\tlet bpm = min;\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tlet segment = {\r\n\t\t\t\t\ttime: i * s.interval,\r\n\t\t\t\t\tstart: i * s.interval,\r\n\t\t\t\t\tend: i * s.interval + s.interval,\r\n\t\t\t\t\tbpm: bpm\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t} else if (s.playMode === playModes.STABLE) {\r\n\t\t\tlet segment = {\r\n\t\t\t\ttime: Infinity,\r\n\t\t\t\tbpm: s.stableBpmSlider\r\n\t\t\t};\r\n\t\t\tsegments.push(segment);\r\n\t\t}\r\n\t\treturn segments;\r\n\t}\r\n\r\n\t// TODO: this is ugly\r\n\tsetPlan(uiStateObject) {\r\n\t\t// debugger\r\n\t\tconst plan = this.makePlan(uiStateObject);\r\n\r\n\t\t// console.log(\"<Planner>setPlan\", plan);\r\n\t\tvar bars = [];\r\n\r\n\t\tlet totalPlanTime = 0;\r\n\t\tconst playMode = uiStateObject.playMode;\r\n\t\tlet i = 0;\r\n\t\t\r\n\t\tswitch (uiStateObject.playMode) {\r\n\t\t\tcase playModes.BY_BAR:\r\n\t\t\t\tfor (i = 0; i < plan.length; i++) {\r\n\t\t\t\t\tconst bar = {\r\n\t\t\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\t\t\tend: plan[i].end,\r\n\t\t\t\t\t\tstep: this.stepsCounter++\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\ttotalPlanTime +=\r\n\t\t\t\t\t\t(60 / plan[i].bpm) *\r\n\t\t\t\t\t\tuiStateObject.beatsPerStep *\r\n\t\t\t\t\t\tplan[i].end;\r\n\t\t\t\t\tbars.push(bar);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase playModes.BY_TIME:\r\n\t\t\t\tfor (i = 0; i < plan.length; i++) {\r\n\t\t\t\t\tconst bar = {\r\n\t\t\t\t\t\ttime: plan[i].time,\r\n\t\t\t\t\t\ttimeEnd: plan[i].end,\r\n\t\t\t\t\t\tsegmentDuration: plan[i].end - plan[i].time,\r\n\t\t\t\t\t\tstartTimeFormatted: Utils.formatTime(plan[i].start),\r\n\t\t\t\t\t\tendTimeFormatted: Utils.formatTime(plan[i].end),\r\n\t\t\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\t\t\tstep: this.stepsCounter++\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\ttotalPlanTime += plan[i].end;\r\n\r\n\t\t\t\t\tbars.push(bar);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase playModes.STABLE:\r\n\t\t\t\ttotalPlanTime = Infinity;\r\n\t\t\t\tbars.push({\r\n\t\t\t\t\tbpm: plan[0].bpm,\r\n\t\t\t\t\ttime: Infinity,\r\n\t\t\t\t\tstep: 0\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(\"plan set to play at {0} bpm\", plan[0].bpm);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: \r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// update to new state\r\n\t\tthis.stepsCounter = 0;\r\n\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({\r\n\t\t\t\ttotalPlanTime: totalPlanTime,\r\n\t\t\t\tcurrentStep: 0,\r\n\t\t\t\tbars: bars,\r\n\t\t\t\tplayMode: playMode\r\n\t\t\t}),\r\n\t\t\t() => this.planChanged()\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\t\t// console.log(\"lockBpm\", this.props.lockBpm);\r\n\t\tthis.pause();\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tstepForward() {\r\n\t\tif (this.props.lockBpm) {\r\n\t\t\t// console.log(\"<Planner>isLocked == true so don't advance anything\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar currentStep = this.state.currentStep;\r\n\r\n\t\t// check if we're not at the end of plan\r\n\t\tif (currentStep + 1 >= this.state.bars.length) {\r\n\t\t\t// console.log(\"no more steps, please stop()\");\r\n\t\t\tif (this.timer) {\r\n\t\t\t\tconsole.log(\"stepforward() timer clear\");\r\n\t\t\t\tclearInterval(this.timer.ref);\r\n\t\t\t\tthis.timer = undefined;\r\n\t\t\t}\r\n\t\t\tthis.props.onAdvance(null);\r\n\t\t} else {\r\n\t\t\tthis.setState({ currentStep: this.state.currentStep + 1 });\r\n\t\t\tthis.props.onAdvance(this.state.bars[this.state.currentStep]);\r\n\t\t}\r\n\t\t// this.props.onAdvance(this.state.bars[this.state.currentStep]);\r\n\t}\r\n\r\n\tstepBackward() {\r\n\t\tif (this.props.lockBpm) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar currentStep = this.state.currentStep;\r\n\r\n\t\tif (currentStep - 1 < 0) {\r\n\t\t\t// console.log(\"no more steps, please stop()\");\r\n\t\t\tif (this.timer) {\r\n\t\t\t\tconsole.log(\"stepBackward timer clear\");\r\n\t\t\t\tclearInterval(this.timer.ref);\r\n\t\t\t\tthis.time = undefined;\r\n\t\t\t}\r\n\t\t\tthis.props.onAdvance(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({ currentStep: this.state.currentStep - 1 });\r\n\t\tthis.props.onAdvance(this.state.bars[this.state.currentStep]);\r\n\t}\r\n\r\n\tonInterval() {\r\n\t\tthis.stepForward();\r\n\t\tif (this.timer) {\r\n\t\t\t// set time when we changed step to be able to render progress easily\r\n\t\t\tthis.timer.startTime = new Date();\r\n\t\t}\r\n\t}\r\n\r\n\tstart() {\r\n\t\tconsole.log(\"<Planner>start()\");\r\n\t\t// debugger\r\n\t\t// make sure we dispose any timer that's currently set\r\n\t\tif (this.timer) {\r\n\t\t\tconsole.log(\"<Planner>startTimer() old timer disposed\");\r\n\r\n\t\t\tclearInterval(this.timer.ref);\r\n\t\t\tthis.timer.ref = undefined;\r\n\t\t\tthis.timer.startTime = null;\r\n\t\t\tthis.resetStep();\r\n\t\t}\r\n\r\n\t\t// if we step forward after time interval, then set the timer func here\r\n\t\tif (this.state.playMode === playModes.BY_TIME) {\r\n\t\t\t// we're in playMode === BY_TIME mode\r\n\t\t\t// calc segment length between steps and set timer for such\r\n\t\t\tconst time =\r\n\t\t\t\t1000 *\r\n\t\t\t\t(this.state.bars[this.state.currentStep].timeEnd -\r\n\t\t\t\t\tthis.state.bars[this.state.currentStep].time);\r\n\t\t\tvar onInterval = this.onInterval.bind(this);\r\n\t\t\t// console.log(\"setting interval\", time);\r\n\r\n\t\t\tthis.timer = {\r\n\t\t\t\tref: setInterval(onInterval, time),\r\n\t\t\t\tstartTime: new Date(),\r\n\t\t\t\tinterval: time\r\n\t\t\t};\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"timer defined, startTime\",\r\n\t\t\t\tthis.timer.startTime,\r\n\t\t\t\tthis.timer.interval\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (this.state.playMode !== playModes.STABLE) {\r\n\t\t\tif (!this.stepProgressUpdateTimer) {\r\n\t\t\t\tthis.stepProgressUpdateTimer = setInterval(\r\n\t\t\t\t\t() => this.updateStepProgress(),\r\n\t\t\t\t\tthis.stepProgressUpdateInterval\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log(\"clear stepProgressUpdateTimer\");\r\n\t\t\tclearInterval(this.stepProgressUpdateTimer);\r\n\t\t}\r\n\r\n\t\tif (this.state.playMode === playModes.BY_BAR) {\r\n\t\t\t// restart event\r\n\t\t\tthis.event.initialized = false;\r\n\t\t\tthis.event.start();\r\n\t\t}\r\n\t}\r\n\r\n\tsetProgressEvent(event) {\r\n\t\t// console.log(\"<Planner>setProgressEvent\", event)\r\n\t\tthis.event = event;\r\n\t}\r\n\r\n\tupdateStepProgress() {\r\n\t\t// console.log('<Planner>updateStepProgress')\r\n\t\t// console.log(\"this.state.playMode \", this.state.playMode);\r\n\t\tif (this.props.lockBpm || this.state.playMode === playModes.STABLE) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// console.log('updateStepProgress()', this.event.progress)\r\n\t\tconst bar = this.getCurrentBar();\r\n\t\tlet progress = 0;\r\n\r\n\t\tif (this.state.playMode === playModes.BY_BAR) {\r\n\t\t\tprogress = this.event.progress;\r\n\t\t\t// console.log('progress state', \tthis.event.state)\r\n\t\t} else if (this.state.playMode === playModes.BY_TIME) {\r\n\t\t\tif (!this.timer) {\r\n\t\t\t\tthrow new Error(\"Timer doesn't exists\")\r\n\t\t\t}\r\n\t\t\tlet elapsedTime = Date.now() - this.timer.startTime.getTime();\r\n\t\t\t// console.log('lockstart',this.timer.lockStart);\r\n\t\t\t// console.log(' this.timer.startTime.getTime()', this.timer.startTime.getTime())\r\n\t\t\t// const elapsedTime = now - ( bar.segmentDuration ) * 1000;\r\n\r\n\t\t\tprogress = elapsedTime / bar.segmentDuration / 1000;\r\n\t\t\t// console.log('progress %f, elapsed %d', progress,elapsedTime)\r\n\t\t\t// console.log('BY_TIME')\r\n\t\t} else {\r\n\t\t\t// STABLE - > no progress\r\n\t\t\tprogress = 0;\r\n\t\t}\r\n\t\t// cheat\r\n\t\tif (progress > 1) {\r\n\t\t\tprogress = 1;\r\n\t\t}\r\n\r\n\t\tthis.setState({ stepProgress: progress });\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.stepsCounter = 0;\r\n\t\tthis.setState({ bars: [], currentStep: 0 });\r\n\t\tthis.planChanged();\r\n\t}\r\n\r\n\tplanChanged = () => {\r\n\t\t// console.log(\"<Planner>planChanged\");\r\n\t\tif (this.props.onChange) {\r\n\t\t\t// console.log(\"<Planner>fire onChange\");\r\n\r\n\t\t\tthis.props.onChange();\r\n\t\t}\r\n\t};\r\n\r\n\tresetStep() {\r\n\t\tthis.setState({ currentStep: 0 });\r\n\t\tthis.props.onAdvance(this.state.bars[0]);\r\n\t}\r\n\r\n\tgetCurrentBar() {\r\n\t\tif (this.state.currentStep >= this.state.bars.length) {\r\n\t\t\tthrow new Error(\"Trying to get step that doesn't exists\");\r\n\t\t}\r\n\t\treturn this.state.bars[this.state.currentStep];\r\n\t}\r\n\r\n\tonStepClick(idx) {\r\n\t\tthis.setState({ currentStep: idx }, () =>\r\n\t\t\tthis.props.onAdvance(this.state.bars[this.state.currentStep])\r\n\t\t);\r\n\t}\r\n\r\n\tbarRender = b => {\r\n\t\tconst cls = this.state.currentStep === b.step ? \"current-step\" : \"\";\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => this.onStepClick(b.step)}\r\n\t\t\t\tclassName={\"step \" + cls}\r\n\t\t\t\tkey={\"key_\" + b.bpm}\r\n\t\t\t>\r\n\t\t\t\t{b.segmentDuration !== undefined\r\n\t\t\t\t\t? Utils.formatTime(b.segmentDuration.toFixed(0)) + \" \"\r\n\t\t\t\t\t: b.end + \" bars \"}\r\n\t\t\t\tat {b.bpm.toFixed(0)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tformatTime(date) {\r\n\t\treturn date.getMinutes() + \":\" + date.getSeconds();\r\n\t}\r\n\r\n\tpause() {\r\n\t\tif (this.state.isPaused) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// if (this.timer && this.timer.startTime) {\r\n\t\t// \t\t// calc remaining time and stick to timer\r\n\r\n\t\t// \t\tconst timePassed = new Date() - this.timer.startTime;\r\n\t\t// \t\tconst remainingTime = this.timer.interval - timePassed;\r\n\t\t// \t\t// console.log('remainingTime',remainingTime)\r\n\t\t// \t\tthis.timer.remainingTime = remainingTime\r\n\t\t// \t}\r\n\t\t// \tthis.start()\r\n\t\t// }\r\n\t\t// else {\r\n\r\n\t\tif (this.timer) {\r\n\t\t\t// clear timer\r\n\t\t\tconsole.log(\"stop() timer clear\");\r\n\t\t\tclearInterval(this.timer.ref);\r\n\t\t\tthis.timer = undefined;\r\n\t\t}\r\n\r\n\t\tif (this.stepProgressUpdateTimer) {\r\n\t\t\t// console.log('clearing stepProgressUpdateTimer')\r\n\t\t\tclearInterval(this.stepProgressUpdateTimer);\r\n\t\t\tthis.stepProgressUpdateTimer = undefined;\r\n\t\t}\r\n\r\n\t\t// if (this.event) {\r\n\t\t// console.log('disposing this.event')\r\n\t\t// this.event = undefined\r\n\t\t// }\r\n\r\n\t\tthis.setState({ isPaused: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\t// console.log(\"<Planner> render\");\r\n\t\t// don't doo much if no plan yet\r\n\r\n\t\tif (this.state.bars.length === 0) {\r\n\t\t\treturn <div>No plan</div>;\r\n\t\t} \r\n\t\telse if (this.state.bars[0].time === Infinity) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{/* Playing at constant speed {this.state.bars[0].bpm} bpm */}\r\n\t\t\t\t\t<h2><Badge color=\"dark\">BPM: {this.props.currentBpm}</Badge></h2>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Planner\">\r\n\t\t\t\t<h2><Badge color=\"dark\">BPM: {this.props.currentBpm}</Badge></h2>\r\n\t\t\t\t{/* <div>Next step in {this.state.stepProgress.toFixed(1)} seconds</div> */}\r\n\t\t\t\t<SimpleProgress value={this.state.stepProgress * 100} />\r\n\r\n\t\t\t\t{/* <Button onClick={() => this.togglePause()}>\r\n\t\t\t\t\tisPaused:\r\n\t\t\t\t\t{this.state.isPaused === true ? \"paused\" : \"normal\"}\r\n\t\t\t\t</Button> */}\r\n\t\t\t\t\r\n\t\t\t\t<div style={this.props.lockBpm ? { opacity: 0.5 } : {}}>\r\n\t\t\t\t\t{this.state.bars.map(bar => this.barRender(bar))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tTotal time: {Utils.formatTime(this.state.totalPlanTime)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Planner;\r\n\r\nPlanner.defaultProps = {\r\n\tplayMode: playModes.BY_BAR,\r\n\tcurrentStep: 0\r\n};\r\n","import React from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { Badge  } from \"reactstrap\";\r\n// import {Container, Row, Col} from 'reactstrap'\r\n\r\nclass AdvancedSlider extends Slider {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t// onClick={this.onBadgeClick}\r\n\t\t\t\t\t\tclassName=\"d-i\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.value}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ height: \"30px\" }}>\r\n\t\t\t\t\t<div>{super.render()}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonBadgeClick() {\r\n\t\t// TODO attach editorInPlace\r\n\t}\r\n}\r\n\r\nexport default AdvancedSlider;\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nclass Accent extends Component {\r\n\tstate = {\r\n\t\tisCurrent: false\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={\"Accent \" + (this.state.isCurrent === true ? \"active\" : \"\")}  onClick={this.props.onClick}>\r\n\t\t\t\t<div className={\"type\" + this.props.type}></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\ttoggleCurrent() {\r\n\t\tthis.setState({isCurrent: !this.state.isCurrent})\r\n\t}\r\n}\r\n\r\nexport default Accent;\r\n","import React, { Component } from \"react\";\r\nimport { accentTypesArr } from \"./AccentTypes\";\r\nimport Accent from \"./Accent\";\r\n\r\nclass BarManager extends Component {\r\n\tstate = {\r\n\t\tbars: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state.bars = props.defaultValue;\r\n\t}\r\n\r\n\tsetAccents(accents, beatsPerStep) {\r\n\t\tthis.setState({ bars: accents }, this.props.onAfterChange);\r\n\t}\r\n\r\n\thandleCellClick(selected) {\r\n\t\tlet newBars = [...this.state.bars];\r\n\t\t\r\n\t\tconst type = newBars[selected];\r\n\t\t// set new type\r\n\t\tnewBars[selected] = accentTypesArr[(type + 1) % 3];;\r\n\t\t\r\n\t\tthis.setState({bars: newBars}, this.props.onAfterChange)\r\n\t}\r\n\r\n\tgetAccents() {\r\n\t\treturn this.state.bars;\r\n\t}\r\n\r\n\tsetActive(idx) {\r\n\t\t// unselect previous element\r\n\t\tif (this.lastActiveAccent) {\r\n\t\t\tthis.lastActiveAccent.toggleCurrent();\r\n\t\t\tthis.lastActiveAccent = undefined\r\n\t\t}\r\n\t\t// select new \r\n\t\tconst el = this.refs[\"accent\" + idx];\r\n\r\n\t\t// make sure it exits though\r\n\t\tif (el) {\r\n\t\t\tel.toggleCurrent();\r\n\t\t\tthis.lastActiveAccent = el;\r\n\t\t}\r\n\t}\r\n \r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{this.state.bars.map((bar, idx) => (\r\n\t\t\t\t\t<Accent ref={\"accent\" + idx}\r\n\t\t\t\t\t\ttype={bar}\r\n\t\t\t\t\t\tonClick={() => this.handleCellClick(idx)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BarManager;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n\tInput,\r\n\tButton,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tModalFooter\r\n} from \"reactstrap\";\r\n\r\nclass EditPresetModal extends Component {\r\n\tstate = {\r\n\t\tmodal: false,\r\n\t\tpreset: null,\r\n\t\tshowDelete: false\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmodal: false\r\n\t\t};\r\n\t\tthis.toggle = this.toggle.bind(this);\r\n\t}\r\n\r\n\ttoggle() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tmodal: !prevState.modal\r\n\t\t}));\r\n\t}\r\n\r\n\thandleSave() {\r\n\t\tconst preset = this.state.preset;\r\n\t\tconst title = this.state.preset.title;\r\n\t\tif (title && title.length > 0) {\r\n\t\t\tthis.props.onSave(title, preset);\r\n\t\t\tthis.toggle();\r\n\t\t}\r\n\t}\r\n\r\n\tedit(preset, showDelete) {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tpreset: preset,\r\n\t\t\t\tshowDelete: showDelete\r\n\t\t\t},\r\n\t\t\tthis.toggle\r\n\t\t);\r\n\t}\r\n\r\n\ttitleChanged(e) {\r\n\t\tconst newTitle = e.target.value;\r\n\t\tlet preset = { ...this.state.preset };\r\n\t\tpreset.title = newTitle;\r\n\t\tthis.setState({ preset });\r\n\t\t// this.setState()\r\n\t\t// this.setState({title: e.target.value}\r\n\t}\r\n\r\n\tonDeleteBtn() {\r\n\t\tthis.props.onDeleteBtn(this.state.preset);\r\n\t\tthis.toggle();\r\n\t}\r\n\r\n\trenderDelete() {\r\n\t\t \r\n\t\tif (this.state.showDelete === true) {\r\n\t\t\treturn(<Button color=\"warning\" onClick={() => this.onDeleteBtn()}>\r\n\t\t\t\tDelete\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button\r\n\t\t\t\t\toutline\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\tonClick={this.props.onSaveBtn}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave Preset\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tisOpen={this.state.modal}\r\n\t\t\t\t\ttoggle={this.toggle}\r\n\t\t\t\t\tclassName={this.props.className}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggle}>Save Preset</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tonChange={e => this.titleChanged(e)}\r\n\t\t\t\t\t\t\tdefaultValue={\r\n\t\t\t\t\t\t\t\t(this.state.preset &&\r\n\t\t\t\t\t\t\t\t\tthis.state.preset.title) ||\r\n\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"code\">\r\n\t\t\t\t\t\t\t{JSON.stringify(this.state.preset)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => this.handleSave()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggle}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{this.renderDelete()}\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditPresetModal;\r\n\r\n\r\nEditPresetModal.defaultProps = {\r\n\tonDeleteBtn: function(preset) {},\r\n\tonSave: function(title, preset) {},\r\n\tonSaveBtn: function(e, idx) {}\r\n };\r\n","import React, { Component } from \"react\";\r\nimport {Container, Row, Col } from \"reactstrap\";\r\nimport EditPresetModal from \"./EditPresetModal\"\r\n\r\nclass PresetsManager extends Component {\r\n\tstate = {\r\n\t\tshowDelete: [],\r\n\t\tshowEdit: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.userPresets = this.props.cookies.get('userPresets');\r\n\t\t\r\n\t\tthis.state.showDelete = this.userPresets ? Array(this.userPresets.length).fill(false) : []\r\n\t\tthis.state.showEdit = this.userPresets ? Array(this.userPresets.length).fill(false) : []\r\n\t}\r\n\t\r\n\tonPresetClick(preset) {\r\n\t\tthis.props.onSelect(preset);\r\n\t}\r\n\r\n\tonSavePreset(title, o) {\r\n\t\tconst preset = {title: title, ...o}\r\n\t\t\r\n\t\tlet userPresets = this.props.cookies.get('userPresets');\r\n\r\n\t\tif (!userPresets) {\r\n\t\t\tuserPresets = [];\r\n\t\t}\r\n\t\t\r\n\t\t// overwrite by title \r\n\t\tlet idx = -1;\r\n\r\n\t\tfor (let i = 0 ; i < userPresets.length; i++) {\r\n\t\t\tif (userPresets[i].title.toLowerCase() === title.toLowerCase()) {\r\n\t\t\t\tidx = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (idx < 0) {\r\n\t\t\tuserPresets.push(preset)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tuserPresets[idx] = preset;\r\n\t\t}\r\n\r\n\t\tthis.saveInCookie(userPresets);\r\n\t}\r\n\r\n\tsaveInCookie(presets) {\r\n\t\tthis.props.cookies.set('userPresets', JSON.stringify(presets),{ path: '/' });\r\n\t\tthis.userPresets = presets;\r\n\t}\r\n\r\n\tshowDeleteBtn(e, idx) {\r\n\t\tlet showDelete = {...this.state};\r\n\t\tshowDelete[idx] = true;\r\n\t\tthis.setState({showDelete});\r\n\t}\r\n\r\n\tshowEditBtn(e, idx) {\r\n\t\tlet showEdit = {...this.state};\r\n\t\tshowEdit[idx] = true;\r\n\t\tthis.setState({showEdit});\r\n\t}\r\n\thideEditBtn(e) {\r\n\t\tthis.setState({showEdit: false})\r\n\t}\r\n\r\n\tonPresetDelete(preset) {\r\n\t\tlet idx = this.userPresets.indexOf(preset) \r\n\t\tif (idx < 0) {\r\n\t\t\tthrow new Error(\"Selected preset \" +  preset.title + \" has not been found in the store\" )\r\n\t\t}\r\n\t\tthis.userPresets.splice(idx,1);\r\n\t\tthis.saveInCookie(this.userPresets);\r\n\t}\r\n\r\n\tonPresetEdit(e, idx) {\r\n\t\tconsole.log('preset EDIT',e,idx);\r\n\t\t/// prevent from triggerring onClick \r\n\t\te.stopPropagation()\r\n\t\tif (idx !== undefined) {\r\n\t\t\tthis.refs.presetEditor.edit(this.userPresets[idx], true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// new preset\r\n\t\t\tthis.refs.presetEditor.edit(this.props.preset)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst userPresets = this.props.cookies.cookies.userPresets ?  JSON.parse(  this.props.cookies.cookies.userPresets ) : [];\r\n\t\t// console.log('<PresetsManager>userPresets', userPresets)\r\n\t\treturn (\r\n\t\t\t<Container className=\"PresetsManager\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{this.props.presets.map((item, idx) => (\r\n\t\t\t\t\t\t<Col className=\"preset\"\r\n\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\tmy presets:\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{userPresets.map((item, idx) => (\r\n\t\t\t\t\t\t<Col className=\"preset\"\r\n\t\t\t\t\t\t\tonMouseEnter={(e) => this.showEditBtn(e, idx)}\r\n\t\t\t\t\t\t\tonMouseLeave={(e) => this.hideEditBtn(e, idx)}\r\n\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t\t<div class='x' style={{visibility: this.state.showEdit[idx] ? '' : 'hidden'}} onClick={(e) => this.onPresetEdit(e,idx)}>Edit</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<EditPresetModal ref='presetEditor' onDeleteBtn={(preset) => this.onPresetDelete(preset)} onSaveBtn={(e,idx) => this.onPresetEdit(e,idx)} onSave={(title, preset) => this.onSavePreset(title, preset)}/>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PresetsManager;\r\n\r\nPresetsManager.defaultProps = {\r\n\tonSelect: function(preset) {}\r\n };","import React, { Component } from 'react';\r\nimport {Container, Row} from 'reactstrap'\r\n\r\nclass SimplePanel extends Component {\r\n    render() { \r\n        return (\r\n            <Container className={\"pane \" + this.props.className}>\r\n\t\t\t\t<Row className=\"pane-title\">{this.props.title}</Row>\r\n\t\t\t\t<Row className=\"pane-body\">{this.props.children}</Row>\r\n            </Container>\r\n            );\r\n    }\r\n}\r\n \r\nexport default SimplePanel;\r\n\r\n\r\nSimplePanel.defaultProps = {\r\n    title: 'title',\r\n    children: [],\r\n    className: ''\r\n };","import React, { Component } from 'react';\r\nimport Slider from 'rc-slider'\r\nimport regression from 'regression';\r\nimport {Badge} from 'reactstrap'\r\n\r\n\r\nclass GeometricSlider extends Component {\r\n\tstate = {\r\n        value: undefined,\r\n        regression: undefined\r\n\t};\r\n\r\n    constructor(props) {\r\n        // TOneverDo \r\n        // currently it works only for min=1 only\r\n        super(props);\r\n        \r\n        const d = [[0,this.props.min],  [100, this.props.max]];\r\n        \r\n        this.state.regression = regression.exponential(d, {precision : 10 })\r\n        console.log('slider func', this.state.regression.string)\r\n\r\n        this.prepareMarks();\r\n\r\n        this.state.value = this.props.defaultValue;\r\n        \r\n    }\r\n\r\n    prepareMarks() {\r\n        this.marks = {};\r\n        \r\n        for (let i = 0; i < this.props.marksAt.length; i++) {\r\n            this.marks[  this.findX(this.props.marksAt[i]) ]  = this.props.marksAt[i];\r\n        }\r\n    }\r\n\r\n    makeMark(value) {\r\n        return {\r\n            label: this.props.markFormatter(\r\n                Math.floor(value)\r\n            ),\r\n            style: this.props.marksStyle\r\n        };\r\n    }\r\n\r\n    onChange(v) {\r\n        console.log('onChange', v)\r\n        const value =  Math.floor(this.state.regression.predict(v)[1]);\r\n        this.setState({value: value})\r\n        this.props.onChange(value)\r\n    }\r\n \r\n    findX(y) {\r\n        // y = e^bx ==> x = ln(y) / b\r\n        return Math.log(y)/this.state.regression.equation[1];\r\n    }\r\n    \r\n    setValue(v) {\r\n        this.setState({value: v})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            \t<div>\r\n\t\t\t\t\t<Badge  color=\"light\" onClick={this.onBadgeClick} className=\"d-i\">\r\n                        {this.props.badgeFormatter(this.state.value)}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n                <Slider ref=\"slider\" included={false} value={this.findX(this.state.value)} style={{height: '45px'}} onChange={(v) => this.onChange(v)} min={0} max={100} step={0.5} marks={this.marks}/>\r\n            </>\r\n        )\r\n\r\n    }\r\n    \r\n}\r\n \r\nexport default GeometricSlider;\r\n\r\nGeometricSlider.defaultProps = {\r\n    marksNum: 6,\r\n    marksStyle: {\r\n        color: '#ccc'\r\n    },\r\n    desc: '',\r\n    badgeFormatter: function(v) {return v;},\r\n    markFormatter: function(v) {return v;},\r\n    defaultValue: 50,\r\n    marksAt: []\r\n}","import React from \"react\";\r\nimport { Range } from \"rc-slider\";\r\nimport { Badge } from \"reactstrap\";\r\n\r\nclass AdvancedRange extends Range {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t// onClick={this.onBadgeClick}\r\n\t\t\t\t\t\tclassName=\"d-i\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.bounds[0]} - {this.state.bounds[1]}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n                <div style={{ height: \"30px\" }}>\r\n                {super.render()}\r\n                </div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AdvancedRange;\r\n","import React, { Component } from \"react\";\r\nimport SimplePanel from \"./SimplePanel\";\r\nimport {\r\n\tButtonGroup,\r\n\tButton,\r\n\tCollapse,\r\n\tButtonDropdown,\r\n\tDropdownToggle,\r\n\tDropdownItem,\r\n\tDropdownMenu\r\n} from \"reactstrap\";\r\nimport { playModes } from \"./PlayModes\";\r\nimport GeometricSlider from \"./GeometricSlider\";\r\nimport AdvancedRange from \"./AdvancedRange\"\r\nimport AdvancedSlider from \"./AdvancedSlider\"\r\nimport Utils from \"./Utils\";\r\n\r\nclass ModePanel extends Component {\r\n\tstate = {\r\n\t\tplayMode: playModes.BY_TIME,\r\n\t\tbpmStep: 10,\r\n\t\tbpmStepDropdownOpen: false,\r\n\t\tbyTimeInterval: 5,\r\n\t\tbyBarInterval: 2,\r\n\t\tstableBpmSlider: 300,\r\n\t\tbpmRange: [100,250]\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state.playMode = props.playMode;\r\n\t\tif (props.playMode === playModes.BY_BAR) {\r\n\t\t\tthis.state.byBarInterval = props.interval;\r\n\t\t} else {\r\n\t\t\tthis.state.byTimeInterval = props.interval;\r\n\t\t}\r\n\t\tthis.state.bpmStep = props.bpmStep;\r\n\t\tthis.state.bpmRange= props.bpmRange;\r\n\t\tconsole.log('<ModePanel> constructor')\r\n\t}\r\n\r\n\tonModeChange(newMode) {\r\n\t\tthis.setState({ playMode: newMode }, this.props.onAfterChange);\t\t\r\n\t}\r\n\r\n\tonBpmRangeChange(bpmRange) {\r\n\t\tconsole.log('<ModePanel>onBpmRangeChange('+bpmRange[0]+')')\r\n\t\tthis.setState({ bpmRange: bpmRange }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBpmSliderChange = (value) => {\r\n\t\tconsole.log('onBpmSliderChange',value)\r\n\t\tthis.setState({ stableBpmSlider: value }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBpmStepChange() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tbpmStepDropdownOpen: !prevState.bpmStepDropdownOpen\r\n\t\t}));\r\n\t}\r\n\r\n\tonBpmStepSelect(value) {\r\n\t\tthis.setState({ bpmStep: value }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tgetValue() {\r\n\t\tconst o = {\r\n\t\t\tplayMode: this.state.playMode,\r\n\t\t\tinterval:\r\n\t\t\t\tthis.state.playMode === playModes.BY_BAR\r\n\t\t\t\t\t? this.state.byBarInterval\r\n\t\t\t\t\t: this.state.byTimeInterval,\r\n\t\t\tbpmStep: this.state.bpmStep,\r\n\t\t\tbpmRange: this.state.playMode !== playModes.STABLE ? this.state.bpmRange : this.props.bpmRange,//this.refs.bpmRange.getValue() : null,\r\n\t\t\tstableBpmSlider: this.state.stableBpmSlider\r\n\t\t};\r\n\t\t// debugger\r\n\t\treturn o;\r\n\t}\r\n\r\n\tsetValue(o) {\r\n\t\tconsole.log(\"<ModePanel>setValue\", o)\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tplayMode: o.playMode,\r\n\t\t\t\tbpmStep: o.bpmStep,\r\n\t\t\t\tbyBarInterval:\r\n\t\t\t\t\to.playMode === playModes.BY_BAR\r\n\t\t\t\t\t\t? o.interval\r\n\t\t\t\t\t\t: this.state.byBarInterval,\r\n\t\t\t\tbyTimeInterval:\r\n\t\t\t\t\to.playMode === playModes.BY_TIME\r\n\t\t\t\t\t\t? o.interval\r\n\t\t\t\t\t\t: this.state.byTimeInterval,\r\n\t\t\t\tbpmRange: o.bpmRange,\r\n\t\t\t\tstableBpmSlider: o.stableBpmSlider || this.state.stableBpmSlider\r\n\t\t\t},\r\n\t\t\tthis.props.onAfterChange\r\n\t\t);\r\n\r\n\t\tconst slider =\r\n\t\t\to.playMode === playModes.BY_BAR\r\n\t\t\t\t? this.refs.byBarSlider\r\n\t\t\t\t: this.refs.byTimeSlider;\r\n\t\tslider.setValue(o.interval);\r\n\t\t\r\n\t\tthis.refs.bpmRange.setState({bounds: o.bpmRange})\r\n\t}\r\n\r\n\tonTimeIntervalChange(v) {\r\n\t\tthis.setState({ byTimeInterval: v }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBarIntervalChange(v) {\r\n\t\tthis.setState({ byBarInterval: v }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tbyBarFormatter(barsNum) {\r\n\t\tlet s = barsNum + \" \";\r\n\t\tif (barsNum === 1) {\r\n\t\t\ts += \"bar\";\r\n\t\t} else {\r\n\t\t\ts += \"bars\";\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\r\n\tbyTimeFormatter(time) {\r\n\t\tlet s = Utils.formatTime(time) + \" \";\r\n\r\n\t\tif (time === 1) {\r\n\t\t\ts += \"second\";\r\n\t\t} else if (time < 60) {\r\n\t\t\ts += \"seconds\";\r\n\t\t} else if (time < 120) {\r\n\t\t\ts += \"minute\";\r\n\t\t} else {\r\n\t\t\ts += \"minutes\";\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\r\n\trenderIncreaseBpmDropdown() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\tincrease speed by\r\n\t\t\t\t<ButtonDropdown\r\n\t\t\t\t\tstyle={{ margin: \"0px 5px\" }}\r\n\t\t\t\t\tisOpen={this.state.bpmStepDropdownOpen}\r\n\t\t\t\t\ttoggle={() => this.onBpmStepChange()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DropdownToggle caret size=\"sm\" outline color=\"light\">\r\n\t\t\t\t\t\t{this.state.bpmStep}\r\n\t\t\t\t\t</DropdownToggle>\r\n\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(5);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t5\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(10);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t10\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(20);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t20\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(30);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t30\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(50);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t50\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t</ButtonDropdown>\r\n\t\t\t\tbpm\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\trenderSpeedRange() {\r\n\t\t\r\n\t\tconsole.log('renderSpeedRange', this.state.bpmRange[0])\r\n\t\treturn (<div>\r\n\t\t\tSpeed range\r\n\t\t\t<AdvancedRange\r\n\t\t\t\tref=\"bpmRange\"\r\n\t\t\t\tmin={30}\r\n\t\t\t\tmax={600}\r\n\t\t\t\tdefaultValue={[\r\n\t\t\t\t\tthis.state.bpmRange[0],\r\n\t\t\t\t\tthis.state.bpmRange[1]\r\n\t\t\t\t]}\r\n\t\t\t\tpushable={true}\r\n\t\t\t\tonAfterChange={(value) => this.onBpmRangeChange(value)}\r\n\t\t\t/>\r\n\t\t</div>);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SimplePanel className=\"ModePanel\" title=\"Mode\">\r\n\t\t\t\t<ButtonGroup size=\"sm\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.BY_BAR)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.BY_BAR}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBy bar\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.BY_TIME)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.BY_TIME}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBy time\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.STABLE)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.STABLE}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStable\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== playModes.STABLE}>\r\n\t\t\t\t{/* {this.state.playMode !== playModes.STABLE ? this.renderSpeedRange() : ''} */}\r\n\t\t\t\t\t{this.renderSpeedRange()}\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.BY_BAR}>\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tIncrease speed every\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byBarSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byBarInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={this.byBarFormatter}\r\n\t\t\t\t\t\t\tonChange={v => this.onBarIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={301}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 5, 10, 20, 50, 100, 300]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.BY_TIME}>\r\n\t\t\t\t \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tIncrease speed every\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byTimeSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byTimeInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={this.byTimeFormatter}\r\n\t\t\t\t\t\t\tmarkFormatter={Utils.formatTime}\r\n\t\t\t\t\t\t\tonChange={v => this.onTimeIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={600}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 10, 30, 60, 120, 240, 600]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t{this.state.playMode !== playModes.STABLE ? this.renderIncreaseBpmDropdown() : ''}\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.STABLE}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tChoose bpm\r\n\r\n\t\t\t\t\t\t<AdvancedSlider \r\n\t\t\t\t\t\t\t ref=\"stableBpmSlider\"\r\n\t\t\t\t\t\t\t included={false}\r\n\t\t\t\t\t\t\t min={10}\r\n\t\t\t\t\t\t\t max={600}\r\n\t\t\t\t\t\t\t marks={{30: '30', 100:'100', 200: '200', 300: '300', 400: '400',  500: '500', 600: '600'}}\r\n\t\t\t\t\t\t\t value={this.state.stableBpmSlider}\r\n\t\t\t\t\t\t\t onChange={this.onBpmSliderChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</SimplePanel>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModePanel;\r\n\r\nModePanel.defaultProps = {\r\n\tonAfterChange: null\r\n};\r\n","import {playModes} from \"./PlayModes\"\r\nimport { instruments } from \"./InstrumentLib\";\r\n\r\n\r\nexport const PresetsLib = [\r\n    {\r\n        title: \"4 beats every 4 bars\",\r\n        beatsPerStep: 4,\r\n        playMode: playModes.BY_BAR,\r\n        interval: 4,\r\n        bpmStep: 20,\r\n        bpmRange: [100, 400],\r\n        accents: [0, 1, 2, 1]\r\n    },\r\n    {\r\n        title: \"Jhaptal tabla\",\r\n        instrument: instruments.TABLA,\r\n\t\tbeatsPerStep: 10,\r\n\t\tbpmRange: [200, 400],\r\n        accents: [0, 1, 0, 0, 1, 2, 1, 0, 0, 1 ],\r\n        playMode: playModes.BY_TIME,\r\n        interval: 5*60,\r\n        bpmStep: 10\r\n    },\r\n    {title: \"Balkan 1\", \"bpmRange\":[241,400],\"beatsPerStep\":7,\"accents\":[0,1,2,0,1,2,1],\"instrument\":\"electrokit\",\"playMode\":\"by_bar\",\"interval\":20,\"bpmStep\":30},\r\n    {title: \"Balkan 2\", \"bpmRange\":[293,400],\"beatsPerStep\":7,\"accents\":[0,1,2,0,1,2,1],\"instrument\":\"tabla\",\"playMode\":\"by_bar\",\"interval\":300,\"bpmStep\":50},\r\n    {title: \"Groove 1\", \"bpmRange\":[222,262],\"beatsPerStep\":8,\"accents\":[0,2,1,2,1,0,1,1],\"instrument\":\"electrokit\",\"playMode\":\"by_time\",\"interval\":600,\"bpmStep\":50},\r\n    {title: \"Groove 2\", \"bpmRange\":[222,400],\"beatsPerStep\":8,\"accents\":[0,2,0,2,2,2,0,1],\"instrument\":\"electrokit\",\"playMode\":\"by_bar\",\"interval\":20,\"bpmStep\":50}\r\n];","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./components/SoundMachine\";\nimport SoundMachine from \"./components/SoundMachine\";\nimport Planner from \"./components/Planner\";\nimport \"rc-slider/assets/index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport {\n\tButtonDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem\n} from \"reactstrap\";\nimport AdvancedSlider from \"./components/AdvancedSlider\";\nimport BarManager from \"./components/BarManager\";\nimport { instruments } from \"./components/InstrumentLib\";\nimport PresetsManager from \"./components/PresetsManager\";\nimport ModePanel from \"./components/ModePanel\";\nimport { playModes } from \"./components/PlayModes\";\nimport { withCookies } from \"react-cookie\";\nimport { PresetsLib } from \"./components/PresetsLib\";\nimport { accentTypes } from \"./components/AccentTypes\";\nimport SimplePanel from \"./components/SimplePanel\";\nimport Tone from \"tone\";\n\nclass App extends Component {\n\ttimer = {\n\t\ttimerRef: null,\n\t\tstartTime: null\n\t};\n\t\n\n\tstate = {\n\t\tcurrentBpm: 60,\n\t\tinstrument: instruments.ELECTRO_KIT,\n\t\tinstrumentDropdownOpen: false,\n\t\tinstrumentDropdownLabel: \"Electro kit\", // bit messy, why would we hardcode this here, it ought to be taken from instrumentLib\n\t\tcycleDropdownOpen: false\n\t};\n\n\tcomponentDidMount() {\n\t\t// pass the event so we know how to display progress when in BY_BAR mode\n\t\tthis.refs.planner.setProgressEvent(this.refs.sm.loopEndEvent);\n\n\t\t// initialize accents\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getAccents());\n\t\t\n\t\t// keyboard listeners\n\t\tdocument.addEventListener(\"keydown\", e => this.handleKeyDown(e));\n\n\t\t// initialize with UI settings\n\t\tthis.refs.planner.setPlan(this.getUiState());\n\t\tthis.initialized = true;\n\t}\n\n\thandleKeyDown(e) {\n\t\tconsole.log(\"key\", e);\n\t\tswitch (e.keyCode) {\n\t\t\tcase 32: // space\n\t\t\t\t// e.preventDefault();\n\t\t\t\tthis.refs.sm.handleStartStop();\n\t\t\t\tbreak;\n\t\t\tcase 38: // Arrow up\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.state.currentBpm < 600) {\n\t\t\t\t\tthis.setBpm(this.state.currentBpm + 10);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 40: // arrow down\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.state.currentBpm > 10) {\n\t\t\t\t\tthis.setBpm(this.state.currentBpm - 10);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 37: // Arrow left\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.refs.planner.stepBackward();\n\t\t\t\tbreak;\n\t\t\tcase 39: // Arrow right\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.refs.planner.stepForward();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tonInstrumentSelect(newInstrument) {\n\t\tthis.refs.sm.setInstrument(newInstrument);\n\t\tconst label = this.refs.sm.getCurrentInstrumentLabel();\n\t\tconsole.log(\"setting new instrument. state.instrument\", newInstrument);\n\t\tthis.setState({\n\t\t\tinstrument: newInstrument,\n\t\t\tinstrumentDropdownLabel: label\n\t\t});\n\t}\n\n\trenderPlaybackPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">PLAYBACK</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"3\">Instrument</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\tisOpen={this.state.instrumentDropdownOpen}\n\t\t\t\t\t\t\ttoggle={() => this.onInstrumentChange()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DropdownToggle\n\t\t\t\t\t\t\t\tcaret\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\tcolor=\"light\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.instrumentDropdownLabel}\n\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tinstruments.TABLA\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tTabla\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tinstruments.ELECTRO_KIT\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tElectro Kit\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Beats per step</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"beatsPerStep\"\n\t\t\t\t\t\t\tmin={2}\n\t\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\t\tdefaultValue={this.props.beatsPerStep}\n\t\t\t\t\t\t\tonAfterChange={() => this.onBeatsPerStepChange()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Accents</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<BarManager\n\t\t\t\t\t\t\tonAfterChange={() => this.onAccentsChange()}\n\t\t\t\t\t\t\tref=\"barManager\"\n\t\t\t\t\t\t\tdefaultValue={this.props.accents}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col xs=\"3\">Playback</Col>\n\t\t\t\t\t<Col>One Time/LoopBack/Repeat</Col>\n\t\t\t\t</Row> */}\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonModePanelChanged() {\n\t\tconsole.log(\"<App>onModePanelChanged\")\n\t\tconst state = this.getUiState();\n\t\t\n\t\t// make sure we know when to trigger bar end\n\t\tif (state.playMode === playModes.BY_BAR) {\n\t\t\tthis.refs.sm.setLoopEnd(state.bars);\t\n\t\t}\n\t\t// create new plan\n\t\tthis.refs.planner.setPlan(state);\n\t}\n\n\t\n\trenderRightPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPresetsPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderLeftPane() {\n\t\tconsole.log('Tone.transzport', Tone.Transport.state )\n\t\t\n\t\t\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title=\"Control\">\n\t\t\t\t\t\t\t<SoundMachine\n\t\t\t\t\t\t\t\tref=\"sm\"\n\t\t\t\t\t\t\t\tbeatsPerStep={this.state.beatsPerStep}\n\t\t\t\t\t\t\t\tonLoopEnd={() => this.onLoopEnd()}\n\t\t\t\t\t\t\t\tonBeat={beat => this.onBeat(beat)}\n\t\t\t\t\t\t\t\tinstrument={this.state.instrument}\n\t\t\t\t\t\t\t\tonToggle={(state) => this.onSoundMachineToggle(state)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</SimplePanel>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ModePanel\n\t\t\t\t\t\t\tref=\"modePanel\"\n\t\t\t\t\t\t\tplayMode={this.props.playMode}\n\t\t\t\t\t\t\tinterval={this.props.interval}\n\t\t\t\t\t\t\tbpmStep={this.props.bpmStep}\n\t\t\t\t\t\t\tbpmRange={this.props.bpmRange}\n\t\t\t\t\t\t\t//bpmStableSlider={this.props.bpmStableSlider}\n\t\t\t\t\t\t\tcurrentBpm={this.state.currentBpm}\n\t\t\t\t\t\t\t// defaultValue={{playMode: this.props.playMode, interval: this.props.interval, bpmStep: this.props.bpmStep}}\n\t\t\t\t\t\t\tonAfterChange={() => this.onModePanelChanged()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPlaybackPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col>{this.renderCyclePane()}</Col>\n\t\t\t\t</Row> */}\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderPresetsPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">Presets</Row>\n\t\t\t\t<PresetsManager\n\t\t\t\t\tref=\"presetsManager\"\n\t\t\t\t\tpreset={this.uiState}\n\t\t\t\t\tcookies={this.props.cookies}\n\t\t\t\t\tpresets={PresetsLib}\n\t\t\t\t\tonSelect={preset => this.onPresetSelect(preset)}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonPresetSelect(preset) {\n\t\tconsole.log(\"setting preset\", preset);\n\t\n\t\t\n\t\t// console.log(\"beatsPerStep\")\n\t\tthis.refs.beatsPerStep.setState({ value: preset.beatsPerStep });\n\t\tthis.refs.sm.setBeatsPerStep(preset.beatsPerStep);\n\t\t\n\t\t// console.log(\"instrument\")\n\t\tthis.onInstrumentSelect(preset.instrument || instruments.TABLA);\n\n\t\t// console.log(\"accents\")\n\t\tthis.refs.barManager.setAccents(preset.accents, preset.beatsPerStep);\n\t\t\n\t\t// console.log(\"modePanel\")\n\t\tthis.refs.modePanel.setValue(preset);\n\t\t\n\t}\n\n\trenderMidPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title={\"BPM\"}>\n\t\t\t\t\t\t\t{this.state.currentBpm.toFixed(0)}\n\t\t\t\t\t\t</SimplePanel>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> */}\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title={\"Plan\"}>\n\t\t\t\t\t\t<Planner\n\t\t\t\t\t\t\tcurrentBpm={this.state.currentBpm}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tonChange={() => this.onPlanChanged()}\n\t\t\t\t\t\t\tonAdvance={currentStep =>\n\t\t\t\t\t\t\t\tthis.onPlanAdvanced(currentStep)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tref=\"planner\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</SimplePanel>\n\t\t\t\t\t\t\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonLoopEnd() {\n\t\tconst s = this.getUiState();\n\t\tif (s.playMode === playModes.BY_BAR) {\n\t\t\tconsole.log(\"onLoopEnd fetched\");\n\t\t\tthis.refs.planner.stepForward();\n\t\t}\n\t}\n\n\tonBeat(idx) {\n\t\tthis.refs.barManager.setActive(idx);\n\t}\n\n\trender() {\n\t\t// set the title with current BPM\n\t\tdocument.title =\n\t\t\t\"BPM: \" + this.state.currentBpm.toFixed(0) + \" | SpeedTrainer\"\n\n\t\t// render everything else\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t\n\t\t\t\t<Container className=\"app-container\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* left pane with controls */}\n\t\t\t\t\t\t\t{this.renderLeftPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>{this.renderMidPane()}</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* right pane with examples and plan*/}\n\t\t\t\t\t\t\t{this.renderRightPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t\n\t// totalStepsChanged = () => {\n\t// \tconst s = this.getUiState();\n\t// \tif (s.totalSteps !== this.state.totalSteps) {\n\t// \t\tthis.refs.planner.setPlan(s);\n\t// \t}\n\t// };\n\n\tonBeatsPerStepChange = () => {\n\t\t// plan doesn't change here, just the beats per step amount\n\t\tconst newBps = this.getUiState().beatsPerStep;\n\n\t\tif (newBps !== this.refs.sm.beatsPerStep) {\n\t\t\tconst accents = this.refs.barManager.getAccents();\n\n\t\t\twhile (accents.length > newBps) {\n\t\t\t\taccents.pop();\n\t\t\t}\n\t\t\twhile (accents.length < newBps) {\n\t\t\t\taccents.push(accentTypes.ACCENT_2);\n\t\t\t}\n\n\t\t\tthis.refs.sm.setBeatsPerStep(newBps);\n\t\t\tthis.refs.barManager.setAccents(accents);\n\t\t\tthis.setState({ beatsPerStep: newBps });\n\t\t}\n\t};\n\n\t// onBpmRangeChange() {\n\t// \tconst s = this.getUiState();\n\t// \tif (\n\t// \t\ts.bpmRange[0] !== this.props.bpmRange[0] ||\n\t// \t\ts.bpmRange[1] !== this.props.bpmRange[1]\n\t// \t) {\n\t// \t\tthis.setState({ bpmRange: s.bpmRange });\n\t// \t\tthis.refs.planner.setPlan(s);\n\t// \t}\n\t// }\n\n\tonPlanAdvanced = newStep => {\n\t\tif (newStep) {\n\t\t\tconsole.log(\"<App>onPlanAdvanced() new step:\", newStep);\n\t\t\tthis.setBpm(newStep.bpm);\n\t\t} else {\n\t\t\t\n\t\t\t this.refs.planner.pause()\n\t\t\t\n\t\t\tthis.refs.sm.stop();\n\t\t}\n\t};\n\n\tsetBpm = newBpm => {\n\t\tthis.setState({ currentBpm: newBpm });\n\t\tthis.refs.sm.setBpm(newBpm);\n\t};\n\n\tonPlanChanged = () => {\n\t\tconsole.log(\"<App>onPlanChanged\");\n\n\t\t// this.refs.planner.start();\n \n\t\tlet bar = this.refs.planner.getCurrentBar();\n\n\t\tthis.refs.sm.setLoopEnd(bar.end || false);\n\n\t\t// set initial speed\n\t\tif (bar) {\n\t\t\tthis.setBpm(bar.bpm);\n\t\t}\n\n\t\tif (this.refs.sm.state.isPlaying) {\n\t\t\tthis.refs.planner.start();\n\t\t}\n\t};\n\n\tonInstrumentChange() {\n\t\tthis.setState(prevState => ({\n\t\t\tinstrumentDropdownOpen: !prevState.instrumentDropdownOpen\n\t\t}));\n\t}\n\n\tonSoundMachineToggle = (isPlaying) => {\n\t\tif (isPlaying) {\n\t\t\tthis.refs.planner.start();\n\t\t} else {\n\t\t\tthis.refs.planner.stop();\t\t\n\t\t}\n\t}\n\t// handleStartStop = () => {\n\t// \tif (this.refs.sm.state.isPlaying === true) {\n\t// \t\tthis.refs.planner.stop();\n\t// \t\tthis.refs.sm.stop();\n\t// \t\tthis.isPlaying = false;\n\t// \t} else {\t\t\t\n\t// \t\tif (this.state.playMode !== playModes.STABLE) {\n\t// \t\t\tthis.refs.planner.start();\n\t// \t\t}\t\t\t\n\t// \t\tthis.refs.sm.start();\n\t// \t\tthis.isPlaying = true;\n\t// \t}\n\t// };\n\n\tgetUiState() {\n\n\t\tconst s1 = {\n\t\t\tbeatsPerStep: this.refs.beatsPerStep.getValue(),\n\t\t\taccents: this.refs.barManager.getAccents(),\n\t\t\tinstrument: this.state.instrument\n\t\t};\n\n\t\tconst s2 = this.refs.modePanel.getValue();\n// debugger\n\t\tconst uiState = { ...s1, ...s2 };\n\t\t\n\t\t// console.log('uiState', uiState)\n\t\t// store current state in component state so we know what's going on always (do we? really?)\n\t\t// this.setState({ uiState });\n\t\t// store current state\n\t\tconsole.log(\"storing uiState\", this.uiState);\n\t\tthis.uiState = uiState;\n\t\t// HACK\n\t\tthis.uiState.instrument = this.state.instrument;\n\t\treturn uiState;\n\t}\n\n\tonAccentsChange() {\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getAccents());\n\t}\n}\n\nexport default withCookies(App);\n\n// this serves as default app settings\nApp.defaultProps = {\n\tplayMode: playModes.BY_BAR,\n\tinterval: 2,\n\tinstrument: instruments.TABLA,\n\tbpmStep: 50,\n\tbpmRange: [120, 560],\n\tbeatsPerStep: 4,\n\taccents: [0, 1, 2, 1]\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {CookiesProvider} from 'react-cookie'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(  <CookiesProvider> <App  /> </CookiesProvider> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}