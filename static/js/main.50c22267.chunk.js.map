{"version":3,"sources":["components/AccentTypes.jsx","components/SoundMachineInstrument.jsx","components/InstrumentLib.jsx","components/PlayModes.jsx","components/SoundMachine.jsx","components/SimpleProgress.jsx","components/Utils.jsx","components/Planner.jsx","components/AdvancedSlider.jsx","components/Accent.jsx","components/BarManager.jsx","components/EditPresetModal.jsx","components/PresetsManager.jsx","components/SimplePanel.jsx","components/GeometricSlider.jsx","components/AdvancedRange.jsx","components/ModePanel.jsx","components/PresetsLib.jsx","App.jsx","serviceWorker.js","index.js"],"names":["accentTypes","ACCENT_1","ACCENT_2","ACCENT_3","accentTypesArr","SoundMachineInstrument","props","_this","Object","classCallCheck","this","console","log","key","o","C3","samples","C#3","D3","possibleConstructorReturn","getPrototypeOf","call","baseUrl","label","Sampler","instruments","TABLA","ELECTRO_KIT","InstrumentLib","defaultInstrument","state","lib","currentInstrument","undefined","tabla","toMaster","electro","setInstrument","Error","Component","playModes","BY_BAR","BY_TIME","STABLE","SoundMachine","accentNotes","instrumentLib","currentBeat","beatsPerStep","progressRefreshRate","score","isPlaying","accents","executeStep","step","currentStep","setBpm","bpm","playMode","Tone","Transport","loopEnd","duration","start","repeat","time","idx","note","getInstrument","triggerAttack","Draw","schedule","onBeat","isNaN","value","setBeatsPerStep","newBps","length","pop","push","timeSignature","loop","setState","handleStartStop","stop","getBpm","instrument","onToggle","clearInterval","stepProgressUpdateTimer","_this2","setInterval","updateProgress","_this3","Synth","triggerAttackRelease","Buffer","on","onBufferError","onStop","onStart","onLoopEnd","context","latencyHint","scheduleRepeat","onProgress","progress","instrumentKey","i","_this4","react_default","a","createElement","Button","outline","color","onClick","block","active","defaultProps","SimpleProgress","Container","className","style","width","display","Utils","padTime","t","formatTime","timeInSeconds","Date","setSeconds","getMinutes","getSeconds","Planner","bars","stepProgress","isPaused","timer","ref","startTime","stepsCounter","stepProgressUpdateInterval","planChanged","stepChanged","barRender","b","cls","onStepClick","segmentDuration","toFixed","end","s","segments","min","bpmRange","max","segment","interval","bpmStep","Infinity","stableBpmSlider","uiStateObject","plan","makePlan","totalPlanTime","bar","timeEnd","startTimeFormatted","endTimeFormatted","prevState","pause","resetStep","stepIdx","setStep","getCurrentStep","onStep","date","Badge","currentBpm","components_SimpleProgress","lockBpm","opacity","map","AdvancedSlider","Fragment","height","get","prototype","Slider","Accent","isCurrent","type","BarManager","defaultValue","onAfterChange","selected","newBars","toConsumableArray","lastActiveAccent","toggleCurrent","el","refs","components_Accent","handleCellClick","EditPresetModal","modal","preset","showDelete","toggle","bind","assertThisInitialized","title","onSave","e","newTitle","target","objectSpread","onDeleteBtn","size","onSaveBtn","Modal","isOpen","ModalHeader","ModalBody","Input","onChange","titleChanged","JSON","stringify","ModalFooter","handleSave","renderDelete","PresetsManager","showEdit","userPresets","cookies","Array","fill","onSelect","toLowerCase","saveInCookie","presets","set","path","indexOf","splice","stopPropagation","presetEditor","edit","parse","Row","item","Col","onPresetClick","onMouseEnter","showEditBtn","onMouseLeave","hideEditBtn","class","visibility","onPresetEdit","components_EditPresetModal","onPresetDelete","onSavePreset","SimplePanel","children","GeometricSlider","regression","d","exponential","precision","string","prepareMarks","marks","marksAt","findX","markFormatter","Math","floor","marksStyle","v","predict","y","equation","onBadgeClick","badgeFormatter","es","included","marksNum","desc","AdvancedRange","bounds","Range","ModePanel","bpmStepDropdownOpen","byTimeInterval","byBarInterval","onBpmSliderChange","newMode","byBarSlider","byTimeSlider","setValue","barsNum","ButtonDropdown","margin","onBpmStepChange","DropdownToggle","caret","DropdownMenu","DropdownItem","onBpmStepSelect","components_AdvancedRange","pushable","onBpmRangeChange","components_SimplePanel","ButtonGroup","onModeChange","Collapse","renderSpeedRange","components_GeometricSlider","byBarFormatter","onBarIntervalChange","byTimeFormatter","onTimeIntervalChange","renderIncreaseBpmDropdown","components_AdvancedSlider","30","100","200","300","400","500","600","PresetsLib","App","instrumentDropdownOpen","instrumentDropdownLabel","cycleDropdownOpen","onBeatsPerStepChange","getUiState","sm","barManager","getAccents","setAccents","newBpm","document","addEventListener","handleKeyDown","planner","setPlan","clear","keyCode","preventDefault","stepBackward","stepForward","newInstrument","getCurrentInstrumentLabel","xs","onInstrumentChange","onInstrumentSelect","components_BarManager","onAccentsChange","renderPresetsPane","setProgress","components_SoundMachine","beat","components_ModePanel","onModePanelChanged","renderPlaybackPane","_this5","components_PresetsManager","uiState","onPresetSelect","modePanel","_this6","components_Planner","onPlanChanged","onPlanStep","setActive","renderLeftPane","renderMidPane","renderRightPane","s1","getValue","s2","withCookies","Boolean","window","location","hostname","match","ReactDOM","render","es6","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4QAAaA,EAAc,CAC1BC,SAAU,EACVC,SAAU,EACVC,SAAU,GAGEC,EAAiB,CAC7BJ,EAAYC,SAAUD,EAAYE,SAAUF,EAAYG,UCa1CE,cAfX,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACfM,QAAQC,IAAI,sCAAuCN,EAAMO,KACzD,IAAIC,EAAI,CACJC,GAAOT,EAAMU,QAAQ,GACrBC,MAAQX,EAAMU,QAAQ,GACtBE,GAAOZ,EAAMU,QAAQ,IALV,OAOfT,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAH,GAAAgB,KAAAX,KAAMI,EAAE,CACJQ,QAAShB,EAAMgB,SAAW,WAAahB,EAAMO,IAAM,QAElDA,IAAMP,EAAMO,IACjBN,EAAKgB,MAAQjB,EAAMiB,MAXJhB,6BAFciB,WCAxBC,EAAc,CAC1BC,MAAO,QACPC,YAAa,cAqDCC,cA3CX,SAAAA,EAAYC,GAAmB,IAAAtB,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkB,IAC3BrB,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAoB,GAAAP,KAAAX,QANPoB,MAAQ,GAK0BvB,EAJ/BwB,IAAM,GAIyBxB,EAH/ByB,uBAAoBC,EAOtB,IAAIC,EAAQ,IAAI7B,EAAuB,CAC7BQ,IAAKY,EAAYC,MACjBH,MAAO,QAChBP,QAAS,CAAC,gBAAiB,iBAAkB,aACrCmB,WAEH5B,EAAKwB,IAAKG,EAAMrB,KAAQqB,EAExB,IAAIE,EAAU,IAAI/B,EAAuB,CACrCQ,IAAKY,EAAYE,YACjBJ,MAAO,iBAChBP,QAAS,CAAC,WAAY,YAAa,eAC3BmB,WAhBwB,OAkB3B5B,EAAKwB,IAAKK,EAAQvB,KAAQuB,EAE1B7B,EAAK8B,cAAcR,GAEnBlB,QAAQC,IAAI,mCAtBeL,6EAyBjBM,GACV,QAAsBoB,IAAlBvB,KAAKqB,IAAIlB,GACT,MAAM,IAAIyB,MAAM,wDAA0DzB,GAE9EH,KAAKsB,kBAAoBnB,0CAIzB,QAAyCoB,IAArCvB,KAAKqB,IAAIrB,KAAKsB,mBACd,MAAM,IAAIM,MAAM,iDAAmD5B,KAAKsB,mBAE5E,OAAOtB,KAAKqB,IAAIrB,KAAKsB,0BA1CDO,qBCTfC,EAAY,CACxBC,OAAQ,SACRC,QAAS,UACTC,OAAQ,UCIHC,cAoBL,SAAAA,EAAYtC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,IAClBrC,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAoC,GAAAvB,KAAAX,KAAMJ,KAnBPuC,YAAc,CAAC,KAAM,MAAO,MAkBTtC,EAhBnBuC,mBAAgBb,EAgBG1B,EAdnBwC,YAAc,EAcKxC,EAbnByC,aAAe,EAaIzC,EAXnB0C,oBAAsB,IAAO,GAWV1C,EATnB2C,MAAQ,CAAC,KAAM,MAAM,MAAM,OASR3C,EAPnBuB,MAAQ,CACPqB,WAAW,GAMO5C,EAHnB6C,QAAU,CAACpD,EAAYC,UAGJM,EAwEnB8C,YAAc,SAACC,GAEd/C,EAAKgD,YAAcD,EACnB3C,QAAQC,IAAI,uBAAwBL,EAAKgD,aAEzChD,EAAKiD,OAAOF,EAAKG,KACblD,EAAKgD,YAAYG,WAAalB,EAAUE,QAE3CiB,IAAKC,UAAUC,QAAUP,EAAKQ,SAM9BH,IAAKC,UAAUC,QAAUP,EAAKQ,SAAW,IAG1CnD,QAAQC,IAAI,yCAAyC+C,IAAKC,UAAUC,SACpEF,IAAKC,UAAUG,MAAM,UA1FHxD,EA8FnByD,OAAS,SAACC,GACT,IAAMC,EAAM3D,EAAKwC,cAAgBxC,EAAKyC,aAEhCmB,EAAO5D,EAAK2C,MAAMgB,GAGxB3D,EAAKuC,cAAcsB,gBAAgBC,cAAcF,EAAMF,GAGvDN,IAAKW,KAAKC,SAAS,kBAAMhE,EAAKiE,OAAON,IAAMD,IAvGzB1D,EAkHnBiD,OAAS,SAAAC,GACR,GAAIgB,MAAMhB,IAAQA,GAAO,GAAKA,EAAM,IAEnC,MAAM,IAAInB,MAAM,sBAAwBmB,GAEzCE,IAAKC,UAAUH,IAAIiB,MAAQjB,GAvHTlD,EA0HnBoE,gBAAkB,SAAAC,GAOX,IANNjE,QAAQC,IAAI,gCAAiCgE,GAG7CrE,EAAKyC,aAAe4B,EAGPrE,EAAK2C,MAAM2B,OAASD,GAChCrE,EAAK2C,MAAM4B,MAIZ,KAAOvE,EAAK2C,MAAM2B,OAASD,GAC1BrE,EAAK2C,MAAM6B,KAAK/E,EAAYC,UAG7B0D,IAAKC,UAAUoB,cAAgBJ,EAC/BjB,IAAKC,UAAUqB,MAAO,EAGtB1E,EAAK2E,SAAS,CAAClC,aAAc4B,KA9IXrE,EAiJnBiE,OAAS,SAACzB,GACTxC,EAAKD,MAAMkE,OAAOzB,IAlJAxC,EA4KnB4E,gBAAkB,WACjBxE,QAAQC,IAAI,8BAA8B+C,IAAKC,UAAU9B,OAE5B,YAAzB6B,IAAKC,UAAU9B,MAClBvB,EAAK6E,OAGL7E,EAAKwD,MAAMxD,EAAKgD,cAnLChD,EAuNnB8E,OAAS,WACR,OAAO1B,IAAKC,UAAUH,IAAIiB,OA9M1BnE,EAAKuC,cAAgB,IAAIlB,EAAcrB,EAAKD,MAAMgF,YAVhC/E,+EAclB,MAAM,IAAI+B,MAAM,+DAKhB3B,QAAQC,IAAI,UACZF,KAAKJ,MAAMiF,SAAS7E,KAAKoB,MAAMqB,WAE/BqC,cAAc9E,KAAK+E,2DAGV,IAAAC,EAAAhF,KACTA,KAAKJ,MAAMiF,SAAS7E,KAAKoB,MAAMqB,WAE/BzC,KAAK+E,wBAA0BE,YAC9B,kBAAMD,EAAKE,kBACXlF,KAAKuC,iEAIa,IAAA4C,EAAAnF,MAEP,IAAIiD,IAAKmC,OAAQ3D,WACvB4D,qBAAqB,MAE3BpC,IAAKqC,OAAOC,GAAG,QAAS,kBAAMJ,EAAKK,kBAEnCvC,IAAKC,UAAUqC,GAAG,OAAQ,kBAAMJ,EAAKM,WACrCxC,IAAKC,UAAUqC,GAAG,QAAS,kBAAMJ,EAAKO,YACtCzC,IAAKC,UAAUqC,GAAG,QAAS,kBAAMtF,QAAQC,IAAI,qBAE7C+C,IAAKC,UAAUqC,GAAG,OAAQ,SAAChC,GAAD,OAAU4B,EAAKvF,MAAM+F,UAAUpC,KAEzDN,IAAK2C,QAAQC,YAAc,WAE3B5C,IAAKC,UAAUoB,cAAgB,EAC/BrB,IAAKC,UAAUC,QAAU,KACzBF,IAAKC,UAAUqB,MAAO,EAEtBtB,IAAKC,UAAU4C,eAAe,SAACvC,GAAD,OAAU4B,EAAK7B,OAAOC,IAAO,+CAK3DvD,KAAKJ,MAAMmG,WAAW9C,IAAKC,UAAU8C,0CAG9BpD,GAQP,OAPA3C,QAAQC,IAAI,kBAAmB0C,GAE/B5C,KAAK6C,YAAcD,GAEU,IAAzB5C,KAAKoB,MAAMqB,WACdzC,KAAK2C,YAAYC,GAEX5C,KAAK6C,YAAYE,0CAqCXkD,GACbjG,KAAKoC,cAAcT,cAAcsE,uDAIjC,OAAOjG,KAAKoC,cAAcsB,gBAAgB7C,yCAsChCnB,GACVM,KAAK0C,QAAUhD,EAEf,IAAK,IAAIwG,EAAI,EAAGA,EAAIlG,KAAKwC,MAAM2B,OAAQ+B,IAAK,CAE3C,IAAIzC,EAAOzD,KAAKmC,YAAY7C,EAAYE,eAIjB+B,IAAtB7B,EAAewG,IACfxG,EAAewG,KAAO5G,EAAYC,SAElCkE,EAAOzD,KAAKmC,YAAY7C,EAAYC,eAEdgC,IAAtB7B,EAAewG,IACfxG,EAAewG,KAAO5G,EAAYG,WAElCgE,EAAOzD,KAAKmC,YAAY7C,EAAYG,WAErCO,KAAKwC,MAAM0D,GAAKzC,oCAeT,IAAA0C,EAAAnG,KACR,OACCoG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACCC,SAAO,EACPC,MAAM,QACNC,QAAS,kBAAMP,EAAK1B,mBACpBkC,OAAK,EACLC,OAAQ5G,KAAKoB,MAAMqB,WALpB,+CAkBDxC,QAAQC,IAAI,YACZF,KAAKwE,SAAS,CAAE/B,WAAW,IAC3BzC,KAAKqC,YAAc,EACnBY,IAAKC,UAAUwB,qCAGV9B,GACL3C,QAAQC,IAAI,aACZF,KAAKwE,SAAS,CAAE/B,WAAW,IAC3BzC,KAAK2C,YAAYC,UAxOQf,aAgPZK,IAGfA,EAAa2E,aAAe,CAC3BvE,aAAc,EACdqD,UAAW,SAASpC,KACpBsB,SAAU,SAASzD,KACnB2E,WAAa,SAASC,4BClPRc,6MARX1F,MAAQ,2EAEJ,OAASgF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,UAAU,kBAC1BZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,MAAMC,MAAO,CAACC,MAAOlH,KAAKJ,MAAMoE,MAAS,IAAKmD,QAAS,mBAJrDtF,aCHvBuF,EAAQ,CACVC,QAAS,SAASC,GACpB,OAAOA,EAAI,GAAK,IAAMA,EAAIA,GAE3BC,WAAY,SAASC,GAEpB,IAAIF,EAAI,IAAIG,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnCH,EAAEI,WAAWF,GACb,IACIpH,EAAI,GASR,OARU,IAFFkH,EAAEK,cAGTvH,GAAKkH,EAAEK,aACEvH,GAAK,IACLA,GAAK,GAAKgH,EAAMC,QAAQC,EAAEM,eAG1BxH,GAAKkH,EAAEM,aAEVxH,IAIMgH,IChBTS,6MACLzG,MAAQ,CACP0G,KAAM,GACNC,aAAc,EACdC,UAAU,KAGXC,MAAQ,CACPC,IAAK,KACLC,UAAW,QAEZC,aAAe,IACfC,2BAA6B,IAAO,KA4KpCC,YAAc,WACbrI,QAAQC,IAAI,wBACZL,EAAK0I,iBA0BNC,UAAY,SAAAC,GACX,IAAMC,EAAM7I,EAAKuB,MAAMyB,cAAgB4F,EAAE7F,KAAO,eAAiB,GAEjE,OACCwD,EAAAC,EAAAC,cAAA,OACCI,QAAS,kBAAM7G,EAAK8I,YAAYF,EAAE7F,OAClCoE,UAAW,QAAU0B,EACrBvI,IAAK,OAASsI,EAAE1F,UAEOxB,IAAtBkH,EAAEG,gBACAxB,EAAMG,WAAWkB,EAAEG,gBAAgBC,QAAQ,IAAM,IACjDJ,EAAEK,IAAM,SAPZ,MAQKL,EAAE1F,IAAI8F,QAAQ,6EAlNZE,GACR,IAAIC,EAAW,GAEf,GAAID,EAAE/F,WAAalB,EAAUC,OAI5B,IAHA,IAAMkH,EAAMF,EAAEG,SAAS,GACjBC,EAAMJ,EAAEG,SAAS,GACnBnG,EAAMkG,EACHlG,GAAOoG,GAAK,CAClB,IAAIC,EAAU,CACbrG,IAAKA,EACLK,SAAU2F,EAAEM,SACZP,IAAKC,EAAEM,UAERL,EAAS3E,KAAK+E,GACdrG,GAAOgG,EAAEO,aAGN,GAAIP,EAAE/F,WAAalB,EAAUE,QAMjC,IALA,IAAMiH,EAAMF,EAAEG,SAAS,GACjBC,EAAMJ,EAAEG,SAAS,GACnBnG,EAAMkG,EAGHlG,GAAOoG,GAAK,CAClB,IAAIC,EAAU,CACb7F,KAHM,EAGIwF,EAAEM,SACZhG,MAJM,EAIK0F,EAAEM,SACbP,IALM,EAKGC,EAAEM,SAAWN,EAAEM,SACxBjG,SAAU2F,EAAEM,SACZtG,IAAKA,GAENiG,EAAS3E,KAAK+E,GACdrG,GAAOgG,EAAEO,aAEJ,GAAIP,EAAE/F,WAAalB,EAAUG,OAAQ,CAC3C,IAAImH,EAAU,CACb7F,KAAMgG,IACNnG,SAAUmG,IACVxG,IAAKgG,EAAES,iBAERR,EAAS3E,KAAK+E,GAEf,OAAOJ,kCAIAS,GAAe,IAAAzE,EAAAhF,KAEhB0J,EAAO1J,KAAK2J,SAASF,GAGvB3B,EAAO,GAEP8B,EAAgB,EACd5G,EAAWyG,EAAczG,SAC3BkD,EAAI,EAER,OAAQuD,EAAczG,UACrB,KAAKlB,EAAUC,OACd,IAAKmE,EAAI,EAAGA,EAAIwD,EAAKvF,OAAQ+B,IAAK,CACjC,IAAM2D,EAAM,CACX9G,IAAK2G,EAAKxD,GAAGnD,IACbK,SAAUsG,EAAKxD,GAAG4C,IAClBA,IAAKY,EAAKxD,GAAG4C,IACblG,KAAM5C,KAAKoI,eACXpF,SAAUlB,EAAUC,QAIrB6H,GACE,GAAKF,EAAKxD,GAAGnD,IACd0G,EAAcnH,aACdoH,EAAKxD,GAAG4C,IACThB,EAAKzD,KAAKwF,GAEX,MACD,KAAK/H,EAAUE,QACd,IAAKkE,EAAI,EAAGA,EAAIwD,EAAKvF,OAAQ+B,IAAK,CACjC,IAAM2D,EAAM,CACXtG,KAAMmG,EAAKxD,GAAG3C,KACdH,SAAUsG,EAAKxD,GAAG4C,IAAMY,EAAKxD,GAAG3C,KAChCuG,QAASJ,EAAKxD,GAAG4C,IACjBF,gBAAiBc,EAAKxD,GAAG4C,IAAMY,EAAKxD,GAAG3C,KACvCwG,mBAAoB3C,EAAMG,WAAWmC,EAAKxD,GAAG7C,OAC7C2G,iBAAkB5C,EAAMG,WAAWmC,EAAKxD,GAAG4C,KAC3C/F,IAAK2G,EAAKxD,GAAGnD,IACbC,SAAUlB,EAAUE,QACpBY,KAAM5C,KAAKoI,gBAGZwB,GAAiBF,EAAKxD,GAAG4C,IAEzBhB,EAAKzD,KAAKwF,GAEX,MACD,KAAK/H,EAAUG,OACd2H,EAAgBL,IAChBzB,EAAKzD,KAAK,CACTtB,IAAK2G,EAAK,GAAG3G,IACbK,SAAUmG,IACVvG,SAAUlB,EAAUG,OACpBsB,KAAMgG,IACN3G,KAAM,IAEP3C,QAAQC,IAAI,8BAA+BwJ,EAAK,GAAG3G,KAOrD/C,KAAKoI,aAAe,EAEpBpI,KAAKwE,SACJ,SAAAyF,GAAS,MAAK,CACbL,cAAeA,EACf/G,YAAa,EACbiF,KAAMA,EACN9E,SAAUA,IAEX,kBAAMgC,EAAKsD,+CAMZtI,KAAKkK,QACLlK,KAAKmK,4CAGEC,GACPpK,KAAKwE,SAAS,CAAC3B,YAAauH,GAAUpK,KAAKuI,mDAK3CtI,QAAQC,IAAI,0BAGRF,KAAKoB,MAAMyB,YAAc,EAAI7C,KAAKoB,MAAM0G,KAAK3D,QAChDnE,KAAKqK,QAAQrK,KAAKoB,MAAMyB,YAAc,0CAKvC5C,QAAQC,IAAI,2BAGRF,KAAKoB,MAAMyB,YAAc,GAAK,GACjC7C,KAAKqK,QAAQrK,KAAKoB,MAAMyB,YAAc,wEAgB5BmD,GACXhG,KAAKwE,SAAS,CAACuD,aAAc/B,0CAU7B/F,QAAQC,IAAI,wBACZ,IAAM0C,EAAO5C,KAAKsK,iBAClBtK,KAAKJ,MAAM2K,OAAO3H,uCAIlB3C,QAAQC,IAAI,yBACZF,KAAKwE,SAAS,CAAE3B,YAAa,GAAK7C,KAAKuI,sDAKvC,GAAIvI,KAAKoB,MAAMyB,aAAe7C,KAAKoB,MAAM0G,KAAK3D,OAC7C,MAAM,IAAIvC,MAAM,0CAEjB,OAAO5B,KAAKoB,MAAM0G,KAAK9H,KAAKoB,MAAMyB,iDAGvBW,GACXxD,KAAKwE,SAAS,CAAE3B,YAAaW,GAAOxD,KAAKuI,gDAoB/BiC,GACV,OAAOA,EAAK7C,aAAe,IAAM6C,EAAK5C,8CAG9B,IAAAzC,EAAAnF,KACR,OAA+B,IAA3BA,KAAKoB,MAAM0G,KAAK3D,OACZiC,EAAAC,EAAAC,cAAA,sBAECtG,KAAKoB,MAAM0G,KAAK,GAAGvE,OAASgG,IAEnCnD,EAAAC,EAAAC,cAAA,WAECF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOhE,MAAM,QAAb,QAA0BzG,KAAKJ,MAAM8K,cAM3CtE,EAAAC,EAAAC,cAAA,OAAKU,UAAU,WACdZ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOhE,MAAM,QAAb,QAA0BzG,KAAKJ,MAAM8K,aAEzCtE,EAAAC,EAAAC,cAACqE,EAAD,CAAgB3G,MAAiC,IAA1BhE,KAAKoB,MAAM2G,eAOlC3B,EAAAC,EAAAC,cAAA,OAAKW,MAAOjH,KAAKJ,MAAMgL,QAAU,CAAEC,QAAS,IAAQ,IAClD7K,KAAKoB,MAAM0G,KAAKgD,IAAI,SAAAjB,GAAG,OAAI1E,EAAKqD,UAAUqB,MAE5CzD,EAAAC,EAAAC,cAAA,0BACcc,EAAMG,WAAWvH,KAAKoB,MAAMwI,wBArQxB/H,aA4QPgG,IAEfA,EAAQhB,aAAe,CACtB7D,SAAUlB,EAAUC,OACpBc,YAAa,EACb0H,OAAQ,SAAS3H,8FCzPHmI,mLAvBb,OACC3E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2E,SAAA,KACC5E,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACChE,MAAM,QAENO,UAAU,OAEThH,KAAKoB,MAAM4C,QAGdoC,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAAEgE,OAAQ,SACrB7E,EAAAC,EAAAC,cAAA,WAAAxG,OAAAoL,EAAA,EAAApL,QAAAY,EAAA,EAAAZ,CAAAiL,EAAAI,WAAA,SAAAnL,MAAAW,KAAAX,wDAdwBoL,aCedC,6MAjBdjK,MAAQ,CACPkK,WAAW,2EAIX,OACClF,EAAAC,EAAAC,cAAA,OAAKU,UAAW,YAAsC,IAAzBhH,KAAKoB,MAAMkK,UAAqB,SAAW,IAAM5E,QAAS1G,KAAKJ,MAAM8G,SACjGN,EAAAC,EAAAC,cAAA,OAAKU,UAAW,OAAShH,KAAKJ,MAAM2L,gDAMtCvL,KAAKwE,SAAS,CAAC8G,WAAYtL,KAAKoB,MAAMkK,mBAdnBzJ,aC4DN2J,cArDd,SAAAA,EAAY5L,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwL,IAClB3L,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAA0L,GAAA7K,KAAAX,KAAMJ,KALPwB,MAAQ,CACP0G,KAAM,IAKNjI,EAAKuB,MAAM0G,KAAOlI,EAAM6L,aAFN5L,0EAKR6C,EAASJ,GACnBtC,KAAKwE,SAAS,CAAEsD,KAAMpF,GAAW1C,KAAKJ,MAAM8L,uDAG7BC,GACf,IAAIC,EAAO9L,OAAA+L,EAAA,EAAA/L,CAAOE,KAAKoB,MAAM0G,MAEvByD,EAAOK,EAAQD,GAErBC,EAAQD,GAAYjM,GAAgB6L,EAAO,GAAK,GAEhDvL,KAAKwE,SAAS,CAACsD,KAAM8D,GAAU5L,KAAKJ,MAAM8L,oDAI1C,OAAO1L,KAAKoB,MAAM0G,uCAGTtE,GAELxD,KAAK8L,mBACR9L,KAAK8L,iBAAiBC,gBACtB/L,KAAK8L,sBAAmBvK,GAGzB,IAAMyK,EAAKhM,KAAKiM,KAAK,SAAWzI,GAG5BwI,IACHA,EAAGD,gBACH/L,KAAK8L,iBAAmBE,oCAIjB,IAAAhH,EAAAhF,KACR,OACCoG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2E,SAAA,KACEhL,KAAKoB,MAAM0G,KAAKgD,IAAI,SAACjB,EAAKrG,GAAN,OACpB4C,EAAAC,EAAAC,cAAC4F,EAAD,CAAQhE,IAAK,SAAW1E,EACvB+H,KAAM1B,EACNnD,QAAS,kBAAM1B,EAAKmH,gBAAgB3I,gBAlDjB3B,kECMnBuK,cAOL,SAAAA,EAAYxM,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoM,IAClBvM,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAsM,GAAAzL,KAAAX,KAAMJ,KAPPwB,MAAQ,CACPiL,OAAO,EACPC,OAAQ,KACRC,YAAY,GAMZ1M,EAAKuB,MAAQ,CACZiL,OAAO,GAERxM,EAAK2M,OAAS3M,EAAK2M,OAAOC,KAAZ3M,OAAA4M,EAAA,EAAA5M,QAAA4M,EAAA,EAAA5M,CAAAD,KANIA,wEAUlBG,KAAKwE,SAAS,SAAAyF,GAAS,MAAK,CAC3BoC,OAAQpC,EAAUoC,8CAKnB,IAAMC,EAAStM,KAAKoB,MAAMkL,OACpBK,EAAQ3M,KAAKoB,MAAMkL,OAAOK,MAC5BA,GAASA,EAAMxI,OAAS,IAC3BnE,KAAKJ,MAAMgN,OAAOD,EAAOL,GACzBtM,KAAKwM,uCAIFF,EAAQC,GACZvM,KAAKwE,SACJ,CACC8H,OAAQA,EACRC,WAAYA,GAEbvM,KAAKwM,6CAIMK,GACZ,IAAMC,EAAWD,EAAEE,OAAO/I,MACtBsI,EAAMxM,OAAAkN,EAAA,EAAAlN,CAAA,GAAQE,KAAKoB,MAAMkL,QAC7BA,EAAOK,MAAQG,EACf9M,KAAKwE,SAAS,CAAE8H,iDAMhBtM,KAAKJ,MAAMqN,YAAYjN,KAAKoB,MAAMkL,QAClCtM,KAAKwM,gDAGS,IAAAxH,EAAAhF,KAEd,IAA8B,IAA1BA,KAAKoB,MAAMmL,WACd,OAAOnG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQE,MAAM,UAAUC,QAAS,kBAAM1B,EAAKiI,gBAA5C,2CAQA,IAAA9H,EAAAnF,KACR,OACCoG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2E,SAAA,KACC5E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACCC,SAAO,EACP0G,KAAK,KACLzG,MAAM,QACNC,QAAS1G,KAAKJ,MAAMuN,WAJrB,eAQA/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CACCC,OAAQrN,KAAKoB,MAAMiL,MACnBG,OAAQxM,KAAKwM,OACbxF,UAAWhH,KAAKJ,MAAMoH,WAEtBZ,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAad,OAAQxM,KAAKwM,QAA1B,eACApG,EAAAC,EAAAC,cAACiH,EAAA,EAAD,KACCnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACCC,SAAU,SAAAZ,GAAC,OAAI1H,EAAKuI,aAAab,IACjCpB,aACEzL,KAAKoB,MAAMkL,QACXtM,KAAKoB,MAAMkL,OAAOK,OACnB,KAGFvG,EAAAC,EAAAC,cAAA,OAAKU,UAAU,QACb2G,KAAKC,UAAU5N,KAAKoB,MAAMkL,UAG7BlG,EAAAC,EAAAC,cAACuH,EAAA,EAAD,KACCzH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACCE,MAAM,UACNC,QAAS,kBAAMvB,EAAK2I,eAFrB,QAKU,IACV1H,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQE,MAAM,YAAYC,QAAS1G,KAAKwM,QAAxC,UAGCxM,KAAK+N,yBA1GkBlM,aAkHfuK,IAGfA,EAAgBvF,aAAe,CAC9BoG,YAAa,SAASX,KACtBM,OAAQ,SAASD,EAAOL,KACxBa,UAAW,SAASN,EAAGrJ,UC9HlBwK,cAML,SAAAA,EAAYpO,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgO,IAClBnO,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAkO,GAAArN,KAAAX,KAAMJ,KANPwB,MAAQ,CACPmL,WAAY,GACZ0B,SAAU,IAKVpO,EAAKqO,YAAcrO,EAAKD,MAAMuO,QAAQjD,IAAI,eAE1CrL,EAAKuB,MAAMmL,WAAa1M,EAAKqO,YAAcE,MAAMvO,EAAKqO,YAAY/J,QAAQkK,MAAK,GAAS,GACxFxO,EAAKuB,MAAM6M,SAAWpO,EAAKqO,YAAcE,MAAMvO,EAAKqO,YAAY/J,QAAQkK,MAAK,GAAS,GALpExO,6EAQLyM,GACbtM,KAAKJ,MAAM0O,SAAShC,wCAGRK,EAAOvM,GACnB,IAAMkM,EAAMxM,OAAAkN,EAAA,EAAAlN,CAAA,CAAI6M,MAAOA,GAAUvM,GAE7B8N,EAAclO,KAAKJ,MAAMuO,QAAQjD,IAAI,eAEpCgD,IACJA,EAAc,IAMf,IAFA,IAAI1K,GAAO,EAEF0C,EAAI,EAAIA,EAAIgI,EAAY/J,OAAQ+B,IACpCgI,EAAYhI,GAAGyG,MAAM4B,gBAAkB5B,EAAM4B,gBAChD/K,EAAM0C,GAGJ1C,EAAM,EACT0K,EAAY7J,KAAKiI,GAGjB4B,EAAY1K,GAAO8I,EAGpBtM,KAAKwO,aAAaN,wCAGNO,GACZzO,KAAKJ,MAAMuO,QAAQO,IAAI,cAAef,KAAKC,UAAUa,GAAS,CAAEE,KAAM,MACtE3O,KAAKkO,YAAcO,wCAGN5B,EAAGrJ,GAChB,IAAI+I,EAAUzM,OAAAkN,EAAA,EAAAlN,CAAA,GAAOE,KAAKoB,OAC1BmL,EAAW/I,IAAO,EAClBxD,KAAKwE,SAAS,CAAC+H,mDAGJM,EAAGrJ,GACd,IAAIyK,EAAQnO,OAAAkN,EAAA,EAAAlN,CAAA,GAAOE,KAAKoB,OACxB6M,EAASzK,IAAO,EAChBxD,KAAKwE,SAAS,CAACyJ,iDAEJpB,GACX7M,KAAKwE,SAAS,CAACyJ,UAAU,2CAGX3B,GACd,IAAI9I,EAAMxD,KAAKkO,YAAYU,QAAQtC,GACnC,GAAI9I,EAAM,EACT,MAAM,IAAI5B,MAAM,mBAAsB0K,EAAOK,MAAQ,oCAEtD3M,KAAKkO,YAAYW,OAAOrL,EAAI,GAC5BxD,KAAKwO,aAAaxO,KAAKkO,kDAGXrB,EAAGrJ,GACfvD,QAAQC,IAAI,cAAc2M,EAAErJ,GAE5BqJ,EAAEiC,uBACUvN,IAARiC,EACHxD,KAAKiM,KAAK8C,aAAaC,KAAKhP,KAAKkO,YAAY1K,IAAM,GAInDxD,KAAKiM,KAAK8C,aAAaC,KAAKhP,KAAKJ,MAAM0M,yCAIhC,IAAAtH,EAAAhF,KACFkO,EAAclO,KAAKJ,MAAMuO,QAAQA,QAAQD,YAAeP,KAAKsB,MAAQjP,KAAKJ,MAAMuO,QAAQA,QAAQD,aAAgB,GAEtH,OACC9H,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,UAAU,kBACpBZ,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACElP,KAAKJ,MAAM6O,QAAQ3D,IAAI,SAACqE,EAAM3L,GAAP,OACvB4C,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAKpI,UAAU,SACdN,QAAS,kBAAM1B,EAAKqK,cAAcF,IAClChP,IAAK,UAAYqD,GAEhB2L,EAAKxC,UAITvG,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,oBAGA9I,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACEhB,EAAYpD,IAAI,SAACqE,EAAM3L,GAAP,OAChB4C,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAKpI,UAAU,SACdsI,aAAc,SAACzC,GAAD,OAAO7H,EAAKuK,YAAY1C,EAAGrJ,IACzCgM,aAAc,SAAC3C,GAAD,OAAO7H,EAAKyK,YAAY5C,EAAGrJ,IACzCkD,QAAS,kBAAM1B,EAAKqK,cAAcF,IAClChP,IAAK,UAAYqD,GAEhB2L,EAAKxC,MACNvG,EAAAC,EAAAC,cAAA,OAAKoJ,MAAM,IAAIzI,MAAO,CAAC0I,WAAY3K,EAAK5D,MAAM6M,SAASzK,GAAO,GAAK,UAAWkD,QAAS,SAACmG,GAAD,OAAO7H,EAAK4K,aAAa/C,EAAErJ,KAAlH,YAKH4C,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACC9I,EAAAC,EAAAC,cAACuJ,EAAD,CAAiB3H,IAAI,eAAe+E,YAAa,SAACX,GAAD,OAAYtH,EAAK8K,eAAexD,IAASa,UAAW,SAACN,EAAErJ,GAAH,OAAWwB,EAAK4K,aAAa/C,EAAErJ,IAAMoJ,OAAQ,SAACD,EAAOL,GAAR,OAAmBtH,EAAK+K,aAAapD,EAAOL,eAxHtKzK,aA+HdmM,IAEfA,EAAenH,aAAe,CAC7ByH,SAAU,SAAShC,UCnId0D,oLAEE,OACI5J,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,UAAW,QAAUhH,KAAKJ,MAAMoH,WACnDZ,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAKlI,UAAU,cAAchH,KAAKJ,MAAM+M,OACxCvG,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAKlI,UAAU,aAAahH,KAAKJ,MAAMqQ,kBALjBpO,aAWXmO,MAGfA,GAAYnJ,aAAe,CACvB8F,MAAO,QACPsD,SAAU,GACVjJ,UAAW,gDCdTkJ,eAMF,SAAAA,EAAYtQ,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkQ,IAGfrQ,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAoQ,GAAAvP,KAAAX,KAAMJ,KARbwB,MAAQ,CACD4C,WAAOzC,EACP4O,gBAAY5O,GAQZ,IAAM6O,EAAI,CAAC,CAAC,EAAEvQ,EAAKD,MAAMqJ,KAAO,CAAC,IAAKpJ,EAAKD,MAAMuJ,MALlC,OAOftJ,EAAKuB,MAAM+O,WAAaA,KAAWE,YAAYD,EAAG,CAACE,UAAY,KAC/DrQ,QAAQC,IAAI,cAAeL,EAAKuB,MAAM+O,WAAWI,QAEjD1Q,EAAK2Q,eAEL3Q,EAAKuB,MAAM4C,MAAQnE,EAAKD,MAAM6L,aAZf5L,8EAiBfG,KAAKyQ,MAAQ,GAEb,IAAK,IAAIvK,EAAI,EAAGA,EAAIlG,KAAKJ,MAAM8Q,QAAQvM,OAAQ+B,IAC3ClG,KAAKyQ,MAAQzQ,KAAK2Q,MAAM3Q,KAAKJ,MAAM8Q,QAAQxK,KAASlG,KAAKJ,MAAM8Q,QAAQxK,oCAItElC,GACL,MAAO,CACHnD,MAAOb,KAAKJ,MAAMgR,cACdC,KAAKC,MAAM9M,IAEfiD,MAAOjH,KAAKJ,MAAMmR,6CAIjBC,GACL/Q,QAAQC,IAAI,WAAY8Q,GACxB,IAAMhN,EAAS6M,KAAKC,MAAM9Q,KAAKoB,MAAM+O,WAAWc,QAAQD,GAAG,IAC3DhR,KAAKwE,SAAS,CAACR,MAAOA,IACtBhE,KAAKJ,MAAM6N,SAASzJ,iCAGlBkN,GAEF,OAAOL,KAAK3Q,IAAIgR,GAAGlR,KAAKoB,MAAM+O,WAAWgB,SAAS,oCAG7CH,GACLhR,KAAKwE,SAAS,CAACR,MAAOgN,qCAGjB,IAAAhM,EAAAhF,KACL,OACIoG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2E,SAAA,KACC5E,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAQhE,MAAM,QAAQC,QAAS1G,KAAKoR,aAAcpK,UAAU,OACxChH,KAAKJ,MAAMyR,eAAerR,KAAKoB,MAAM4C,SAG9CoC,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAQpJ,IAAI,SAASqJ,UAAU,EAAOvN,MAAOhE,KAAK2Q,MAAM3Q,KAAKoB,MAAM4C,OAAQiD,MAAO,CAACgE,OAAQ,QAASwC,SAAU,SAACuD,GAAD,OAAOhM,EAAKyI,SAASuD,IAAI/H,IAAK,EAAGE,IAAK,IAAKvG,KAAM,GAAK6N,MAAOzQ,KAAKyQ,gBA/DlK5O,aAuEfqO,MAEfA,GAAgBrJ,aAAe,CAC3B2K,SAAU,EACVT,WAAY,CACRtK,MAAO,QAEXgL,KAAM,GACNJ,eAAgB,SAASL,GAAI,OAAOA,GACpCJ,cAAe,SAASI,GAAI,OAAOA,GACnCvF,aAAc,GACdiF,QAAS,QC/DEgB,oLAnBb,OACCtL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2E,SAAA,KACC5E,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACChE,MAAM,QAENO,UAAU,OAEThH,KAAKoB,MAAMuQ,OAAO,GALpB,MAK2B3R,KAAKoB,MAAMuQ,OAAO,KAGlCvL,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAAEgE,OAAQ,SAAtBnL,OAAAoL,EAAA,EAAApL,QAAAY,EAAA,EAAAZ,CAAA4R,EAAAvG,WAAA,SAAAnL,MAAAW,KAAAX,eAbY4R,KCatBC,eAWL,SAAAA,EAAYjS,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6R,IAClBhS,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAA+R,GAAAlR,KAAAX,KAAMJ,KAXPwB,MAAQ,CACP4B,SAAUlB,EAAUE,QACpBsH,QAAS,GACTwI,qBAAqB,EACrBC,eAAgB,EAChBC,cAAe,EACfxI,gBAAiB,IACjBN,SAAU,CAAC,IAAI,MAGGrJ,EAsBnBoS,kBAAoB,SAACjO,GACpB/D,QAAQC,IAAI,oBAAoB8D,GAChCnE,EAAK2E,SAAS,CAAEgF,gBAAiBxF,GAASnE,EAAKD,MAAM8L,gBAtBrD7L,EAAKuB,MAAM4B,SAAWpD,EAAMoD,SACxBpD,EAAMoD,WAAalB,EAAUC,OAChClC,EAAKuB,MAAM4Q,cAAgBpS,EAAMyJ,SAEjCxJ,EAAKuB,MAAM2Q,eAAiBnS,EAAMyJ,SAEnCxJ,EAAKuB,MAAMkI,QAAU1J,EAAM0J,QAC3BzJ,EAAKuB,MAAM8H,SAAUtJ,EAAMsJ,SAC3BjJ,QAAQC,IAAI,2BAVML,4EAaNqS,GACZlS,KAAKwE,SAAS,CAAExB,SAAUkP,GAAWlS,KAAKJ,MAAM8L,wDAGhCxC,GAChBjJ,QAAQC,IAAI,+BAA+BgJ,EAAS,GAAG,KACvDlJ,KAAKwE,SAAS,CAAE0E,SAAUA,GAAYlJ,KAAKJ,MAAM8L,yDASjD1L,KAAKwE,SAAS,SAAAyF,GAAS,MAAK,CAC3B6H,qBAAsB7H,EAAU6H,+DAIlB9N,GACfhE,KAAKwE,SAAS,CAAE8E,QAAStF,GAAShE,KAAKJ,MAAM8L,kDAe7C,MAXU,CACT1I,SAAUhD,KAAKoB,MAAM4B,SACrBqG,SACCrJ,KAAKoB,MAAM4B,WAAalB,EAAUC,OAC/B/B,KAAKoB,MAAM4Q,cACXhS,KAAKoB,MAAM2Q,eACfzI,QAAStJ,KAAKoB,MAAMkI,QACpBJ,SAAUlJ,KAAKoB,MAAM4B,WAAalB,EAAUG,OAASjC,KAAKoB,MAAM8H,SAAWlJ,KAAKJ,MAAMsJ,SACtFM,gBAAiBxJ,KAAKoB,MAAMoI,kDAMrBpJ,GACRH,QAAQC,IAAI,sBAAuBE,GACnCJ,KAAKwE,SACJ,CACCxB,SAAU5C,EAAE4C,SACZsG,QAASlJ,EAAEkJ,QACX0I,cACC5R,EAAE4C,WAAalB,EAAUC,OACtB3B,EAAEiJ,SACFrJ,KAAKoB,MAAM4Q,cACfD,eACC3R,EAAE4C,WAAalB,EAAUE,QACtB5B,EAAEiJ,SACFrJ,KAAKoB,MAAM2Q,eACf7I,SAAU9I,EAAE8I,SACZM,gBAAiBpJ,EAAEoJ,iBAAmBxJ,KAAKoB,MAAMoI,iBAElDxJ,KAAKJ,MAAM8L,gBAIXtL,EAAE4C,WAAalB,EAAUC,OACtB/B,KAAKiM,KAAKkG,YACVnS,KAAKiM,KAAKmG,cACPC,SAASjS,EAAEiJ,UAElBrJ,KAAKiM,KAAK/C,SAAS1E,SAAS,CAACmN,OAAQvR,EAAE8I,wDAGnB8H,GACpBhR,KAAKwE,SAAS,CAAEuN,eAAgBf,GAAKhR,KAAKJ,MAAM8L,2DAG7BsF,GACnBhR,KAAKwE,SAAS,CAAEwN,cAAehB,GAAKhR,KAAKJ,MAAM8L,sDAGjC4G,GACd,IAAIvJ,EAAIuJ,EAAU,IAMlB,OAJCvJ,GADe,IAAZuJ,EACE,MAEA,+CAKS/O,GACf,IAAIwF,EAAI3B,EAAMG,WAAWhE,GAAQ,IAWjC,OARCwF,GADY,IAATxF,EACE,SACKA,EAAO,GACZ,UACKA,EAAO,IACZ,SAEA,8DAKqB,IAAAyB,EAAAhF,KAC3B,OACCoG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2E,SAAA,yBAEC5E,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACCtL,MAAO,CAAEuL,OAAQ,WACjBnF,OAAQrN,KAAKoB,MAAM0Q,oBACnBtF,OAAQ,kBAAMxH,EAAKyN,oBAEnBrM,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CAAgBC,OAAK,EAACzF,KAAK,KAAK1G,SAAO,EAACC,MAAM,SAC5CzG,KAAKoB,MAAMkI,SAEblD,EAAAC,EAAAC,cAACsM,EAAA,EAAD,KACCxM,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACCnM,QAAS,WACR1B,EAAK8N,gBAAgB,KAFvB,KAOA1M,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACCnM,QAAS,WACR1B,EAAK8N,gBAAgB,MAFvB,MAOA1M,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACCnM,QAAS,WACR1B,EAAK8N,gBAAgB,MAFvB,MAOA1M,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACCnM,QAAS,WACR1B,EAAK8N,gBAAgB,MAFvB,MAOA1M,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACCnM,QAAS,WACR1B,EAAK8N,gBAAgB,MAFvB,QAvCH,kDAqDiB,IAAA3N,EAAAnF,KAGlB,OAAQoG,EAAAC,EAAAC,cAAA,yBAEPF,EAAAC,EAAAC,cAACyM,GAAD,CACC7K,IAAI,WACJe,IAAK,GACLE,IAAK,IACLsC,aAAc,CACbzL,KAAKoB,MAAM8H,SAAS,GACpBlJ,KAAKoB,MAAM8H,SAAS,IAErB8J,UAAU,EACVtH,cAAe,SAAC1H,GAAD,OAAWmB,EAAK8N,iBAAiBjP,wCAK1C,IAAAmC,EAAAnG,KACR,OACCoG,EAAAC,EAAAC,cAAC4M,GAAD,CAAalM,UAAU,YAAY2F,MAAM,QACxCvG,EAAAC,EAAAC,cAAC6M,GAAA,EAAD,CAAajG,KAAK,MACjB9G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACC2G,KAAK,KACL1G,SAAO,EACPC,MAAM,QACNC,QAAS,kBAAMP,EAAKiN,aAAatR,EAAUC,SAC3C6E,OAAQ5G,KAAKoB,MAAM4B,WAAalB,EAAUC,QAL3C,UASAqE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACC2G,KAAK,KACL1G,SAAO,EACPC,MAAM,QACNC,QAAS,kBAAMP,EAAKiN,aAAatR,EAAUE,UAC3C4E,OAAQ5G,KAAKoB,MAAM4B,WAAalB,EAAUE,SAL3C,WASAoE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACC2G,KAAK,KACL1G,SAAO,EACPC,MAAM,QACNC,QAAS,kBAAMP,EAAKiN,aAAatR,EAAUG,SAC3C2E,OAAQ5G,KAAKoB,MAAM4B,WAAalB,EAAUG,QAL3C,WAWDmE,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAUhG,OAAQrN,KAAKoB,MAAM4B,WAAalB,EAAUG,QAElDjC,KAAKsT,oBAIPlN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAUhG,OAAQrN,KAAKoB,MAAM4B,WAAalB,EAAUC,QAEnDqE,EAAAC,EAAAC,cAAA,kCAECF,EAAAC,EAAAC,cAACiN,GAAD,CACCrL,IAAI,cACJuD,aAAczL,KAAKoB,MAAM4Q,cACzBX,eAAgBrR,KAAKwT,eACrB/F,SAAU,SAAAuD,GAAC,OAAI7K,EAAKsN,oBAAoBzC,IACxC/H,IAAK,EACLE,IAAK,IACLuH,QAAS,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,SAIvCtK,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAUhG,OAAQrN,KAAKoB,MAAM4B,WAAalB,EAAUE,SAEnDoE,EAAAC,EAAAC,cAAA,kCAECF,EAAAC,EAAAC,cAACiN,GAAD,CACCrL,IAAI,eACJuD,aAAczL,KAAKoB,MAAM2Q,eACzBV,eAAgBrR,KAAK0T,gBACrB9C,cAAexJ,EAAMG,WACrBkG,SAAU,SAAAuD,GAAC,OAAI7K,EAAKwN,qBAAqB3C,IACzC/H,IAAK,EACLE,IAAK,IACLuH,QAAS,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,SAIxC1Q,KAAKoB,MAAM4B,WAAalB,EAAUG,OAASjC,KAAK4T,4BAA8B,GAC/ExN,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAUhG,OAAQrN,KAAKoB,MAAM4B,WAAalB,EAAUG,QACnDmE,EAAAC,EAAAC,cAAA,wBAGCF,EAAAC,EAAAC,cAACuN,EAAD,CACE3L,IAAI,kBACJqJ,UAAU,EACVtI,IAAK,GACLE,IAAK,IACLsH,MAAO,CAACqD,GAAI,KAAMC,IAAI,MAAOC,IAAK,MAAOC,IAAK,MAAOC,IAAK,MAAQC,IAAK,MAAOC,IAAK,OACnFpQ,MAAOhE,KAAKoB,MAAMoI,gBAClBiE,SAAUzN,KAAKiS,8BAzRCpQ,aAkSTgQ,MAEfA,GAAUhL,aAAe,CACxB6E,cAAe,MClTT,IAAM2I,GAAa,CACtB,CACI1H,MAAO,uBACPrK,aAAc,EACdU,SAAUlB,EAAUC,OACpBsH,SAAU,EACVC,QAAS,GACTJ,SAAU,CAAC,IAAK,KAChBxG,QAAS,CAAC,EAAG,EAAG,EAAG,IAEvB,CACIiK,MAAO,gBACP/H,WAAY7D,EAAYC,MAC9BsB,aAAc,GACd4G,SAAU,CAAC,IAAK,KACVxG,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrCM,SAAUlB,EAAUE,QACpBqH,SAAU,IACVC,QAAS,IAEb,CAACqD,MAAO,WAAYzD,SAAW,CAAC,IAAI,KAAK5G,aAAe,EAAEI,QAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGkC,WAAa,aAAa5B,SAAW,SAASqG,SAAW,GAAGC,QAAU,IAC1J,CAACqD,MAAO,WAAYzD,SAAW,CAAC,IAAI,KAAK5G,aAAe,EAAEI,QAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGkC,WAAa,QAAQ5B,SAAW,SAASqG,SAAW,IAAIC,QAAU,IACtJ,CAACqD,MAAO,WAAYzD,SAAW,CAAC,IAAI,KAAK5G,aAAe,EAAEI,QAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGkC,WAAa,aAAa5B,SAAW,UAAUqG,SAAW,IAAIC,QAAU,IAC9J,CAACqD,MAAO,WAAYzD,SAAW,CAAC,IAAI,KAAK5G,aAAe,EAAEI,QAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGkC,WAAa,aAAa5B,SAAW,SAASqG,SAAW,GAAGC,QAAU,KCD1JgL,8MACLlT,MAAQ,CACPsJ,WAAY,GACZ9F,WAAY7D,EAAYE,YACxBsT,wBAAwB,EACxBC,wBAAyB,cACzBC,mBAAmB,KA6RpBC,qBAAuB,WAEtB,IAAMxQ,EAASrE,EAAK8U,aAAarS,aAEjC,GAAI4B,IAAWrE,EAAKoM,KAAK2I,GAAGtS,aAAc,CAGzC,IAFA,IAAMI,EAAU7C,EAAKoM,KAAK4I,WAAWC,aAE9BpS,EAAQyB,OAASD,GACvBxB,EAAQ0B,MAET,KAAO1B,EAAQyB,OAASD,GACvBxB,EAAQ2B,KAAK/E,EAAYE,UAG1BK,EAAKoM,KAAK2I,GAAG3Q,gBAAgBC,GAC7BrE,EAAKoM,KAAK4I,WAAWE,WAAWrS,GAChC7C,EAAK2E,SAAS,CAAElC,aAAc4B,QA+BhCpB,OAAS,SAAAkS,GACRnV,EAAK2E,SAAS,CAAEkG,WAAYsK,IAC5BnV,EAAKoM,KAAK2I,GAAG9R,OAAOkS,uFA3UD,IAAAhQ,EAAAhF,KAEnBA,KAAKiM,KAAK2I,GAAGG,WAAW/U,KAAKiM,KAAK4I,WAAWC,cAG7CG,SAASC,iBAAiB,UAAW,SAAArI,GAAC,OAAI7H,EAAKmQ,cAActI,KAG7D7M,KAAKiM,KAAKmJ,QAAQC,QAAQrV,KAAK2U,cAE/B1U,QAAQqV,8CAGKzI,GAEb,OAAQA,EAAE0I,SACT,KAAK,GAEJvV,KAAKiM,KAAK2I,GAAGnQ,kBACb,MACD,KAAK,GACJoI,EAAE2I,iBACExV,KAAKoB,MAAMsJ,WAAa,KAC3B1K,KAAK8C,OAAO9C,KAAKoB,MAAMsJ,WAAa,IAErC,MACD,KAAK,GACJmC,EAAE2I,iBACExV,KAAKoB,MAAMsJ,WAAa,IAC3B1K,KAAK8C,OAAO9C,KAAKoB,MAAMsJ,WAAa,IAErC,MACD,KAAK,GACJmC,EAAE2I,iBACFxV,KAAKiM,KAAKmJ,QAAQK,eAClB,MACD,KAAK,GACJ5I,EAAE2I,iBACFxV,KAAKiM,KAAKmJ,QAAQM,0DAMFC,GAClB3V,KAAKiM,KAAK2I,GAAGjT,cAAcgU,GAC3B,IAAM9U,EAAQb,KAAKiM,KAAK2I,GAAGgB,4BAC3B3V,QAAQC,IAAI,2CAA4CyV,GACxD3V,KAAKwE,SAAS,CACbI,WAAY+Q,EACZnB,wBAAyB3T,iDAIN,IAAAsE,EAAAnF,KACpB,OACCoG,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,UAAU,QACpBZ,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAKlI,UAAU,cAAf,YACAZ,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACC9I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAKyG,GAAG,KAAR,cACAzP,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACChJ,EAAAC,EAAAC,cAACiM,EAAA,EAAD,CACClF,OAAQrN,KAAKoB,MAAMmT,uBACnB/H,OAAQ,kBAAMrH,EAAK2Q,uBAEnB1P,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CACCC,OAAK,EACLzF,KAAK,KACL1G,SAAO,EACPC,MAAM,SAELzG,KAAKoB,MAAMoT,yBAEbpO,EAAAC,EAAAC,cAACsM,EAAA,EAAD,KACCxM,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACCnM,QAAS,WACRvB,EAAK4Q,mBACJhV,EAAYC,SAHf,SASAoF,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACCnM,QAAS,WACRvB,EAAK4Q,mBACJhV,EAAYE,eAHf,mBAcJmF,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACC9I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAKyG,GAAI,GAAT,kBACAzP,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACChJ,EAAAC,EAAAC,cAACuN,EAAD,CACC3L,IAAI,eACJe,IAAK,EACLE,IAAK,GACLsC,aAAczL,KAAKJ,MAAM0C,aACzBoJ,cAAe,kBAAMvG,EAAKuP,4BAK7BtO,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACC9I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,CAAKyG,GAAI,GAAT,WACAzP,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACChJ,EAAAC,EAAAC,cAAC0P,EAAD,CACCtK,cAAe,kBAAMvG,EAAK8Q,mBAC1B/N,IAAI,aACJuD,aAAczL,KAAKJ,MAAM8C,0DAc9BzC,QAAQC,IAAI,2BACZ,IAAMkB,EAAQpB,KAAK2U,aAGnB3U,KAAKiM,KAAKmJ,QAAQC,QAAQjU,6CAI1B,OACCgF,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACCX,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACC9I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KAAMpP,KAAKkW,0DAMJlQ,GACVhG,KAAKiM,KAAKmJ,QAAQe,YAAYnQ,4CAGd,IAAAG,EAAAnG,KAChB,OACCoG,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACCX,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACC9I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACChJ,EAAAC,EAAAC,cAAC4M,GAAD,CAAavG,MAAM,WAClBvG,EAAAC,EAAAC,cAAC8P,EAAD,CACClO,IAAI,KACJ5F,aAActC,KAAKoB,MAAMkB,aACzBqD,UAAW,kBAAMQ,EAAKR,aACtB7B,OAAQ,SAAAuS,GAAI,OAAIlQ,EAAKrC,OAAOuS,IAC5BzR,WAAY5E,KAAKoB,MAAMwD,WAEvBmB,WAAY,SAACC,GAAD,OAAcG,EAAKJ,WAAWC,SAM9CI,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACC9I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACChJ,EAAAC,EAAAC,cAACgQ,GAAD,CACCpO,IAAI,YACJlF,SAAUhD,KAAKJ,MAAMoD,SACrBqG,SAAUrJ,KAAKJ,MAAMyJ,SACrBC,QAAStJ,KAAKJ,MAAM0J,QACpBJ,SAAUlJ,KAAKJ,MAAMsJ,SAErBwB,WAAY1K,KAAKoB,MAAMsJ,WAEvBgB,cAAe,kBAAMvF,EAAKoQ,0BAK7BnQ,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACC9I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KAAMpP,KAAKwW,oEASK,IAAAC,EAAAzW,KACnB,OACCoG,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,UAAU,QACpBZ,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAKlI,UAAU,cAAf,WACAZ,EAAAC,EAAAC,cAACoQ,EAAD,CACCxO,IAAI,iBACJoE,OAAQtM,KAAK2W,QACbxI,QAASnO,KAAKJ,MAAMuO,QACpBM,QAAS4F,GACT/F,SAAU,SAAAhC,GAAM,OAAImK,EAAKG,eAAetK,8CAM7BA,GACdrM,QAAQC,IAAI,iBAAkBoM,GAE9BtM,KAAKiM,KAAK3J,aAAakC,SAAS,CAAER,MAAOsI,EAAOhK,eAEhDtC,KAAKiM,KAAK2I,GAAG3Q,gBAAgBqI,EAAOhK,cAEpCtC,KAAK+V,mBAAmBzJ,EAAO1H,YAAc7D,EAAYC,OAEzDhB,KAAKiM,KAAK4I,WAAWE,WAAWzI,EAAO5J,QAAS4J,EAAOhK,cAEvDtC,KAAKiM,KAAK4K,UAAUxE,SAAS/F,2CAId,IAAAwK,EAAA9W,KACf,OACCoG,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACCX,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACC9I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACChJ,EAAAC,EAAAC,cAAC4M,GAAD,CAAavG,MAAO,QACpBvG,EAAAC,EAAAC,cAACyQ,EAAD,CACCrM,WAAY1K,KAAKoB,MAAMsJ,WACvB+C,SAAU,kBAAMqJ,EAAKE,iBACrBzM,OAAQ,SAAA3H,GAAI,OAAIkU,EAAKG,WAAWrU,IAChCsF,IAAI,oDAWTlI,KAAKiM,KAAKmJ,QAAQM,6CAGZlS,GACNxD,KAAKiM,KAAK4I,WAAWqC,UAAU1T,oCAS/B,OAJAyR,SAAStI,MACR,QAAU3M,KAAKoB,MAAMsJ,WAAW7B,QAAQ,GAAK,kBAI7CzC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,OAEdZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAWC,UAAU,iBACpBZ,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACC9I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KAEEpP,KAAKmX,kBAEP/Q,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KAAMpP,KAAKoX,kBAEZhR,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACC9I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KAEEpP,KAAKqX,yDA4BDzU,GACV3C,QAAQC,IAAI,kBAAmB0C,GAG3BA,GACH5C,KAAKwE,SAAS,CAACkG,WAAY1K,KAAKiM,KAAK2I,GAAGvK,QAAQzH,kDA4BjD5C,KAAKwE,SAAS,SAAAyF,GAAS,MAAK,CAC3BsK,wBAAyBtK,EAAUsK,+DAOpC,IAAM+C,EAAK,CACVhV,aAActC,KAAKiM,KAAK3J,aAAaiV,WACrC7U,QAAS1C,KAAKiM,KAAK4I,WAAWC,aAC9BlQ,WAAY5E,KAAKoB,MAAMwD,YAGlB4S,EAAKxX,KAAKiM,KAAK4K,UAAUU,WAEzBZ,EAAO7W,OAAAkN,EAAA,EAAAlN,CAAA,GAAQwX,EAAOE,GAM5B,OAJAvX,QAAQC,IAAI,kBAAmBF,KAAK2W,SACpC3W,KAAK2W,QAAUA,EAEf3W,KAAK2W,QAAQ/R,WAAa5E,KAAKoB,MAAMwD,WAC9B+R,4CAIP3W,KAAKiM,KAAK2I,GAAGG,WAAW/U,KAAKiM,KAAK4I,WAAWC,qBAlX7BjT,aAsXH4V,eAAYnD,IAG3BA,GAAIzN,aAAe,CAClB7D,SAAUlB,EAAUC,OACpBsH,SAAU,GACVzE,WAAY7D,EAAYC,MACxBsI,QAAS,GACTJ,SAAU,CAAC,IAAK,KAChB5G,aAAc,EACdI,QAAS,CAAC,EAAG,EAAG,EAAG,IC9YAgV,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAS5R,EAAAC,EAAAC,cAAC2R,EAAA,EAAD,SAAkB7R,EAAAC,EAAAC,cAAC4R,GAAD,MAAlB,KAAgDjD,SAASkD,eAAe,SD0HpF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.50c22267.chunk.js","sourcesContent":["export const accentTypes = {\r\n\tACCENT_1: 0,\r\n\tACCENT_2: 1,\r\n\tACCENT_3: 2\r\n};\r\n\r\nexport const accentTypesArr = [\r\n\taccentTypes.ACCENT_1, accentTypes.ACCENT_2, accentTypes.ACCENT_3\r\n];","import {Sampler} from 'tone'\r\n\r\n\r\nclass SoundMachineInstrument extends Sampler {\r\n\r\n    constructor(props) {\r\n        console.log('<SoundMachineInstrument>constructor', props.key)\r\n        var o = {\r\n            \"C3\" : props.samples[0],\r\n            \"C#3\" : props.samples[1],\r\n            \"D3\" : props.samples[2],\r\n        };\r\n        super(o,{\r\n            baseUrl: props.baseUrl || './audio/' + props.key + '/'\r\n        });\r\n        this.key = props.key;\r\n        this.label = props.label;\r\n    }\r\n}\r\n\r\nexport default SoundMachineInstrument;\r\n\r\n ","import { Component } from \"react\";\r\nimport SoundMachineInstrument from \"./SoundMachineInstrument\"\r\n\r\nexport const instruments = {\r\n\tTABLA: \"tabla\",\r\n\tELECTRO_KIT: \"electrokit\"\r\n\t// ACOUSTIC_KIT: \"acoustic_kit\"\r\n};\r\n\r\nclass InstrumentLib extends Component {\r\n\tstate = {};\r\n    lib = {};\r\n    currentInstrument = undefined\r\n\r\n\r\n    constructor(defaultInstrument) {\r\n        super();\r\n    \r\n        //Tone.Buffer.on(\"load\", () => this.onBufferLoaded());\r\n\t\tvar tabla = new SoundMachineInstrument({\r\n            key: instruments.TABLA,\r\n            label: \"Tabla\",\r\n\t\t\tsamples: [\"dha-slide.wav\", \"dhin-slide.wav\", \"tin.wav\"]\r\n        }).toMaster();\r\n        \r\n        this.lib[ tabla.key ] = tabla;\r\n    \r\n        var electro = new SoundMachineInstrument({\r\n            key: instruments.ELECTRO_KIT,\r\n            label: 'Electronic Kit',\r\n\t\t\tsamples: [\"Kick.wav\", \"HiHat.wav\", \"Snare.wav\"]\r\n        }).toMaster();\r\n        \r\n        this.lib[ electro.key ] = electro;\r\n\r\n        this.setInstrument(defaultInstrument)\r\n        \r\n        console.log('<InstrumentLib>done constructor')\r\n    }\r\n\r\n    setInstrument(key) {\r\n        if (this.lib[key] === undefined) {\r\n            throw new Error(\"InstrumentLib has no such instrument with given key: \" + key)\r\n        }\r\n        this.currentInstrument = key;\r\n    }\r\n \r\n    getInstrument() {\r\n        if (this.lib[this.currentInstrument] === undefined) {\r\n            throw new Error(\"There is no such instrument in InstrumentLib: \" + this.currentInstrument)\r\n        }\r\n        return this.lib[this.currentInstrument];\r\n    }\r\n\r\n\t// render() {\r\n\t// \treturn <div />;\r\n\t// }\r\n}\r\nexport default InstrumentLib;\r\n","export const playModes = {\r\n\tBY_BAR: \"by_bar\",\r\n\tBY_TIME: \"by_time\",\r\n\tSTABLE: \"stable\"\r\n};","import React, { Component } from \"react\";\r\nimport Tone from \"tone\";\r\nimport { accentTypes } from \"./AccentTypes\";\r\nimport InstrumentLib from \"./InstrumentLib\";\r\nimport {Button} from 'reactstrap'\r\nimport { playModes } from \"./PlayModes\";\r\n\r\nclass SoundMachine extends Component {\r\n\r\n\taccentNotes = [\"C3\", \"C#3\", \"D3\"]; // this stay in sync with AccentTypes\r\n\r\n\tinstrumentLib = undefined;\r\n\r\n\tcurrentBeat = 0;\r\n\tbeatsPerStep = 4;\t\r\n\r\n\tprogressRefreshRate = 1000 / 30; // 30 fps\r\n\r\n\tscore = [\"C3\", \"C#3\",\"C#3\",\"C#3\"];\r\n\r\n\tstate = {\r\n\t\tisPlaying: false\r\n\t};\r\n\r\n\taccents = [accentTypes.ACCENT_1]; // default with accent on first beat\r\n\t\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t// if (!props.beatsPerStep) {\r\n\t\t// \tthrow new Error(\"props.beatsPerStep is missing\");\r\n\t\t// }\r\n\t\t// this.state.beatsPerStep = props.beatsPerStep;\r\n\t\t// onAfterChange: null\r\n\t\t// onLoopEnd = props.onLoopEnd\r\n\r\n\t\t// init library\r\n\t\tthis.instrumentLib = new InstrumentLib(this.props.instrument)\r\n\t}\r\n\t\r\n\tonBufferError() {\r\n\t\tthrow new Error(\"Some buffers weren't found\")\r\n\t\t\r\n\t}\r\n\r\n\tonStop() {\r\n\t\tconsole.log('onStop')\r\n\t\tthis.props.onToggle(this.state.isPlaying)\r\n\t\t\r\n\t\tclearInterval(this.stepProgressUpdateTimer);\r\n\t}\r\n\r\n\tonStart() {\r\n\t\tthis.props.onToggle(this.state.isPlaying)\r\n\t\t\r\n\t\tthis.stepProgressUpdateTimer = setInterval(\r\n\t\t\t() => this.updateProgress(),\r\n\t\t\tthis.progressRefreshRate\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// reload/debug bell\r\n\t\tvar synth = new Tone.Synth().toMaster();\r\n\t\tsynth.triggerAttackRelease(\"A2\");\r\n\r\n\t\tTone.Buffer.on(\"error\", () => this.onBufferError());\r\n\r\n\t\tTone.Transport.on('stop', () => this.onStop());\r\n\t\tTone.Transport.on('start', () => this.onStart());\r\n\t\tTone.Transport.on('pause', () => console.log('TRANSPORT.pause'));\r\n\t\t// Tone.Transport.on('start', () => console.log('TRANSPORT.start'));\r\n\t\tTone.Transport.on('loop', (time) => this.props.onLoopEnd(time));\r\n\t\t\r\n\t\tTone.context.latencyHint = \"playback\";\r\n\r\n\t\tTone.Transport.timeSignature = 4;// [this.beatsPerStep, 4];\r\n\t\tTone.Transport.loopEnd = \"1m\"\r\n\t\tTone.Transport.loop = true;\r\n\r\n\t\tTone.Transport.scheduleRepeat((time) => this.repeat(time), \"4n\");\r\n\r\n\t}\r\n\r\n\tupdateProgress() {\r\n\t\tthis.props.onProgress(Tone.Transport.progress)\t\t\r\n\t}\r\n\r\n\tsetStep(step) {\r\n\t\tconsole.log(\"<SM>store step:\", step)\r\n\t\t\r\n\t\tthis.currentStep = step;\r\n\r\n\t\tif (this.state.isPlaying === true) {\r\n\t\t\tthis.executeStep(step)\r\n\t\t}\r\n\t\treturn this.currentStep.bpm\r\n\t}\r\n\r\n\texecuteStep = (step) => {\r\n\t\t\r\n\t\tthis.currentStep = step;\r\n\t\tconsole.log('current step set to ', this.currentStep)\r\n\t\t\r\n\t\tthis.setBpm(step.bpm)\r\n\t\tif (this.currentStep.playMode === playModes.BY_TIME) {\r\n\t\t\t\r\n\t\t\tTone.Transport.loopEnd = step.duration \t// seconds\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t\telse {\r\n//\t\t\tTone.Transport.loop = true\r\n\t\t\tTone.Transport.loopEnd = step.duration + \"m\"\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log('<SM>executeStep Tone.Transport.loopEnd',Tone.Transport.loopEnd)\r\n\t\tTone.Transport.start(\"+0.01\")\r\n\t\t\r\n\t}\r\n\r\n\trepeat = (time) => {\r\n\t\tconst idx = this.currentBeat++ % this.beatsPerStep;\r\n\t\t\r\n\t\tconst note = this.score[idx];\r\n\t\t\r\n\t\t// make sound\r\n\t\tthis.instrumentLib.getInstrument().triggerAttack(note, time);\r\n\t\t\r\n\t\t// draw stuff\r\n\t\tTone.Draw.schedule(() => this.onBeat(idx), time)\r\n\t}\r\n\r\n\tsetInstrument(instrumentKey) {\r\n\t\tthis.instrumentLib.setInstrument(instrumentKey);\r\n\t}\r\n\r\n\tgetCurrentInstrumentLabel() {\r\n\t\treturn this.instrumentLib.getInstrument().label;\r\n\t}\r\n\r\n\tsetBpm = bpm => {\r\n\t\tif (isNaN(bpm) || bpm <= 0 || bpm > 1000) {\r\n\t\t\tdebugger\r\n\t\t\tthrow new Error(\"Invalid BPM value: \" + bpm)\r\n\t\t}\r\n\t\tTone.Transport.bpm.value = bpm;\r\n\t};\r\n\r\n\tsetBeatsPerStep = newBps => {\r\n\t\tconsole.log(\"<SoundMachine>setBeatsPerStep\", newBps)\r\n\t\t\r\n\t \r\n\t\tthis.beatsPerStep = newBps;\r\n\t\t\r\n\t\t// remove if needed\r\n        while (this.score.length > newBps) {\r\n\t\t\tthis.score.pop();\r\n\t\t}\r\n\r\n\t\t// add if needed\r\n\t\twhile (this.score.length < newBps) {\r\n\t\t\tthis.score.push(accentTypes.ACCENT_1)\r\n\t\t}\r\n\t\t\r\n\t\tTone.Transport.timeSignature = newBps;//[newBps, 4];\r\n\t\tTone.Transport.loop = true;\r\n\r\n\t\t// this will refresh visualisation\r\n\t\tthis.setState({beatsPerStep: newBps})\r\n\t};\r\n\r\n\tonBeat = (currentBeat) => {\r\n\t\tthis.props.onBeat(currentBeat);\r\n\t}\r\n\r\n\tsetAccents(accentTypesArr) {\r\n\t\tthis.accents = accentTypesArr;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.score.length; i++) {\r\n\t\t\t// by default 2 will be the tick note\r\n\t\t\tlet note = this.accentNotes[accentTypes.ACCENT_2];\r\n\r\n\t\t\t// if accent for this step is specified set it here\r\n\t\t\tif (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_1\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_1];\r\n\t\t\t} else if (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_3\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_3];\r\n\t\t\t}\r\n\t\t\tthis.score[i] = note;\r\n\t\t}\r\n\t}\r\n\r\n\thandleStartStop = () => {\r\n\t\tconsole.log(\"<SM>HandleStartStop, state:\",Tone.Transport.state )\r\n\t\t\r\n\t\tif (Tone.Transport.state === 'started') {\r\n\t\t\tthis.stop();\r\n\t\t\t\r\n\t\t} else {\t\t\t\r\n\t\t\tthis.start(this.currentStep);\t\t\r\n\t\t}\t\t\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Button\r\n\t\t\t\toutline\r\n\t\t\t\tcolor=\"light\"\r\n\t\t\t\tonClick={() => this.handleStartStop()}\r\n\t\t\t\tblock\r\n\t\t\t\tactive={this.state.isPlaying}\r\n\t\t\t>\r\n\t\t\t\tStart / Stop\r\n\t\t\t</Button>\r\n\t\t\t\t\t \t\t\t\t\t\r\n\t\t\t// <div style={{width: '100%'}}>\r\n\t\t\t// \t{/* <div>Sound is {this.state.isPlaying === true ? \"playing\" : \"stopped\"}</div> */}\r\n\t\t\t// \t{/* <SimpleVis ref=\"vis\" beats={this.state.beatsPerStep}/> */}\r\n\t\t\t// </div>\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\t\tconsole.log('<SM>stop')\r\n\t\tthis.setState({ isPlaying: false });\r\n\t\tthis.currentBeat = 0;\r\n\t\tTone.Transport.stop();\r\n\t}\r\n\r\n\tstart(step) {\r\n\t\tconsole.log('<SM>Start')\r\n\t\tthis.setState({ isPlaying: true });\r\n\t\tthis.executeStep(step);\r\n\t}\r\n\r\n\tgetBpm = () => {\r\n\t\treturn Tone.Transport.bpm.value;\r\n\t};\r\n}\r\n\r\nexport default SoundMachine;\r\n\r\n\r\nSoundMachine.defaultProps = {\r\n\tbeatsPerStep: 4,\r\n\tonLoopEnd: function(time) {}, \r\n\tonToggle: function(state) {},\r\n\tonProgress:  function(progress) {}\r\n };","import React, { Component } from 'react';\r\nimport {Container} from 'reactstrap';\r\n\r\nclass SimpleProgress extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( <Container className=\"SimpleProgress\">\r\n            <div className=\"bar\" style={{width: this.props.value  + \"%\", display: 'block'}} />\r\n        </Container> );\r\n    }\r\n}\r\n \r\nexport default SimpleProgress;","const Utils = {\r\n    padTime: function(t) {\r\n\t\treturn t < 10 ? \"0\" + t : t;\r\n\t},\r\n\tformatTime: function(timeInSeconds) {\r\n\t\t//{this.leadingZeroCheck(now.getMinutes())}:{now.getSeconds()} --\r\n\t\tlet t = new Date(0, 0, 0, 0, 0, 0, 0);\r\n\t\tt.setSeconds(timeInSeconds);\r\n\t\tlet m = t.getMinutes();\r\n\t\tlet o = \"\";\r\n\t\tif (m !== 0) {\r\n\t\t\to += t.getMinutes(); //this.padTime(t.getMinutes());\r\n            o += \":\";\r\n            o += \"\" + Utils.padTime(t.getSeconds());\r\n        }\r\n        else {\r\n            o += t.getSeconds();\r\n        }\r\n\t\treturn o;\r\n    }\r\n}\r\n\r\nexport default Utils;","import React, { Component } from \"react\";\r\nimport { Badge } from \"reactstrap\";\r\nimport { playModes } from \"./PlayModes\";\r\nimport SimpleProgress from \"./SimpleProgress\";\r\nimport Utils from \"./Utils\";\r\n\r\nclass Planner extends Component {\r\n\tstate = {\r\n\t\tbars: [],\r\n\t\tstepProgress: 0,\r\n\t\tisPaused: false\r\n\t};\r\n\r\n\ttimer = {\r\n\t\tref: null,\r\n\t\tstartTime: null\r\n\t};\r\n\tstepsCounter = 0;\r\n\tstepProgressUpdateInterval = 1000 / 30; // 30 fps\r\n\r\n\tmakePlan(s) {\r\n\t\tlet segments = [];\r\n\r\n\t\tif (s.playMode === playModes.BY_BAR) {\r\n\t\t\tconst min = s.bpmRange[0];\r\n\t\t\tconst max = s.bpmRange[1];\r\n\t\t\tlet bpm = min;\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tlet segment = {\r\n\t\t\t\t\tbpm: bpm,\r\n\t\t\t\t\tduration: s.interval,\r\n\t\t\t\t\tend: s.interval \t// TODO <--- remove this \r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (s.playMode === playModes.BY_TIME) {\r\n\t\t\tconst min = s.bpmRange[0];\r\n\t\t\tconst max = s.bpmRange[1];\r\n\t\t\tlet bpm = min;\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tlet segment = {\r\n\t\t\t\t\ttime: i * s.interval,\r\n\t\t\t\t\tstart: i * s.interval,\r\n\t\t\t\t\tend: i * s.interval + s.interval,\r\n\t\t\t\t\tduration: s.interval,\r\n\t\t\t\t\tbpm: bpm\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t} else if (s.playMode === playModes.STABLE) {\r\n\t\t\tlet segment = {\r\n\t\t\t\ttime: Infinity, // TODO <--remove\r\n\t\t\t\tduration: Infinity,\r\n\t\t\t\tbpm: s.stableBpmSlider\r\n\t\t\t};\r\n\t\t\tsegments.push(segment);\r\n\t\t}\r\n\t\treturn segments;\r\n\t}\r\n\r\n\t// TODO: this is ugly\r\n\tsetPlan(uiStateObject) {\r\n\t\t// debugger\r\n\t\tconst plan = this.makePlan(uiStateObject);\r\n\r\n\t\t// console.log(\"<Planner>setPlan\", plan);\r\n\t\tvar bars = [];\r\n\r\n\t\tlet totalPlanTime = 0;\r\n\t\tconst playMode = uiStateObject.playMode;\r\n\t\tlet i = 0;\r\n\r\n\t\tswitch (uiStateObject.playMode) {\r\n\t\t\tcase playModes.BY_BAR:\r\n\t\t\t\tfor (i = 0; i < plan.length; i++) {\r\n\t\t\t\t\tconst bar = {\r\n\t\t\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\t\t\tduration: plan[i].end,\r\n\t\t\t\t\t\tend: plan[i].end,\r\n\t\t\t\t\t\tstep: this.stepsCounter++,\r\n\t\t\t\t\t\tplayMode: playModes.BY_BAR\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\ttotalPlanTime +=\r\n\t\t\t\t\t\t(60 / plan[i].bpm) *\r\n\t\t\t\t\t\tuiStateObject.beatsPerStep *\r\n\t\t\t\t\t\tplan[i].end;\r\n\t\t\t\t\tbars.push(bar);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase playModes.BY_TIME:\r\n\t\t\t\tfor (i = 0; i < plan.length; i++) {\r\n\t\t\t\t\tconst bar = {\r\n\t\t\t\t\t\ttime: plan[i].time,\r\n\t\t\t\t\t\tduration: plan[i].end - plan[i].time,\t// TODO: remove other unnecesary parameters\r\n\t\t\t\t\t\ttimeEnd: plan[i].end,\r\n\t\t\t\t\t\tsegmentDuration: plan[i].end - plan[i].time,\r\n\t\t\t\t\t\tstartTimeFormatted: Utils.formatTime(plan[i].start),\r\n\t\t\t\t\t\tendTimeFormatted: Utils.formatTime(plan[i].end),\r\n\t\t\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\t\t\tplayMode: playModes.BY_TIME,\r\n\t\t\t\t\t\tstep: this.stepsCounter++\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\ttotalPlanTime += plan[i].end;\r\n\r\n\t\t\t\t\tbars.push(bar);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase playModes.STABLE:\r\n\t\t\t\ttotalPlanTime = Infinity;\r\n\t\t\t\tbars.push({\r\n\t\t\t\t\tbpm: plan[0].bpm,\r\n\t\t\t\t\tduration: Infinity,\r\n\t\t\t\t\tplayMode: playModes.STABLE,\r\n\t\t\t\t\ttime: Infinity,\r\n\t\t\t\t\tstep: 0\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(\"plan set to play at {0} bpm\", plan[0].bpm);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// update to new state\r\n\t\tthis.stepsCounter = 0;\r\n\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({\r\n\t\t\t\ttotalPlanTime: totalPlanTime,\r\n\t\t\t\tcurrentStep: 0,\r\n\t\t\t\tbars: bars,\r\n\t\t\t\tplayMode: playMode\r\n\t\t\t}),\r\n\t\t\t() => this.planChanged()\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\t\t// console.log(\"lockBpm\", this.props.lockBpm);\r\n\t\tthis.pause();\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tsetStep(stepIdx) {\r\n\t\tthis.setState({currentStep: stepIdx}, this.stepChanged)\r\n\t}\r\n\r\n\r\n\tstepForward() {\r\n\t\tconsole.log(\"<Planner>stepForward()\")\r\n\t\t\r\n\t\t// check if we're not at the end of plan\r\n\t\tif (this.state.currentStep + 1 < this.state.bars.length) {\r\n\t\t\tthis.setStep(this.state.currentStep + 1)\r\n\t\t}\r\n\t}\r\n\r\n\tstepBackward() {\r\n\t\tconsole.log(\"<Planner>stepBackward()\")\r\n\r\n\r\n\t\tif (this.state.currentStep - 1 >= 0) {\r\n\t\t\tthis.setStep(this.state.currentStep - 1)\r\n\t\t}\r\n\t}\r\n\r\n\t// onInterval() {\r\n\t// \tthis.stepForward();\r\n\t// \t// if (this.timer) {\r\n\t// \t// \t// set time when we changed step to be able to render progress easily\r\n\t// \t// \tthis.timer.startTime = new Date();\r\n\t// \t// }\r\n\t// }\r\n\r\n\tstart() {\r\n\t\t\r\n\t}\r\n\r\n\tsetProgress(progress) {\r\n\t\tthis.setState({stepProgress: progress});\r\n\t}\r\n\t\r\n\t\r\n\tplanChanged = () => {\r\n\t\tconsole.log(\"<Planner>planChanged\");\r\n\t\tthis.stepChanged();\r\n\t};\r\n\r\n\tstepChanged() {\r\n\t\tconsole.log(\"<Planner>stepChanged\")\r\n\t\tconst step = this.getCurrentStep();\r\n\t\tthis.props.onStep(step);\r\n\t}\r\n\r\n\tresetStep() {\r\n\t\tconsole.log('<Planner> resetStep()')\r\n\t\tthis.setState({ currentStep: 0 }, this.stepChanged);\r\n\t\t// this.props.onAdvance(this.state.bars[0]);\r\n\t}\r\n\r\n\tgetCurrentStep() {\r\n\t\tif (this.state.currentStep >= this.state.bars.length) {\r\n\t\t\tthrow new Error(\"Trying to get step that doesn't exists\");\r\n\t\t}\r\n\t\treturn this.state.bars[this.state.currentStep];\r\n\t}\r\n\r\n\tonStepClick(idx) {\r\n\t\tthis.setState({ currentStep: idx }, this.stepChanged);\r\n\t}\r\n\r\n\tbarRender = b => {\r\n\t\tconst cls = this.state.currentStep === b.step ? \"current-step\" : \"\";\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => this.onStepClick(b.step)}\r\n\t\t\t\tclassName={\"step \" + cls}\r\n\t\t\t\tkey={\"key_\" + b.bpm}\r\n\t\t\t>\r\n\t\t\t\t{b.segmentDuration !== undefined\r\n\t\t\t\t\t? Utils.formatTime(b.segmentDuration.toFixed(0)) + \" \"\r\n\t\t\t\t\t: b.end + \" bars \"}\r\n\t\t\t\tat {b.bpm.toFixed(0)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tformatTime(date) {\r\n\t\treturn date.getMinutes() + \":\" + date.getSeconds();\r\n\t}\r\n \r\n\trender() {\r\n\t\tif (this.state.bars.length === 0) {\r\n\t\t\treturn <div>No plan</div>;\r\n\t\t}\r\n\t\telse if (this.state.bars[0].time === Infinity) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{/* Playing at constant speed {this.state.bars[0].bpm} bpm */}\r\n\t\t\t\t\t<h2><Badge color=\"dark\">BPM: {this.props.currentBpm}</Badge></h2>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Planner\">\r\n\t\t\t\t<h2><Badge color=\"dark\">BPM: {this.props.currentBpm}</Badge></h2>\r\n\t\t\t\t{/* <div>Next step in {this.state.stepProgress.toFixed(1)} seconds</div> */}\r\n\t\t\t\t<SimpleProgress value={this.state.stepProgress * 100} />\r\n\r\n\t\t\t\t{/* <Button onClick={() => this.togglePause()}>\r\n\t\t\t\t\tisPaused:\r\n\t\t\t\t\t{this.state.isPaused === true ? \"paused\" : \"normal\"}\r\n\t\t\t\t</Button> */}\r\n\r\n\t\t\t\t<div style={this.props.lockBpm ? { opacity: 0.5 } : {}}>\r\n\t\t\t\t\t{this.state.bars.map(bar => this.barRender(bar))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tTotal time: {Utils.formatTime(this.state.totalPlanTime)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Planner;\r\n\r\nPlanner.defaultProps = {\r\n\tplayMode: playModes.BY_BAR,\r\n\tcurrentStep: 0,\r\n\tonStep: function(step) {}\r\n};\r\n","import React from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { Badge  } from \"reactstrap\";\r\n// import {Container, Row, Col} from 'reactstrap'\r\n\r\nclass AdvancedSlider extends Slider {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t// onClick={this.onBadgeClick}\r\n\t\t\t\t\t\tclassName=\"d-i\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.value}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ height: \"30px\" }}>\r\n\t\t\t\t\t<div>{super.render()}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonBadgeClick() {\r\n\t\t// TODO attach editorInPlace\r\n\t}\r\n}\r\n\r\nexport default AdvancedSlider;\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nclass Accent extends Component {\r\n\tstate = {\r\n\t\tisCurrent: false\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={\"Accent \" + (this.state.isCurrent === true ? \"active\" : \"\")}  onClick={this.props.onClick}>\r\n\t\t\t\t<div className={\"type\" + this.props.type}></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\ttoggleCurrent() {\r\n\t\tthis.setState({isCurrent: !this.state.isCurrent})\r\n\t}\r\n}\r\n\r\nexport default Accent;\r\n","import React, { Component } from \"react\";\r\nimport { accentTypesArr } from \"./AccentTypes\";\r\nimport Accent from \"./Accent\";\r\n\r\nclass BarManager extends Component {\r\n\tstate = {\r\n\t\tbars: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state.bars = props.defaultValue;\r\n\t}\r\n\r\n\tsetAccents(accents, beatsPerStep) {\r\n\t\tthis.setState({ bars: accents }, this.props.onAfterChange);\r\n\t}\r\n\r\n\thandleCellClick(selected) {\r\n\t\tlet newBars = [...this.state.bars];\r\n\t\t\r\n\t\tconst type = newBars[selected];\r\n\t\t// set new type\r\n\t\tnewBars[selected] = accentTypesArr[(type + 1) % 3];;\r\n\t\t\r\n\t\tthis.setState({bars: newBars}, this.props.onAfterChange)\r\n\t}\r\n\r\n\tgetAccents() {\r\n\t\treturn this.state.bars;\r\n\t}\r\n\r\n\tsetActive(idx) {\r\n\t\t// unselect previous element\r\n\t\tif (this.lastActiveAccent) {\r\n\t\t\tthis.lastActiveAccent.toggleCurrent();\r\n\t\t\tthis.lastActiveAccent = undefined\r\n\t\t}\r\n\t\t// select new \r\n\t\tconst el = this.refs[\"accent\" + idx];\r\n\r\n\t\t// make sure it exits though\r\n\t\tif (el) {\r\n\t\t\tel.toggleCurrent();\r\n\t\t\tthis.lastActiveAccent = el;\r\n\t\t}\r\n\t}\r\n \r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{this.state.bars.map((bar, idx) => (\r\n\t\t\t\t\t<Accent ref={\"accent\" + idx}\r\n\t\t\t\t\t\ttype={bar}\r\n\t\t\t\t\t\tonClick={() => this.handleCellClick(idx)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BarManager;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n\tInput,\r\n\tButton,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tModalFooter\r\n} from \"reactstrap\";\r\n\r\nclass EditPresetModal extends Component {\r\n\tstate = {\r\n\t\tmodal: false,\r\n\t\tpreset: null,\r\n\t\tshowDelete: false\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmodal: false\r\n\t\t};\r\n\t\tthis.toggle = this.toggle.bind(this);\r\n\t}\r\n\r\n\ttoggle() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tmodal: !prevState.modal\r\n\t\t}));\r\n\t}\r\n\r\n\thandleSave() {\r\n\t\tconst preset = this.state.preset;\r\n\t\tconst title = this.state.preset.title;\r\n\t\tif (title && title.length > 0) {\r\n\t\t\tthis.props.onSave(title, preset);\r\n\t\t\tthis.toggle();\r\n\t\t}\r\n\t}\r\n\r\n\tedit(preset, showDelete) {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tpreset: preset,\r\n\t\t\t\tshowDelete: showDelete\r\n\t\t\t},\r\n\t\t\tthis.toggle\r\n\t\t);\r\n\t}\r\n\r\n\ttitleChanged(e) {\r\n\t\tconst newTitle = e.target.value;\r\n\t\tlet preset = { ...this.state.preset };\r\n\t\tpreset.title = newTitle;\r\n\t\tthis.setState({ preset });\r\n\t\t// this.setState()\r\n\t\t// this.setState({title: e.target.value}\r\n\t}\r\n\r\n\tonDeleteBtn() {\r\n\t\tthis.props.onDeleteBtn(this.state.preset);\r\n\t\tthis.toggle();\r\n\t}\r\n\r\n\trenderDelete() {\r\n\t\t \r\n\t\tif (this.state.showDelete === true) {\r\n\t\t\treturn(<Button color=\"warning\" onClick={() => this.onDeleteBtn()}>\r\n\t\t\t\tDelete\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button\r\n\t\t\t\t\toutline\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\tonClick={this.props.onSaveBtn}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave Preset\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tisOpen={this.state.modal}\r\n\t\t\t\t\ttoggle={this.toggle}\r\n\t\t\t\t\tclassName={this.props.className}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggle}>Save Preset</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tonChange={e => this.titleChanged(e)}\r\n\t\t\t\t\t\t\tdefaultValue={\r\n\t\t\t\t\t\t\t\t(this.state.preset &&\r\n\t\t\t\t\t\t\t\t\tthis.state.preset.title) ||\r\n\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"code\">\r\n\t\t\t\t\t\t\t{JSON.stringify(this.state.preset)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => this.handleSave()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggle}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{this.renderDelete()}\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditPresetModal;\r\n\r\n\r\nEditPresetModal.defaultProps = {\r\n\tonDeleteBtn: function(preset) {},\r\n\tonSave: function(title, preset) {},\r\n\tonSaveBtn: function(e, idx) {}\r\n };\r\n","import React, { Component } from \"react\";\r\nimport {Container, Row, Col } from \"reactstrap\";\r\nimport EditPresetModal from \"./EditPresetModal\"\r\n\r\nclass PresetsManager extends Component {\r\n\tstate = {\r\n\t\tshowDelete: [],\r\n\t\tshowEdit: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.userPresets = this.props.cookies.get('userPresets');\r\n\t\t\r\n\t\tthis.state.showDelete = this.userPresets ? Array(this.userPresets.length).fill(false) : []\r\n\t\tthis.state.showEdit = this.userPresets ? Array(this.userPresets.length).fill(false) : []\r\n\t}\r\n\t\r\n\tonPresetClick(preset) {\r\n\t\tthis.props.onSelect(preset);\r\n\t}\r\n\r\n\tonSavePreset(title, o) {\r\n\t\tconst preset = {title: title, ...o}\r\n\t\t\r\n\t\tlet userPresets = this.props.cookies.get('userPresets');\r\n\r\n\t\tif (!userPresets) {\r\n\t\t\tuserPresets = [];\r\n\t\t}\r\n\t\t\r\n\t\t// overwrite by title \r\n\t\tlet idx = -1;\r\n\r\n\t\tfor (let i = 0 ; i < userPresets.length; i++) {\r\n\t\t\tif (userPresets[i].title.toLowerCase() === title.toLowerCase()) {\r\n\t\t\t\tidx = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (idx < 0) {\r\n\t\t\tuserPresets.push(preset)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tuserPresets[idx] = preset;\r\n\t\t}\r\n\r\n\t\tthis.saveInCookie(userPresets);\r\n\t}\r\n\r\n\tsaveInCookie(presets) {\r\n\t\tthis.props.cookies.set('userPresets', JSON.stringify(presets),{ path: '/' });\r\n\t\tthis.userPresets = presets;\r\n\t}\r\n\r\n\tshowDeleteBtn(e, idx) {\r\n\t\tlet showDelete = {...this.state};\r\n\t\tshowDelete[idx] = true;\r\n\t\tthis.setState({showDelete});\r\n\t}\r\n\r\n\tshowEditBtn(e, idx) {\r\n\t\tlet showEdit = {...this.state};\r\n\t\tshowEdit[idx] = true;\r\n\t\tthis.setState({showEdit});\r\n\t}\r\n\thideEditBtn(e) {\r\n\t\tthis.setState({showEdit: false})\r\n\t}\r\n\r\n\tonPresetDelete(preset) {\r\n\t\tlet idx = this.userPresets.indexOf(preset) \r\n\t\tif (idx < 0) {\r\n\t\t\tthrow new Error(\"Selected preset \" +  preset.title + \" has not been found in the store\" )\r\n\t\t}\r\n\t\tthis.userPresets.splice(idx,1);\r\n\t\tthis.saveInCookie(this.userPresets);\r\n\t}\r\n\r\n\tonPresetEdit(e, idx) {\r\n\t\tconsole.log('preset EDIT',e,idx);\r\n\t\t/// prevent from triggerring onClick \r\n\t\te.stopPropagation()\r\n\t\tif (idx !== undefined) {\r\n\t\t\tthis.refs.presetEditor.edit(this.userPresets[idx], true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// new preset\r\n\t\t\tthis.refs.presetEditor.edit(this.props.preset)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst userPresets = this.props.cookies.cookies.userPresets ?  JSON.parse(  this.props.cookies.cookies.userPresets ) : [];\r\n\t\t// console.log('<PresetsManager>userPresets', userPresets)\r\n\t\treturn (\r\n\t\t\t<Container className=\"PresetsManager\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{this.props.presets.map((item, idx) => (\r\n\t\t\t\t\t\t<Col className=\"preset\"\r\n\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\tmy presets:\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{userPresets.map((item, idx) => (\r\n\t\t\t\t\t\t<Col className=\"preset\"\r\n\t\t\t\t\t\t\tonMouseEnter={(e) => this.showEditBtn(e, idx)}\r\n\t\t\t\t\t\t\tonMouseLeave={(e) => this.hideEditBtn(e, idx)}\r\n\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t\t<div class='x' style={{visibility: this.state.showEdit[idx] ? '' : 'hidden'}} onClick={(e) => this.onPresetEdit(e,idx)}>Edit</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<EditPresetModal ref='presetEditor' onDeleteBtn={(preset) => this.onPresetDelete(preset)} onSaveBtn={(e,idx) => this.onPresetEdit(e,idx)} onSave={(title, preset) => this.onSavePreset(title, preset)}/>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PresetsManager;\r\n\r\nPresetsManager.defaultProps = {\r\n\tonSelect: function(preset) {}\r\n };","import React, { Component } from 'react';\r\nimport {Container, Row} from 'reactstrap'\r\n\r\nclass SimplePanel extends Component {\r\n    render() { \r\n        return (\r\n            <Container className={\"pane \" + this.props.className}>\r\n\t\t\t\t<Row className=\"pane-title\">{this.props.title}</Row>\r\n\t\t\t\t<Row className=\"pane-body\">{this.props.children}</Row>\r\n            </Container>\r\n            );\r\n    }\r\n}\r\n \r\nexport default SimplePanel;\r\n\r\n\r\nSimplePanel.defaultProps = {\r\n    title: 'title',\r\n    children: [],\r\n    className: ''\r\n };","import React, { Component } from 'react';\r\nimport Slider from 'rc-slider'\r\nimport regression from 'regression';\r\nimport {Badge} from 'reactstrap'\r\n\r\n\r\nclass GeometricSlider extends Component {\r\n\tstate = {\r\n        value: undefined,\r\n        regression: undefined\r\n\t};\r\n\r\n    constructor(props) {\r\n        // TOneverDo \r\n        // currently it works only for min=1 only\r\n        super(props);\r\n        \r\n        const d = [[0,this.props.min],  [100, this.props.max]];\r\n        \r\n        this.state.regression = regression.exponential(d, {precision : 10 })\r\n        console.log('slider func', this.state.regression.string)\r\n\r\n        this.prepareMarks();\r\n\r\n        this.state.value = this.props.defaultValue;\r\n        \r\n    }\r\n\r\n    prepareMarks() {\r\n        this.marks = {};\r\n        \r\n        for (let i = 0; i < this.props.marksAt.length; i++) {\r\n            this.marks[  this.findX(this.props.marksAt[i]) ]  = this.props.marksAt[i];\r\n        }\r\n    }\r\n\r\n    makeMark(value) {\r\n        return {\r\n            label: this.props.markFormatter(\r\n                Math.floor(value)\r\n            ),\r\n            style: this.props.marksStyle\r\n        };\r\n    }\r\n\r\n    onChange(v) {\r\n        console.log('onChange', v)\r\n        const value =  Math.floor(this.state.regression.predict(v)[1]);\r\n        this.setState({value: value})\r\n        this.props.onChange(value)\r\n    }\r\n \r\n    findX(y) {\r\n        // y = e^bx ==> x = ln(y) / b\r\n        return Math.log(y)/this.state.regression.equation[1];\r\n    }\r\n    \r\n    setValue(v) {\r\n        this.setState({value: v})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            \t<div>\r\n\t\t\t\t\t<Badge  color=\"light\" onClick={this.onBadgeClick} className=\"d-i\">\r\n                        {this.props.badgeFormatter(this.state.value)}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n                <Slider ref=\"slider\" included={false} value={this.findX(this.state.value)} style={{height: '45px'}} onChange={(v) => this.onChange(v)} min={0} max={100} step={0.5} marks={this.marks}/>\r\n            </>\r\n        )\r\n\r\n    }\r\n    \r\n}\r\n \r\nexport default GeometricSlider;\r\n\r\nGeometricSlider.defaultProps = {\r\n    marksNum: 6,\r\n    marksStyle: {\r\n        color: '#ccc'\r\n    },\r\n    desc: '',\r\n    badgeFormatter: function(v) {return v;},\r\n    markFormatter: function(v) {return v;},\r\n    defaultValue: 50,\r\n    marksAt: []\r\n}","import React from \"react\";\r\nimport { Range } from \"rc-slider\";\r\nimport { Badge } from \"reactstrap\";\r\n\r\nclass AdvancedRange extends Range {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t// onClick={this.onBadgeClick}\r\n\t\t\t\t\t\tclassName=\"d-i\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.bounds[0]} - {this.state.bounds[1]}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n                <div style={{ height: \"30px\" }}>\r\n                {super.render()}\r\n                </div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AdvancedRange;\r\n","import React, { Component } from \"react\";\r\nimport SimplePanel from \"./SimplePanel\";\r\nimport {\r\n\tButtonGroup,\r\n\tButton,\r\n\tCollapse,\r\n\tButtonDropdown,\r\n\tDropdownToggle,\r\n\tDropdownItem,\r\n\tDropdownMenu\r\n} from \"reactstrap\";\r\nimport { playModes } from \"./PlayModes\";\r\nimport GeometricSlider from \"./GeometricSlider\";\r\nimport AdvancedRange from \"./AdvancedRange\"\r\nimport AdvancedSlider from \"./AdvancedSlider\"\r\nimport Utils from \"./Utils\";\r\n\r\nclass ModePanel extends Component {\r\n\tstate = {\r\n\t\tplayMode: playModes.BY_TIME,\r\n\t\tbpmStep: 10,\r\n\t\tbpmStepDropdownOpen: false,\r\n\t\tbyTimeInterval: 5,\r\n\t\tbyBarInterval: 2,\r\n\t\tstableBpmSlider: 300,\r\n\t\tbpmRange: [100,250]\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state.playMode = props.playMode;\r\n\t\tif (props.playMode === playModes.BY_BAR) {\r\n\t\t\tthis.state.byBarInterval = props.interval;\r\n\t\t} else {\r\n\t\t\tthis.state.byTimeInterval = props.interval;\r\n\t\t}\r\n\t\tthis.state.bpmStep = props.bpmStep;\r\n\t\tthis.state.bpmRange= props.bpmRange;\r\n\t\tconsole.log('<ModePanel> constructor')\r\n\t}\r\n\r\n\tonModeChange(newMode) {\r\n\t\tthis.setState({ playMode: newMode }, this.props.onAfterChange);\t\t\r\n\t}\r\n\r\n\tonBpmRangeChange(bpmRange) {\r\n\t\tconsole.log('<ModePanel>onBpmRangeChange('+bpmRange[0]+')')\r\n\t\tthis.setState({ bpmRange: bpmRange }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBpmSliderChange = (value) => {\r\n\t\tconsole.log('onBpmSliderChange',value)\r\n\t\tthis.setState({ stableBpmSlider: value }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBpmStepChange() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tbpmStepDropdownOpen: !prevState.bpmStepDropdownOpen\r\n\t\t}));\r\n\t}\r\n\r\n\tonBpmStepSelect(value) {\r\n\t\tthis.setState({ bpmStep: value }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tgetValue() {\r\n\t\tconst o = {\r\n\t\t\tplayMode: this.state.playMode,\r\n\t\t\tinterval:\r\n\t\t\t\tthis.state.playMode === playModes.BY_BAR\r\n\t\t\t\t\t? this.state.byBarInterval\r\n\t\t\t\t\t: this.state.byTimeInterval,\r\n\t\t\tbpmStep: this.state.bpmStep,\r\n\t\t\tbpmRange: this.state.playMode !== playModes.STABLE ? this.state.bpmRange : this.props.bpmRange,//this.refs.bpmRange.getValue() : null,\r\n\t\t\tstableBpmSlider: this.state.stableBpmSlider\r\n\t\t};\r\n\t\t// debugger\r\n\t\treturn o;\r\n\t}\r\n\r\n\tsetValue(o) {\r\n\t\tconsole.log(\"<ModePanel>setValue\", o)\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tplayMode: o.playMode,\r\n\t\t\t\tbpmStep: o.bpmStep,\r\n\t\t\t\tbyBarInterval:\r\n\t\t\t\t\to.playMode === playModes.BY_BAR\r\n\t\t\t\t\t\t? o.interval\r\n\t\t\t\t\t\t: this.state.byBarInterval,\r\n\t\t\t\tbyTimeInterval:\r\n\t\t\t\t\to.playMode === playModes.BY_TIME\r\n\t\t\t\t\t\t? o.interval\r\n\t\t\t\t\t\t: this.state.byTimeInterval,\r\n\t\t\t\tbpmRange: o.bpmRange,\r\n\t\t\t\tstableBpmSlider: o.stableBpmSlider || this.state.stableBpmSlider\r\n\t\t\t},\r\n\t\t\tthis.props.onAfterChange\r\n\t\t);\r\n\r\n\t\tconst slider =\r\n\t\t\to.playMode === playModes.BY_BAR\r\n\t\t\t\t? this.refs.byBarSlider\r\n\t\t\t\t: this.refs.byTimeSlider;\r\n\t\tslider.setValue(o.interval);\r\n\t\t\r\n\t\tthis.refs.bpmRange.setState({bounds: o.bpmRange})\r\n\t}\r\n\r\n\tonTimeIntervalChange(v) {\r\n\t\tthis.setState({ byTimeInterval: v }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBarIntervalChange(v) {\r\n\t\tthis.setState({ byBarInterval: v }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tbyBarFormatter(barsNum) {\r\n\t\tlet s = barsNum + \" \";\r\n\t\tif (barsNum === 1) {\r\n\t\t\ts += \"bar\";\r\n\t\t} else {\r\n\t\t\ts += \"bars\";\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\r\n\tbyTimeFormatter(time) {\r\n\t\tlet s = Utils.formatTime(time) + \" \";\r\n\r\n\t\tif (time === 1) {\r\n\t\t\ts += \"second\";\r\n\t\t} else if (time < 60) {\r\n\t\t\ts += \"seconds\";\r\n\t\t} else if (time < 120) {\r\n\t\t\ts += \"minute\";\r\n\t\t} else {\r\n\t\t\ts += \"minutes\";\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\r\n\trenderIncreaseBpmDropdown() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\tincrease speed by\r\n\t\t\t\t<ButtonDropdown\r\n\t\t\t\t\tstyle={{ margin: \"0px 5px\" }}\r\n\t\t\t\t\tisOpen={this.state.bpmStepDropdownOpen}\r\n\t\t\t\t\ttoggle={() => this.onBpmStepChange()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DropdownToggle caret size=\"sm\" outline color=\"light\">\r\n\t\t\t\t\t\t{this.state.bpmStep}\r\n\t\t\t\t\t</DropdownToggle>\r\n\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(5);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t5\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(10);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t10\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(20);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t20\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(30);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t30\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(50);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t50\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t</ButtonDropdown>\r\n\t\t\t\tbpm\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\trenderSpeedRange() {\r\n\t\t\r\n\t\t// console.log('renderSpeedRange', this.state.bpmRange[0])\r\n\t\treturn (<div>\r\n\t\t\tSpeed range\r\n\t\t\t<AdvancedRange\r\n\t\t\t\tref=\"bpmRange\"\r\n\t\t\t\tmin={30}\r\n\t\t\t\tmax={600}\r\n\t\t\t\tdefaultValue={[\r\n\t\t\t\t\tthis.state.bpmRange[0],\r\n\t\t\t\t\tthis.state.bpmRange[1]\r\n\t\t\t\t]}\r\n\t\t\t\tpushable={true}\r\n\t\t\t\tonAfterChange={(value) => this.onBpmRangeChange(value)}\r\n\t\t\t/>\r\n\t\t</div>);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SimplePanel className=\"ModePanel\" title=\"Mode\">\r\n\t\t\t\t<ButtonGroup size=\"sm\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.BY_BAR)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.BY_BAR}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBy bar\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.BY_TIME)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.BY_TIME}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBy time\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.STABLE)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.STABLE}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStable\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== playModes.STABLE}>\r\n\t\t\t\t{/* {this.state.playMode !== playModes.STABLE ? this.renderSpeedRange() : ''} */}\r\n\t\t\t\t\t{this.renderSpeedRange()}\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.BY_BAR}>\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tIncrease speed every\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byBarSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byBarInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={this.byBarFormatter}\r\n\t\t\t\t\t\t\tonChange={v => this.onBarIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={301}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 5, 10, 20, 50, 100, 300]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.BY_TIME}>\r\n\t\t\t\t \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tIncrease speed every\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byTimeSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byTimeInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={this.byTimeFormatter}\r\n\t\t\t\t\t\t\tmarkFormatter={Utils.formatTime}\r\n\t\t\t\t\t\t\tonChange={v => this.onTimeIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={600}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 10, 30, 60, 120, 240, 600]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t{this.state.playMode !== playModes.STABLE ? this.renderIncreaseBpmDropdown() : ''}\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.STABLE}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tChoose bpm\r\n\r\n\t\t\t\t\t\t<AdvancedSlider \r\n\t\t\t\t\t\t\t ref=\"stableBpmSlider\"\r\n\t\t\t\t\t\t\t included={false}\r\n\t\t\t\t\t\t\t min={10}\r\n\t\t\t\t\t\t\t max={600}\r\n\t\t\t\t\t\t\t marks={{30: '30', 100:'100', 200: '200', 300: '300', 400: '400',  500: '500', 600: '600'}}\r\n\t\t\t\t\t\t\t value={this.state.stableBpmSlider}\r\n\t\t\t\t\t\t\t onChange={this.onBpmSliderChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</SimplePanel>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModePanel;\r\n\r\nModePanel.defaultProps = {\r\n\tonAfterChange: null\r\n};\r\n","import {playModes} from \"./PlayModes\"\r\nimport { instruments } from \"./InstrumentLib\";\r\n\r\n\r\nexport const PresetsLib = [\r\n    {\r\n        title: \"4 beats every 4 bars\",\r\n        beatsPerStep: 4,\r\n        playMode: playModes.BY_BAR,\r\n        interval: 4,\r\n        bpmStep: 20,\r\n        bpmRange: [100, 400],\r\n        accents: [0, 1, 2, 1]\r\n    },\r\n    {\r\n        title: \"Jhaptal tabla\",\r\n        instrument: instruments.TABLA,\r\n\t\tbeatsPerStep: 10,\r\n\t\tbpmRange: [200, 400],\r\n        accents: [0, 1, 0, 0, 1, 2, 1, 0, 0, 1 ],\r\n        playMode: playModes.BY_TIME,\r\n        interval: 5*60,\r\n        bpmStep: 10\r\n    },\r\n    {title: \"Balkan 1\", \"bpmRange\":[241,400],\"beatsPerStep\":7,\"accents\":[0,1,2,0,1,2,1],\"instrument\":\"electrokit\",\"playMode\":\"by_bar\",\"interval\":20,\"bpmStep\":30},\r\n    {title: \"Balkan 2\", \"bpmRange\":[293,400],\"beatsPerStep\":7,\"accents\":[0,1,2,0,1,2,1],\"instrument\":\"tabla\",\"playMode\":\"by_bar\",\"interval\":300,\"bpmStep\":50},\r\n    {title: \"Groove 1\", \"bpmRange\":[222,262],\"beatsPerStep\":8,\"accents\":[0,2,1,2,1,0,1,1],\"instrument\":\"electrokit\",\"playMode\":\"by_time\",\"interval\":600,\"bpmStep\":50},\r\n    {title: \"Groove 2\", \"bpmRange\":[222,400],\"beatsPerStep\":8,\"accents\":[0,2,0,2,2,2,0,1],\"instrument\":\"electrokit\",\"playMode\":\"by_bar\",\"interval\":20,\"bpmStep\":50}\r\n];","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./components/SoundMachine\";\nimport SoundMachine from \"./components/SoundMachine\";\nimport Planner from \"./components/Planner\";\nimport \"rc-slider/assets/index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport {\n\tButtonDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem\n} from \"reactstrap\";\nimport AdvancedSlider from \"./components/AdvancedSlider\";\nimport BarManager from \"./components/BarManager\";\nimport { instruments } from \"./components/InstrumentLib\";\nimport PresetsManager from \"./components/PresetsManager\";\nimport ModePanel from \"./components/ModePanel\";\nimport { playModes } from \"./components/PlayModes\";\nimport { withCookies } from \"react-cookie\";\nimport { PresetsLib } from \"./components/PresetsLib\";\nimport { accentTypes } from \"./components/AccentTypes\";\nimport SimplePanel from \"./components/SimplePanel\";\n\n\nclass App extends Component {\n\tstate = {\n\t\tcurrentBpm: 60,\n\t\tinstrument: instruments.ELECTRO_KIT,\n\t\tinstrumentDropdownOpen: false,\n\t\tinstrumentDropdownLabel: \"Electro kit\", // bit messy, why would we hardcode this here, it ought to be taken from instrumentLib\n\t\tcycleDropdownOpen: false\n\t};\n\n\tcomponentDidMount() {\n\t\t// initialize accents\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getAccents());\n\t\t\n\t\t// keyboard listeners\n\t\tdocument.addEventListener(\"keydown\", e => this.handleKeyDown(e));\n\n\t\t// initialize with UI settings\n\t\tthis.refs.planner.setPlan(this.getUiState());\n\t\t// this.initialized = true;\n\t\tconsole.clear();\n\t}\n\n\thandleKeyDown(e) {\n\t\t// console.log(\"key\", e);\n\t\tswitch (e.keyCode) {\n\t\t\tcase 32: // space\n\t\t\t\t// e.preventDefault();\n\t\t\t\tthis.refs.sm.handleStartStop();\n\t\t\t\tbreak;\n\t\t\tcase 38: // Arrow up\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.state.currentBpm < 600) {\n\t\t\t\t\tthis.setBpm(this.state.currentBpm + 10);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 40: // arrow down\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.state.currentBpm > 10) {\n\t\t\t\t\tthis.setBpm(this.state.currentBpm - 10);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 37: // Arrow left\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.refs.planner.stepBackward();\n\t\t\t\tbreak;\n\t\t\tcase 39: // Arrow right\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.refs.planner.stepForward();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tonInstrumentSelect(newInstrument) {\n\t\tthis.refs.sm.setInstrument(newInstrument);\n\t\tconst label = this.refs.sm.getCurrentInstrumentLabel();\n\t\tconsole.log(\"setting new instrument. state.instrument\", newInstrument);\n\t\tthis.setState({\n\t\t\tinstrument: newInstrument,\n\t\t\tinstrumentDropdownLabel: label\n\t\t});\n\t}\n\n\trenderPlaybackPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">PLAYBACK</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"3\">Instrument</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\tisOpen={this.state.instrumentDropdownOpen}\n\t\t\t\t\t\t\ttoggle={() => this.onInstrumentChange()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DropdownToggle\n\t\t\t\t\t\t\t\tcaret\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\tcolor=\"light\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.instrumentDropdownLabel}\n\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tinstruments.TABLA\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tTabla\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tinstruments.ELECTRO_KIT\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tElectro Kit\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Beats per step</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"beatsPerStep\"\n\t\t\t\t\t\t\tmin={2}\n\t\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\t\tdefaultValue={this.props.beatsPerStep}\n\t\t\t\t\t\t\tonAfterChange={() => this.onBeatsPerStepChange()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Accents</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<BarManager\n\t\t\t\t\t\t\tonAfterChange={() => this.onAccentsChange()}\n\t\t\t\t\t\t\tref=\"barManager\"\n\t\t\t\t\t\t\tdefaultValue={this.props.accents}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col xs=\"3\">Playback</Col>\n\t\t\t\t\t<Col>One Time/LoopBack/Repeat</Col>\n\t\t\t\t</Row> */}\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonModePanelChanged() {\n\t\tconsole.log(\"<App>onModePanelChanged\")\n\t\tconst state = this.getUiState();\n\t\t\n\t\t// create new plan\n\t\tthis.refs.planner.setPlan(state);\n\t}\n\t\n\trenderRightPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPresetsPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonProgress(progress) {\n\t\tthis.refs.planner.setProgress(progress)\n\t}\n\n\trenderLeftPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title=\"Control\">\n\t\t\t\t\t\t\t<SoundMachine\n\t\t\t\t\t\t\t\tref=\"sm\"\n\t\t\t\t\t\t\t\tbeatsPerStep={this.state.beatsPerStep}\n\t\t\t\t\t\t\t\tonLoopEnd={() => this.onLoopEnd()}\n\t\t\t\t\t\t\t\tonBeat={beat => this.onBeat(beat)}\n\t\t\t\t\t\t\t\tinstrument={this.state.instrument}\n\t\t\t\t\t\t\t\t// onToggle={(state) => this.onSoundMachineToggle(state)}\n\t\t\t\t\t\t\t\tonProgress={(progress) => this.onProgress(progress)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</SimplePanel>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ModePanel\n\t\t\t\t\t\t\tref=\"modePanel\"\n\t\t\t\t\t\t\tplayMode={this.props.playMode}\n\t\t\t\t\t\t\tinterval={this.props.interval}\n\t\t\t\t\t\t\tbpmStep={this.props.bpmStep}\n\t\t\t\t\t\t\tbpmRange={this.props.bpmRange}\n\t\t\t\t\t\t\t//bpmStableSlider={this.props.bpmStableSlider}\n\t\t\t\t\t\t\tcurrentBpm={this.state.currentBpm}\n\t\t\t\t\t\t\t// defaultValue={{playMode: this.props.playMode, interval: this.props.interval, bpmStep: this.props.bpmStep}}\n\t\t\t\t\t\t\tonAfterChange={() => this.onModePanelChanged()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPlaybackPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col>{this.renderCyclePane()}</Col>\n\t\t\t\t</Row> */}\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderPresetsPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">Presets</Row>\n\t\t\t\t<PresetsManager\n\t\t\t\t\tref=\"presetsManager\"\n\t\t\t\t\tpreset={this.uiState}\n\t\t\t\t\tcookies={this.props.cookies}\n\t\t\t\t\tpresets={PresetsLib}\n\t\t\t\t\tonSelect={preset => this.onPresetSelect(preset)}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonPresetSelect(preset) {\n\t\tconsole.log(\"setting preset\", preset);\n\n\t\tthis.refs.beatsPerStep.setState({ value: preset.beatsPerStep });\n\n\t\tthis.refs.sm.setBeatsPerStep(preset.beatsPerStep);\n\t\t\n\t\tthis.onInstrumentSelect(preset.instrument || instruments.TABLA);\n\n\t\tthis.refs.barManager.setAccents(preset.accents, preset.beatsPerStep);\n\t\t\n\t\tthis.refs.modePanel.setValue(preset);\n\t\t\n\t}\n\n\trenderMidPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title={\"Plan\"}>\n\t\t\t\t\t\t<Planner\n\t\t\t\t\t\t\tcurrentBpm={this.state.currentBpm}\n\t\t\t\t\t\t\tonChange={() => this.onPlanChanged()}\n\t\t\t\t\t\t\tonStep={step => this.onPlanStep(step)}\n\t\t\t\t\t\t\tref=\"planner\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</SimplePanel>\n\t\t\t\t\t\t\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonLoopEnd() {\n\t\tthis.refs.planner.stepForward();\n\t}\n\n\tonBeat(idx) {\n\t\tthis.refs.barManager.setActive(idx);\n\t}\n\n\trender() {\n\t\t// set the title with current BPM\n\t\tdocument.title =\n\t\t\t\"BPM: \" + this.state.currentBpm.toFixed(0) + \" | SpeedTrainer\"\n\n\t\t// render everything else\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t\n\t\t\t\t<Container className=\"app-container\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* left pane with controls */}\n\t\t\t\t\t\t\t{this.renderLeftPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>{this.renderMidPane()}</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* right pane with examples and plan*/}\n\t\t\t\t\t\t\t{this.renderRightPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tonBeatsPerStepChange = () => {\n\t\t// plan doesn't change here, just the beats per step amount\n\t\tconst newBps = this.getUiState().beatsPerStep;\n\n\t\tif (newBps !== this.refs.sm.beatsPerStep) {\n\t\t\tconst accents = this.refs.barManager.getAccents();\n\n\t\t\twhile (accents.length > newBps) {\n\t\t\t\taccents.pop();\n\t\t\t}\n\t\t\twhile (accents.length < newBps) {\n\t\t\t\taccents.push(accentTypes.ACCENT_2);\n\t\t\t}\n\n\t\t\tthis.refs.sm.setBeatsPerStep(newBps);\n\t\t\tthis.refs.barManager.setAccents(accents);\n\t\t\tthis.setState({ beatsPerStep: newBps });\n\t\t}\n\t};\n\n\tonPlanStep(step) {\n\t\tconsole.log(\"<App>onPlanStep\", step)\n\t\t// this.setBpm(step.bpm);\n\n\t\tif (step) {\n\t\t\tthis.setState({currentBpm: this.refs.sm.setStep(step)});\n\t\t}\n\t\t\n\n\t\t// if (this.playMode === )\n\t\t// this.refs.sm.play(step.duration)\n\n\n\t}\n\n\t// onPlanAdvanced = newStep => {\n\t// \tconsole.log(\"<App>onPlanAdvanced()\", newStep);\n\t// \tif (newStep) {\n\t// \t\tconsole.log(\"<App>onPlanAdvanced() new step:\", newStep);\n\t// \t\tthis.setBpm(newStep.bpm);\n\t// \t} else {\n\t// \t\tconsole.log(\"<App>onPlanAdvanced() pause\");\n\t// \t\tthis.refs.planner.pause()\n\t// \t\tthis.refs.sm.stop();\n\t// \t}\n\t// };\n\n\tsetBpm = newBpm => {\n\t\tthis.setState({ currentBpm: newBpm });\n\t\tthis.refs.sm.setBpm(newBpm);\n\t};\n\t\n\tonInstrumentChange() {\n\t\tthis.setState(prevState => ({\n\t\t\tinstrumentDropdownOpen: !prevState.instrumentDropdownOpen\n\t\t}));\n\t}\n\n\t\n\tgetUiState() {\n\n\t\tconst s1 = {\n\t\t\tbeatsPerStep: this.refs.beatsPerStep.getValue(),\n\t\t\taccents: this.refs.barManager.getAccents(),\n\t\t\tinstrument: this.state.instrument\n\t\t};\n\n\t\tconst s2 = this.refs.modePanel.getValue();\n\n\t\tconst uiState = { ...s1, ...s2 };\n\t\t\n\t\tconsole.log(\"storing uiState\", this.uiState);\n\t\tthis.uiState = uiState;\n\t\t// HACK\n\t\tthis.uiState.instrument = this.state.instrument;\n\t\treturn uiState;\n\t}\n\n\tonAccentsChange() {\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getAccents());\n\t}\n}\n\nexport default withCookies(App);\n\n// this serves as default app settings\nApp.defaultProps = {\n\tplayMode: playModes.BY_BAR,\n\tinterval: 10,\n\tinstrument: instruments.TABLA,\n\tbpmStep: 50,\n\tbpmRange: [120, 560],\n\tbeatsPerStep: 4,\n\taccents: [0, 1, 2, 1]\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {CookiesProvider} from 'react-cookie'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(  <CookiesProvider> <App  /> </CookiesProvider> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}