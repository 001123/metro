{"version":3,"sources":["components/SoundMachineInstrument.jsx","components/AccentTypes.jsx","components/InstrumentLib.jsx","components/SoundMachine.jsx","components/Planner.jsx","components/AdvancedSlider.jsx","components/AdvancedRange.jsx","components/BarManager.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SoundMachineInstrument","props","_this","Object","classCallCheck","this","console","log","key","o","C3","samples","C#3","D3","possibleConstructorReturn","getPrototypeOf","call","baseUrl","Sampler","accentTypes","ACCENT_1","ACCENT_2","ACCENT_3","instruments","TABLA","ELECTRO_KIT","InstrumentLib","defaultInstrument","state","lib","currentInstrument","undefined","tabla","label","toMaster","electro","setInstrument","Error","Component","SoundMachine","beatsPerStep","accentNotes","instrumentLib","isPlaying","accents","part","setBpm","bpm","Tone","Transport","value","setBeatsPerStep","newBps","restart","sampler","getInstrument","stop","removeAll","dispose","score","i","push","Part","time","note","triggerAttackRelease","setAccents","timeSignature","loopEnd","loop","start","getBpm","instrument","_this2","Synth","Buffer","on","onBufferError","context","latencyHint","instrumentKey","accentTypesArr","length","at","react_default","a","createElement","setState","Planner","currentStep","bars","timer","ref","startTime","stepsCounter","planChanged","onChange","barRender","b","cls","step","onClick","onStepClick","className","formatTime","segmentDuration","toFixed","plan","bar","timeEnd","end","startTimeFormatted","endTimeFormatted","prevState","lockBpm","disposeTimer","resetStep","clearInterval","onAdvance","onInterval","bind","setInterval","Date","idx","_this3","_this4","Container","style","opacity","map","t","timeInSeconds","setSeconds","getMinutes","padTime","getSeconds","AdvancedSlider","get","prototype","Badge","onBadgeClick","Slider","AdvancedRange","bounds","Range","BarManager","renderCells","Button","size","color","getBtnColor","type","handleCellClick","prepareBars","defaultValue","amount","oldVal","getValue","toConsumableArray","onAfterChange","selected","newType","forceUpdate","ButtonGroup","App","timerRef","cycleLockType","SEGMENT","STEP","bpmRange","exerciseDuration","totalSteps","currentBpm","constantMode","instrumentDropdownOpen","cycleDropdownOpen","totalStepsChanged","s","getUiState","refs","planner","setPlan","makePlan","onBeatsPerStepChange","sm","barManager","setBarsAmount","exerciseDurationChanged","newPlan","onPlanAdvanced","newStep","newBpm","onPlanChanged","getCurrentBar","handleStartStop","newInstrument","newCycle","Row","Col","xs","components_AdvancedSlider","min","max","components_BarManager","onAccentsChange","components_AdvancedRange","pushable","onBpmRangeChange","ButtonDropdown","isOpen","toggle","onInstrumentChange","DropdownToggle","caret","DropdownMenu","DropdownItem","onInstrumentSelect","renderTempoPane","renderPlaybackPane","renderCyclePane","_this5","components_Planner","renderPlanPane","_this6","components_SoundMachine","renderLeftPane","renderRightPane","block","onLockBpmBtn","deltaBpm","segments","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ffd8753.chunk.js","sourcesContent":["import {Sampler} from 'tone'\r\n\r\n\r\nclass SoundMachineInstrument extends Sampler {\r\n\r\n    constructor(props) {\r\n        console.log('<SoundMachineInstrument>constructor', props.key)\r\n        var o = {\r\n            \"C3\" : props.samples[0],\r\n            \"C#3\" : props.samples[1],\r\n            \"D3\" : props.samples[2],\r\n        };\r\n        super(o,{\r\n            baseUrl: props.baseUrl || './audio/' + props.key + '/'\r\n        });\r\n        this.key = props.key;\r\n    }\r\n}\r\n\r\nexport default SoundMachineInstrument;\r\n\r\n ","export const accentTypes = {\r\n\tACCENT_1: 0,\r\n\tACCENT_2: 1,\r\n\tACCENT_3: 2\r\n};","import React, { Component } from \"react\";\r\nimport SoundMachineInstrument from \"./SoundMachineInstrument\"\r\n\r\nexport const instruments = {\r\n\tTABLA: \"tabla\",\r\n\tELECTRO_KIT: \"electrokit\"\r\n\t// ACOUSTIC_KIT: \"acoustic_kit\"\r\n};\r\n\r\nclass InstrumentLib extends Component {\r\n\tstate = {};\r\n    lib = {};\r\n    currentInstrument = undefined\r\n\r\n\r\n    constructor(defaultInstrument) {\r\n        super();\r\n    \r\n        //Tone.Buffer.on(\"load\", () => this.onBufferLoaded());\r\n\t\tvar tabla = new SoundMachineInstrument({\r\n            key: instruments.TABLA,\r\n            label: \"Tabla\",\r\n\t\t\tsamples: [\"dha-slide.wav\", \"dhin-slide.wav\", \"tin.wav\"]\r\n        }).toMaster();\r\n        \r\n        this.lib[ tabla.key ] = tabla;\r\n    \r\n        var electro = new SoundMachineInstrument({\r\n            key: instruments.ELECTRO_KIT,\r\n            label: 'Electronic Kit',\r\n\t\t\tsamples: [\"Kick.wav\", \"HiHat.wav\", \"Snare.wav\"]\r\n        }).toMaster();\r\n        \r\n        this.lib[ electro.key ] = electro;\r\n\r\n        this.setInstrument(defaultInstrument)\r\n        \r\n        console.log('<InstrumentLib>done constructor')\r\n    }\r\n\r\n    setInstrument(key) {\r\n        if (this.lib[key] === undefined) {\r\n            throw new Error(\"InstrumentLib has no such instrument with given key: \" + key)\r\n        }\r\n        this.currentInstrument = key;\r\n    }\r\n \r\n    getInstrument() {\r\n        if (this.lib[this.currentInstrument] === undefined) {\r\n            throw new Error(\"There is no such instrument in InstrumentLib: \" + this.currentInstrument)\r\n        }\r\n        return this.lib[this.currentInstrument];\r\n    }\r\n\r\n\t// render() {\r\n\t// \treturn <div />;\r\n\t// }\r\n}\r\nexport default InstrumentLib;\r\n","import React, { Component } from \"react\";\r\nimport Tone from \"tone\";\r\nimport SoundMachineInstrument from \"./SoundMachineInstrument\";\r\nimport { accentTypes } from \"./AccentTypes\";\r\nimport InstrumentLib, {instruments} from \"./InstrumentLib\";\r\n\r\nclass SoundMachine extends Component {\r\n\tbeatsPerStep = 3;\r\n\r\n\taccentNotes = [\"C3\", \"C#3\", \"D3\"]; // this stay in sync with AccentTypes\r\n\r\n\tinstrumentLib = undefined;\r\n\r\n\tstate = {\r\n\t\t//isInitialized: false,\r\n\t\t// instrument: instruments.ELECTRO_KIT,\r\n\t\t//beatsPerStep: 3,\r\n\t\tisPlaying: false\r\n\t};\r\n\r\n\taccents = [accentTypes.ACCENT_1]; // default with accent on first beat\r\n\tsamples = {};\r\n\r\n\tinstruments = {};\r\n\r\n\tpart = null;\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tif (!props.beatsPerStep) {\r\n\t\t\tthrow new Error(\"props.beatsPerStep is missing\");\r\n\t\t}\r\n\t\tthis.beatsPerStep = props.beatsPerStep;\r\n\t\t\r\n\t\t// init library\r\n\t\tthis.instrumentLib = new InstrumentLib(this.props.instrument)\r\n\t}\r\n\t\r\n\tonBufferError() {\r\n\t\tthrow new Error(\"Some buffers weren't found\")\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// reload/debug bell\r\n\t\tvar synth = new Tone.Synth().toMaster();\r\n\t\tsynth.triggerAttackRelease(\"A2\");\r\n\r\n\t\tTone.Buffer.on(\"error\", () => this.onBufferError());\r\n\r\n\r\n\t\t\r\n\t\tTone.context.latencyHint = \"playback\";\r\n\r\n\t\t// TODO: dispatch ready event, so we can enable UI elements\r\n\t}\r\n\r\n\tsetInstrument(instrumentKey) {\r\n\t\tconsole.log('<SoundMachine>new instrument', instrumentKey)\r\n\t\tthis.instrumentLib.setInstrument(instrumentKey);\r\n\t\tthis.restart();\r\n\t}\r\n\r\n\t\r\n\r\n\tsetBpm = bpm => {\r\n\t\tTone.Transport.bpm.value = bpm;\r\n\t};\r\n\r\n\tsetBeatsPerStep = newBps => {\r\n\t   \r\n        this.beatsPerStep = newBps;\r\n        \r\n        console.log(\"<SoundMachine>setBeatsPerStep\", newBps)\r\n        \r\n        this.restart()\r\n\r\n\t\t//     this.restart();\r\n\t\t// this.setState({beatsPerStep: newBeatsPerStep}, this.restart);\r\n\t};\r\n\r\n\trestart = () => {\r\n\t\t// check accents array so we know what to play\r\n\t\t// this.refreshAccentsArray()\r\n\r\n\t\tconsole.log(\"<SoundMachine>restart()\");\r\n\t\tvar sampler = this.instrumentLib.getInstrument();\r\n\t\tconsole.log('sampler.key', sampler.key)\r\n\t\t\r\n\t\tif (this.part) {\r\n\t\t\tconsole.log(\"clearing this.part\");\r\n\t\t\tthis.part.stop()\t\r\n\t\t\tthis.part.removeAll()\r\n\t\t\tthis.part.dispose();\r\n\t\t\t// console.log(\"disposed this.part\", this.part);\r\n\t\t\tthis.part = undefined; // maybe it will help with garbage collection?\r\n\t\t}\r\n\r\n\t\tlet score = [];\r\n\t\t// init with ACCENT_2 note, it will be changed in setAccents\r\n\t\tfor (let i = 0; i < this.beatsPerStep; i++) {\r\n\t\t\tscore.push([\"0:\" + i, this.accentNotes[accentTypes.ACCENT_2]]);\r\n\t\t}\r\n\r\n\t\t// console.log(\"new score \", score);\r\n\r\n\t\tthis.part = new Tone.Part(function(time, note) {\r\n\t\t\t// trigger note\r\n\t\t\tsampler.triggerAttackRelease(note, \"4n\", time);\r\n\t\t}, score);\r\n\r\n\t\t// setting accents\r\n\t\t// console.log(\"this.part\", this.part);\r\n\t\t\r\n\t\tthis.setAccents(this.accents);\r\n\r\n\t\t// set signature\r\n\t\tconsole.log('setting timeSignature',this.beatsPerStep)\r\n\t\tTone.Transport.timeSignature = [this.beatsPerStep, 4];\r\n\t\t// this.part.humanize = true; // this one is interesting\r\n\t\tthis.part.loopEnd = \"1m\"; // + this.state.beatsPerStep;\r\n\t\tthis.part.loop = true;\r\n\r\n\t\t// if (this.state.isPlaying === true ) {\r\n\t\t\tconsole.log('transpor was playing so play part')\r\n\t\t\tthis.part.start(0);\r\n\t\t// }\r\n\t};\r\n\r\n\t// setAccents(accentIdxArray) {\r\n\t//     this.accents = accentIdxArray;\r\n\t//     for (let i = 0 ; i < this.part.length; i++) {\r\n\t//         this.part.at(\"0:\"+i, this.accents.indexOf(i) < 0 ? this.tickNote: this.accentNote);\r\n\t//     }\r\n\t// }\r\n \r\n\tsetAccents(accentTypesArr) {\r\n\t\t// if (accentTypesArr.length != this.part.length) {\r\n\t\t//     throw new Error(\"accentTypes has incorrect number of elements \" + accentTypesArr.length + \" vs \" + this.part.length)\r\n\t\t// }\r\n\t\tthis.accents = accentTypesArr;\r\n\r\n\t\tfor (let i = 0; i < this.part.length; i++) {\r\n\t\t\t// by default 2 will be the tick note\r\n\t\t\tlet note = this.accentNotes[accentTypes.ACCENT_2];\r\n\r\n\t\t\t// if accent for this step is specified set it here\r\n\t\t\tif (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_1\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_1];\r\n\t\t\t} else if (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_3\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_3];\r\n\t\t\t}\r\n\t\t\tthis.part.at(\"0:\" + i, note);\r\n\t\t\t// this.part.at(\"0:\"+i, this.accents.indexOf(i) < 0 ? this.tickNote: this.accentNote);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tSound is {this.state.isPlaying === true ? \"playing\" : \"stopped\"}\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// toggle() {\r\n\t//     if (Tone.Transport.state === \"started\") {\r\n\t//         this.stop();\r\n\t//     }\r\n\t//     else {\r\n\t//         this.start()\r\n\t//     }\r\n\t// }\r\n\r\n\tstop() {\r\n\t\tconsole.log(\"<SoundMachine>stop()\");\r\n\t\tthis.setState({ isPlaying: false });\r\n\t\t//Tone.Transport.stop();\r\n\t\tTone.Transport.stop();\r\n\t\t// if (this.part) {\r\n\t\t// \tthis.part.stop();\r\n\t\t// }\r\n\t}\r\n\r\n\tstart() {\r\n\t\tconsole.log(\"<SoundMachine>start()\");\r\n\r\n\t\t// Tone.Transport.start(\"+0.05\");\r\n\t\tthis.setState({ isPlaying: true });\r\n\t\t\r\n\t\tTone.Transport.start(\"+0.1\");\r\n\t\tthis.restart();\r\n\t\t// if (this.part) {\r\n\t\t// \tthis.part.start();\r\n\t\t// }\r\n\t\t// if (this.part) {\r\n\t\t// \tthis.part.start(\"+0.1\");\r\n\t\t// }\r\n\t}\r\n\r\n\tgetBpm = () => {\r\n\t\treturn Tone.Transport.bpm.value;\r\n\t};\r\n}\r\n\r\nexport default SoundMachine;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nclass Planner extends Component {\r\n\tstate = {\r\n\t\tcurrentStep: 0,\r\n\t\tbars: []\r\n\t};\r\n\r\n\ttimer = {\r\n\t\tref: null,\r\n\t\tstartTime: null\r\n\t};\r\n\tstepsCounter = 0;\r\n\r\n\tsetPlan(plan) {\r\n\t\tconsole.log(\"<Planner>setPlan\", plan);\r\n\t\tvar bars = [];\r\n\r\n\t\tfor (var i = 0; i < plan.length; i++) {\r\n\t\t\tconst bar = {\r\n\t\t\t\ttime: plan[i].time,\r\n\t\t\t\ttimeEnd: plan[i].end,\r\n\t\t\t\tsegmentDuration: plan[i].end - plan[i].time,\r\n\t\t\t\tstartTimeFormatted: this.formatTime(plan[i].start),\r\n\t\t\t\tendTimeFormatted: this.formatTime(plan[i].end),\r\n\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\tstep: this.stepsCounter++\r\n\t\t\t};\r\n\r\n\t\t\tbars.push(bar);\r\n\t\t}\r\n\r\n\t\t// update to new state\r\n\t\tthis.stepsCounter = 0;\r\n\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({\r\n\t\t\t\tcurrentStep: 0,\r\n\t\t\t\tbars: bars\r\n\t\t\t}),\r\n\t\t\t() => this.planChanged()\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\t\tconsole.log(\"lockBpm\", this.props.lockBpm);\r\n\t\tif (this.timer) {\r\n\t\t\t// clear timer\r\n\t\t\tthis.disposeTimer(this.timer.ref);\r\n\t\t\t// reset to first step\r\n\t\t}\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tdisposeTimer(ref) {\r\n\t\tif (this.timer.ref !== ref) {\r\n\t\t\tthrow new Error(\"Wront timer.ref to dispose\");\r\n\t\t}\r\n\t\tconsole.log(\"<Planner>clearing interval, \", this.timer.ref);\r\n\t\tclearInterval(this.timer.ref);\r\n\t\tthis.timer.ref = undefined;\r\n\t\tthis.timer.startTime = null;\r\n\t\tthis.timer = undefined;\r\n\t}\r\n\r\n\tonInterval() {\r\n\t\tconsole.log(\"<Planner>onInterval\");\r\n\t\tif (this.props.lockBpm) {\r\n\t\t\tconsole.log(\"<Planner>isLocked == true so don't advance anything\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar currentStep = this.state.currentStep;\r\n\r\n\t\t// check if we're not at the end of plan\r\n\t\tif (currentStep + 1 >= this.state.bars.length) {\r\n\t\t\tconsole.log(\"no more steps, please stop()\");\r\n\t\t\tthis.disposeTimer(this.timer.ref);\r\n\t\t\tthis.props.onAdvance(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconsole.log(\"<Planner>onInterval\", this.state.currentStep + 1);\r\n\t\t// console.log('advancing step to' , currentStep + 1)\r\n\t\tthis.setState({ currentStep: currentStep + 1 });\r\n\t\t// console.log('returning' , this.state.currentStep)\r\n\t\tthis.props.onAdvance(this.state.bars[this.state.currentStep]);\r\n\t}\r\n\r\n\tstart() {\r\n\t\tconsole.log(\"<Planner>start()\");\r\n\t\t// debugger\r\n\t\t// make sure we dispose any timer that's currently set\r\n\t\tif (this.timer) {\r\n\t\t\t// console.log(\"<Planner>startTimer() old timer disposed\");\r\n\t\t\tclearInterval(this.timer.ref);\r\n\t\t\tthis.timer.ref = undefined;\r\n\t\t\tthis.timer.startTime = null;\r\n\t\t\tthis.resetStep();\r\n\t\t}\r\n\r\n\t\t// calc segment length between steps and set timer for such\r\n\t\tconst time =\r\n\t\t\t1000 *\r\n\t\t\t(this.state.bars[this.state.currentStep].timeEnd -\r\n\t\t\t\tthis.state.bars[this.state.currentStep].time);\r\n\t\tvar onInterval = this.onInterval.bind(this);\r\n\t\tconsole.log(\"setting interval\", time);\r\n\r\n\t\tthis.timer = {\r\n\t\t\tref: setInterval(onInterval, time),\r\n\t\t\tstartTime: new Date()\r\n\t\t};\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.stepsCounter = 0;\r\n\t\tthis.setState({ bars: [], currentStep: 0 });\r\n\t\tthis.planChanged();\r\n\t}\r\n\r\n\tplanChanged = () => {\r\n\t\tconsole.log(\"<Planner>planChanged\");\r\n\t\tif (this.props.onChange) {\r\n\t\t\t// console.log(\"<Planner>fire onChange\");\r\n\t\t\tthis.props.onChange();\r\n\t\t}\r\n\t};\r\n\r\n\tresetStep() {\r\n\t\tthis.setState({ currentStep: 0 });\r\n\t\tthis.props.onAdvance(this.state.bars[0]);\r\n\t}\r\n\r\n\tgetCurrentBar() {\r\n\t\tif (this.state.currentStep >= this.state.bars.length) {\r\n\t\t\tthrow new Error(\"Trying to get step that doesn't exists\");\r\n\t\t}\r\n\t\treturn this.state.bars[this.state.currentStep];\r\n\t}\r\n\r\n\tonStepClick(idx) {\r\n\t\tthis.setState({currentStep: idx},\r\n\t\t\t() => this.props.onAdvance(this.state.bars[this.state.currentStep])\r\n\t\t)\r\n\t\t\r\n\t}\r\n\r\n\tbarRender = b => {\r\n\t\tconst cls = this.state.currentStep === b.step ? \"current-step\" : \"\";\r\n\t\treturn (\r\n\t\t\t<div onClick={() => this.onStepClick(b.step)} className={\"step \" + cls} key={\"key_\" + b.bpm}>\r\n\t\t\t\t{this.formatTime(b.segmentDuration.toFixed(0))} at{\" \"}\r\n\t\t\t\t{b.bpm.toFixed(0)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\t// console.log(\"<Planner> render\");\r\n\t\t// don't doo much if no plan yet\r\n\t\tif (this.state.bars.length === 0) {\r\n\t\t\treturn <div>No plan</div>;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Container className=\"Planner\">\r\n\t\t\t\t<div style={this.props.lockBpm ? { opacity: 0.5 } : {}}>\r\n\t\t\t\t\t{this.state.bars.map(bar => this.barRender(bar))}\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n\r\n\tpadTime(t) {\r\n\t\treturn t < 10 ? \"0\" + t : t;\r\n\t}\r\n\r\n\tformatTime(timeInSeconds) {\r\n\t\t//{this.leadingZeroCheck(now.getMinutes())}:{now.getSeconds()} --\r\n\t\tlet t = new Date(0, 0, 0, 0, 0, 0, 0);\r\n\t\tt.setSeconds(timeInSeconds);\r\n\t\tlet m = t.getMinutes();\r\n\t\tlet o = \"\";\r\n\t\tif (m !== 0) {\r\n\t\t\to += t.getMinutes(); //this.padTime(t.getMinutes());\r\n\t\t\to += \":\";\r\n\t\t}\r\n\t\to += \"\" + this.padTime(t.getSeconds()) + \"s\";\r\n\t\treturn o;\r\n\t}\r\n}\r\n\r\nexport default Planner;\r\n","import React from 'react'\r\nimport Slider from 'rc-slider'\r\nimport {Badge} from 'reactstrap'\r\n// import {Container, Row, Col} from 'reactstrap'\r\n\r\nclass AdvancedSlider extends Slider {\r\n \r\n    // constructor(props) {\r\n    //     super(props)\r\n    //     // if (props.renderVal) {\r\n    //     //     this.renderVal = props.renderVal\r\n    //     // }\r\n    \r\n    // }\r\n    render() { \r\n        return (\r\n            <div>\r\n                {super.render()}\r\n                <div><Badge  onClick={this.onBadgeClick} className=\"d-i\">{this.state.value}</Badge></div>\r\n            </div>\r\n            );\r\n    }\r\n\r\n    onBadgeClick() {\r\n        // attach editorInPlace\r\n    }\r\n \r\n}\r\n\r\nexport default AdvancedSlider\r\n","import React from 'react'\r\nimport { Range } from 'rc-slider'\r\nimport {Badge} from 'reactstrap'\r\n\r\nclass AdvancedRange extends Range {\r\n    render() { \r\n        return (<div>\r\n            {super.render()}\r\n            <Badge onClick={this.onBadgeClick} className=\"d-i\">{this.state.bounds[0]} - {this.state.bounds[1]}</Badge>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default AdvancedRange;\r\n","import React, { Component } from \"react\";\r\nimport { Button, ButtonGroup } from \"reactstrap\";\r\nimport { accentTypes } from \"./AccentTypes\";\r\n\r\n\r\nclass BarManager extends Component {\r\n\r\n\tstate = {\r\n\t\tbars: []\r\n\t};\r\n\r\n\r\n\taccents = [accentTypes.ACCENT_1,accentTypes.ACCENT_2,accentTypes.ACCENT_3];\r\n\tconstructor(props) {\r\n\t\tsuper(props);\t\t\r\n\t\tthis.state.bars = this.prepareBars(props.defaultValue);\r\n\t\t\r\n\t\t// by def set accent on first beat\r\n\t\tthis.state.bars[0].type = accentTypes.ACCENT_1;\r\n\t}\r\n\r\n\tprepareBars(amount) {\r\n\t\t\r\n\t\tlet oldVal = this.getValue();\r\n\r\n\t\tlet  bars = [];\r\n\t\tfor (let i = 0; i < amount; i++) {\r\n\t\t\tbars.push({\r\n\t\t\t\tidx: i,\r\n\t\t\t\ttype: (oldVal[i]  !== undefined) ? oldVal[i] : accentTypes.ACCENT_2\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn bars;\r\n\t}\r\n\r\n\tsetBarsAmount(amount) {\r\n\t\tlet bars = this.prepareBars(amount);\r\n\t\t// set state and send onAfterChange once updated as they have changed surely (at least the amount)\r\n\t\tthis.setState({ bars: [...bars] },  this.props.onAfterChange);\r\n\t}\r\n\r\n\thandleCellClick(selected) {\r\n\t\t// this.bars[selected]\r\n\t\tlet  bar = this.state.bars[selected]\r\n\t\t\r\n\t\tconst type = bar.type;\r\n\r\n\t\tlet newType = this.accents[(type + 1 ) % 3];\r\n\t\t\r\n\t\tthis.state.bars[selected].type = newType;\r\n\t\tthis.forceUpdate();\r\n\r\n\t\t/// hmm good patern to update arrays in state, doesn't want to lose it \r\n\t\t// const index = this.state.accentBars.indexOf(selected);\r\n\t\t// if (index < 0) {\r\n\t\t// \tthis.state.accentBars.push(selected);\r\n\t\t// } else {\r\n\t\t// \tthis.state.accentBars.splice(index, 1);\r\n\t\t// }\r\n\t\t// this.setState({ accentBars: [...this.state.accentBars] });\r\n\t}\r\n\r\n\tgetValue() {\r\n\t\tvar bars = []\r\n\t\tfor (let i = 0 ; i < this.state.bars.length ; i ++) {\r\n\t\t\tbars.push(this.state.bars[i].type)\r\n\t\t}\r\n\t\treturn bars;\r\n\t}\r\n\r\n\tgetBtnColor(type) {\r\n\t\tvar color;\r\n\t\tswitch (type) {\r\n\t\t\tcase accentTypes.ACCENT_2:\r\n\t\t\t\tcolor = \"secondary\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase accentTypes.ACCENT_3:\r\n\t\t\t\tcolor = \"warning\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tcolor = \"primary\"\r\n\t\t}\r\n\t\treturn color;\r\n\t}\r\n\trenderCells = bars => {\r\n\t\treturn bars.map(bar => (\r\n\t\t\t<Button\r\n\t\t\t\tsize=\"sm\"\r\n\t\t\t\t color={this.getBtnColor(bar.type)}\r\n\t\t\t\t// className=\"btn-state-1\"\r\n\t\t\t\tkey={\"barkey_\" + bar.idx}\r\n\t\t\t\tonClick={() => this.handleCellClick(bar.idx)}\r\n\t\t\t\t// active={!this.state.accentBars.includes(bar)}\r\n\t\t\t>\r\n\t\t\t\t{bar.idx + 1}\r\n\t\t\t</Button>\r\n\t\t));\r\n\t};\r\n\r\n\trender() {\r\n\t\t// dunno how this works but it does the job bubbling up the click event\r\n\t\tconst { onAfterChange } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<ButtonGroup onClick={onAfterChange}>\r\n\t\t\t\t{this.renderCells(this.state.bars)}\r\n\t\t\t</ButtonGroup>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BarManager;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./components/SoundMachine\";\nimport SoundMachine from \"./components/SoundMachine\";\nimport Planner from \"./components/Planner\";\nimport \"rc-slider/assets/index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport {\n\tButtonDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem\n} from \"reactstrap\";\nimport AdvancedSlider from \"./components/AdvancedSlider\";\nimport AdvancedRange from \"./components/AdvancedRange\";\nimport BarManager from \"./components/BarManager\";\nimport {instruments} from \"./components/InstrumentLib\"\n\n\nclass App extends Component {\n\ttimer = {\n\t\ttimerRef: null,\n\t\tstartTime: null\n\t};\n\n\n\t\n\t// based on this value we will wait till segment or steps are finished to advance speed\n\tcycleLockType = {\n\t\tSEGMENT: \"segment\",\n\t\tSTEP: \"step\"\n\t};\n\n\tstate = {\n\t\tbpmRange: [200, 400],\n\t\texerciseDuration: 1 * 60, // 1 minute\n\t\t//segmentDuration: 5, // 5 seconds\n\t\ttotalSteps: 10, // 10 steps\n\t\tbeatsPerStep: 4,\n\t\tcurrentBpm: 60,\n\t\tinstrument: instruments.ELECTRO_KIT,\n\t\tconstantMode: this.cycleLockType.STEP,\n    \tinstrumentDropdownOpen: false,\n\t\tcycleDropdownOpen: false,\n\t\tlockBpm: false\n\t\t\n\t};\n\n\tcomponentDidMount() {\n\t\t// initialize with UI settings\n\t\tthis.refs.planner.setPlan(this.makePlan(this.getUiState()));\n\t\t// TODO for layout debug\n\t\t//this.settingsChanged();\n\t}\n\tonInstrumentSelect(newInstrument) {\n\n\t\tthis.refs.sm.setInstrument(newInstrument);\n\t\t\n\t\t// let instrument = this.refs.sm.getInstrument();\n\t\t\n\t\tthis.setState({ instrument: newInstrument });\n\t}\n  \n  onCycleSelect(newCycle) {\n    this.setState({constantMode: newCycle});\n  }\n\n\trenderCyclePane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">CYCLE</Row>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col xs=\"3\">Constant</Col>\n\t\t\t\t\t<Col>\n          <ButtonDropdown\n\t\t\t\t\t\t\t\t\t\t\tisOpen={\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.cycleDropdownOpen\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\ttoggle={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.onCycleLockChange()\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownToggle caret>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.constantMode}\n\t\t\t\t\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onCycleSelect(this.cycleLockType.SEGMENT);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tTime\n\t\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onCycleSelect(this.cycleLockType.STEP);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tStep\n\t\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t</ButtonDropdown>\n          \n          </Col>\n\t\t\t\t</Row> */}\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Total time (min)</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"exerciseDuration\"\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmax={30}\n\t\t\t\t\t\t\tdefaultValue={this.state.exerciseDuration / 60}\n\t\t\t\t\t\t\tonAfterChange={() =>\n\t\t\t\t\t\t\t\tthis.exerciseDurationChanged()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Beats per step</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"beatsPerStep\"\n\t\t\t\t\t\t\tmin={2}\n\t\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\t\tdefaultValue={this.state.beatsPerStep}\n\t\t\t\t\t\t\tonAfterChange={() => this.onBeatsPerStepChange()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Number of steps</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"totalSteps\"\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmax={60}\n\t\t\t\t\t\t\tdefaultValue={this.state.totalSteps}\n\t\t\t\t\t\t\tonAfterChange={() =>\n\t\t\t\t\t\t\t\tthis.totalStepsChanged()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Accents</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<BarManager\n\t\t\t\t\t\t\tonAfterChange={() => this.onAccentsChange()}\n\t\t\t\t\t\t\tref=\"barManager\"\n\t\t\t\t\t\t\tdefaultValue={this.state.beatsPerStep}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderTempoPane() {\n\t\t// debugger\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">TEMPO</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"3\">BPM</Col>\n\t\t\t\t\t\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedRange\n\t\t\t\t\t\t\tref=\"bpmRange\"\n\t\t\t\t\t\t\tmin={30}\n\t\t\t\t\t\t\tmax={600}\n\t\t\t\t\t\t\tdefaultValue={[\n\t\t\t\t\t\t\t\tthis.state.bpmRange[0],\n\t\t\t\t\t\t\t\tthis.state.bpmRange[1]\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tpushable={true}\n\t\t\t\t\t\t\tonAfterChange={() => this.onBpmRangeChange()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\n\trenderPlaybackPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">PLAYBACK</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"3\">Instrument</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\tisOpen={this.state.instrumentDropdownOpen}\n\t\t\t\t\t\t\ttoggle={() => this.onInstrumentChange()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DropdownToggle caret>\n\t\t\t\t\t\t\t\t{this.state.instrument}\n\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tinstruments.TABLA\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tTabla\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tinstruments.ELECTRO_KIT\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tElectro\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col xs=\"3\">Playback</Col>\n\t\t\t\t\t<Col>One Time/LoopBack/Repeat</Col>\n\t\t\t\t</Row> */}\n\t\t\t</Container>\n\t\t);\n\t}\n\trenderLeftPane() {\n\t\treturn (\n\t\t\t<Container className=\"side-panel\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderTempoPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPlaybackPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderCyclePane()}</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderExamplesPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">EXAMPLES</Row>\n\t\t\t\t<Row>Not implemented</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderPlanPane() {\n\t\treturn (\n\t\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">Plan</Row>\n\t\t\t\t<Row><Planner\n\t\t\t\t\tconstantMode = { this.state.constantMode }\n\t\t\t\t\tlockBpm = { this.state.lockBpm }\n\t\t\t\t\t//plan={this.makePlan(this.state)}\n\t\t\t\t\tonChange={() => this.onPlanChanged()}\n\t\t\t\t\tonAdvance={(currentStep) => this.onPlanAdvanced(currentStep)}\n\t\t\t\t\tref=\"planner\"\n\t\t\t\t/></Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\trenderRightPane() {\n\t\treturn (\n\t\t\t<Container className=\"side-panel\">\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col>{this.renderExamplesPane()}</Col>\n\t\t\t\t</Row> */}\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Container className=\"pane\">\n\t\t\t\t\t\t\t<Row className=\"pane-title\">\n\t\t\t\t\t\t\t\tBPM\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row className={this.state.lockBpm ? \"locked\" : \"\"}>\n\t\t\t\t\t\t\t\t<Col> {this.state.currentBpm.toFixed(0)}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPlanPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<SoundMachine ref=\"sm\" beatsPerStep={this.state.beatsPerStep} instrument={this.state.instrument}/>\n\t\t\t\t<Container>\n\t\t\t\t\t{/* outer table */}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* left pane with controls */}\n\t\t\t\t\t\t\t{this.renderLeftPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm=\"4\">\n\t\t\t\t\t\t\t{/* right pane with examples and plan*/}\n\t\t\t\t\t\t\t{this.renderRightPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n          <Row>\n            <Col>\n            <Button onClick={() => this.handleStartStop()} block>\n              Start / Stop\n            </Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col >\n           \t <Button onClick={() => this.onLockBpmBtn()}>\n              Lock BPM\n            </Button>\n            </Col>\n          </Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tonLockBpmBtn() {\n\t\tthis.setState({lockBpm: !this.state.lockBpm});\n\t}\n  \n  totalStepsChanged = () => {    \n\t\tconst s = this.getUiState();\n\t\tif (s.totalSteps !== this.state.totalSteps) {\n\t\t\tthis.refs.planner.setPlan(this.makePlan(s));\n\t\t}\n\t}\n\n\tonBeatsPerStepChange = () => {\n\t\t// plan doesn't change here, just the beats per step amount\n\t\t// console.log(\"<App>onBeatsPerStepChange\")\n\t\tconst s = this.getUiState();\n\t\t// debugger\n\t\t// update barManager with newMeasureSetting\n\t\tif (s.beatsPerStep !== this.refs.sm.beatsPerStep) {\n\t\t\tthis.refs.barManager.setBarsAmount(s.beatsPerStep);\n\t\t\tthis.refs.sm.setBeatsPerStep(s.beatsPerStep);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tonBpmRangeChange() {\n\t\tconst s = this.getUiState();\n\t\tif (s.bpmRange[0] !== this.state.bpmRange[0] || s.bpmRange[1] !== this.state.bpmRange[1]) {\n\t\t\tconsole.log('bpm range changed')\n\t\t\n\t\t\tconsole.log(s, this.state)\n\t\t\tthis.setState({bpmRange: s.bpmRange});\n\t\t\n\t\t\tthis.refs.planner.setPlan(this.makePlan(s));\n\t\t}\n\t\t\n\t}\n\t\n\texerciseDurationChanged = () => {\n\t\t// make and execute new plan\n\t\tlet newPlan = this.makePlan(this.getUiState());\n\t\tthis.refs.planner.setPlan(newPlan);\n\t\t// this.refs.planner.start();\n\n\t}\n\n\tonPlanAdvanced = (newStep) => {\n\t\tif (newStep) {\n\t\tconsole.log('<App>plan advanced, setting new bpm', newStep.bpm)\n\t\t\tthis.setBpm(newStep.bpm);\n\t\t}\n\t\telse {\n\t\t\t// no step so just stop planner and transport\n\t\t\tthis.refs.planner.stop();\n\t\t\tthis.refs.sm.stop();\n\t\t}\n\t}\n\n\tsetBpm = (newBpm) => {\n\t\tthis.setState({ currentBpm: newBpm });\n\t \tthis.refs.sm.setBpm(newBpm);\n\t}\n\n\tonPlanChanged = () => {\n\t\tconsole.log(\"<App>onPlanChanged\");\n\n\t\t// this.refs.planner.start();\n\t\tlet bar = this.refs.planner.getCurrentBar() \n\t\tconsole.log(\"<App>currentBar\", bar)\n\t\tconsole.log(\"<App>isPlaying?\", this.refs.sm.state.isPlaying )\n\t\t\n\t\t// set initial speed\n\t\tif (bar) {\n\t\t\tthis.setBpm(bar.bpm);\n\t\t}\n\t\t\n\t\tif (this.refs.sm.state.isPlaying ) {\n\t\t\tthis.refs.planner.start();\n\t\t}\n  };\n  \n  onInstrumentChange() {\n\t\tthis.setState(prevState => ({\n\t\t\tinstrumentDropdownOpen: !prevState.instrumentDropdownOpen\n\t\t}));\n  }\n  \n  // onCycleLockChange() {\n  //   this.setState(prevState => ({\n\t// \t\tcycleDropdownOpen: !prevState.cycleDropdownOpen\n\t// \t}));\n  // }\n\n\thandleStartStop = () => {\n\t\t// if stop then stop \n\t\tconsole.log(\"<App>handleStartStop, isPlaying=\",this.refs.sm.state.isPlaying )\n\t\tif (this.refs.sm.state.isPlaying === true) {\n\n\t\t\tthis.refs.planner.stop();\n\t\t\tthis.refs.sm.stop();\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\tthis.refs.planner.start();\n\t\t\tthis.refs.sm.start();\n\t\t}\n\t}\n\n\tgetUiState() {\n\t\tvar s = {\n\t\t\t//currentBpm: this.refs.sm.getBpm(),\n\t\t\tbpmRange: this.refs.bpmRange.getValue(),\n//\t\t\tsegmentDuration: this.refs.segmentDuration.getValue(),\n\t\t\texerciseDuration: this.refs.exerciseDuration.getValue(),\n\t\t\ttotalSteps: this.refs.totalSteps.getValue(),\n\t\t\tbeatsPerStep: this.refs.beatsPerStep.getValue()\n\t\t};\n\t\treturn s;\n\t}\n\n\tonAccentsChange() {\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getValue());\t\t\n\t}\n\n\n\tmakePlan(s) {\n\t\t\n\t\t// construct new plan of excercise\n\t\tconst min = s.bpmRange[0];\n\t\tconst max = s.bpmRange[1];\n\n    const deltaBpm = (max - min) / s.totalSteps;\n    const segmentDuration = (s.exerciseDuration * 60) / (s.totalSteps + 1);\n\t\tconsole.log(\"<App>makePlan, excerciseDuration:\", s.exerciseDuration)\n    // define new plan\n\t\tvar segments = [];\n\t\tfor (var i = 0; i <= s.totalSteps; i++) {\n\t\t\tsegments.push({\n\t\t\t\ttime:   i * segmentDuration,\n\t\t\t\tstart: i * segmentDuration,\n\t\t\t\tend: i * segmentDuration + segmentDuration,\n\t\t\t\tbpm:    min + i * deltaBpm\n\t\t\t});\n\t\t}\n\t\treturn segments;\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App  /> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}