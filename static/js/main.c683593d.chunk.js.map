{"version":3,"sources":["components/SoundMachineInstrument.jsx","components/AccentTypes.jsx","components/SoundMachine.jsx","components/Planner.jsx","components/AdvancedSlider.jsx","components/AdvancedRange.jsx","components/BarManager.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SoundMachineInstrument","props","Object","classCallCheck","this","o","C3","samples","C#3","D3","possibleConstructorReturn","getPrototypeOf","call","baseUrl","key","Sampler","accentTypes","ACCENT_1","ACCENT_2","ACCENT_3","SoundMachine","_this","instrumentTypes","TABLA","ELECTRO","SYNTH","beatsPerStep","accentNotes","state","instrument","isPlaying","accents","instruments","part","setBpm","bpm","Tone","Transport","value","setBeatsPerStep","newBps","console","log","restart","sampler","stop","removeAll","dispose","undefined","score","i","push","Part","time","note","triggerAttackRelease","setAccents","timeSignature","loopEnd","loop","start","getBpm","Error","_this2","Synth","toMaster","Buffer","on","tabla","electro","context","latencyHint","instrumentKey","setState","accentTypesArr","length","at","react_default","a","createElement","Component","Planner","currentStep","bars","timer","ref","startTime","stepsCounter","planChanged","onChange","barRender","b","cls","step","className","formatTime","segmentDuration","toFixed","plan","bar","timeEnd","end","startTimeFormatted","endTimeFormatted","prevState","lockBpm","disposeTimer","resetStep","clearInterval","onAdvance","onInterval","bind","setInterval","Date","getCurrentStep","_this3","Container","style","opacity","map","t","timeInSeconds","setSeconds","getMinutes","padTime","getSeconds","AdvancedSlider","get","prototype","Badge","onClick","onBadgeClick","Slider","AdvancedRange","bounds","Range","BarManager","renderCells","Button","size","color","getBtnColor","type","idx","handleCellClick","prepareBars","defaultValue","amount","oldVal","getValue","toConsumableArray","onAfterChange","selected","newType","forceUpdate","ButtonGroup","availableInstruments","App","timerRef","cycleLockType","SEGMENT","STEP","bpmRange","exerciseDuration","totalSteps","currentBpm","constantMode","instrumentDropdownOpen","cycleDropdownOpen","totalStepsChanged","s","getUiState","refs","planner","setPlan","makePlan","onBeatsPerStepChange","sm","barManager","setBarsAmount","exerciseDurationChanged","newPlan","onPlanAdvanced","newStep","newBpm","onPlanChanged","getCurrentBar","handleStartStop","newInstrument","setInstrument","newCycle","Row","Col","xs","components_AdvancedSlider","min","max","components_BarManager","onAccentsChange","components_AdvancedRange","pushable","onBpmRangeChange","_this4","ButtonDropdown","isOpen","toggle","onInstrumentChange","DropdownToggle","caret","DropdownMenu","DropdownItem","onInstrumentSelect","renderTempoPane","renderPlaybackPane","renderCyclePane","_this5","components_Planner","renderPlanPane","_this6","components_SoundMachine","renderLeftPane","renderRightPane","block","onLockBpmBtn","deltaBpm","segments","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c683593d.chunk.js","sourcesContent":["import {Sampler} from 'tone'\r\n\r\n\r\nclass SoundMachineInstrument extends Sampler {\r\n\r\n    constructor(props) {\r\n        var o = {\r\n            \"C3\" : props.samples[0],\r\n            \"C#3\" : props.samples[1],\r\n            \"D3\" : props.samples[2],\r\n        };\r\n        super(o,{\r\n            baseUrl: props.baseUrl || './audio/' + props.key + '/'\r\n        });\r\n    }\r\n}\r\n\r\nexport default SoundMachineInstrument;\r\n\r\n ","export const accentTypes = {\r\n\tACCENT_1: 0,\r\n\tACCENT_2: 1,\r\n\tACCENT_3: 2\r\n};","import React, { Component } from \"react\";\r\nimport Tone from \"tone\";\r\nimport SoundMachineInstrument from \"./SoundMachineInstrument\";\r\nimport { accentTypes } from \"./AccentTypes\";\r\n\r\nclass SoundMachine extends Component {\r\n\tinstrumentTypes = {\r\n\t\tTABLA: \"tabla\",\r\n\t\tELECTRO: \"electro\",\r\n\t\tSYNTH: \"synth\"\r\n\t};\r\n\r\n\tbeatsPerStep = 3;\r\n\r\n\taccentNotes = [\"C3\", \"C#3\", \"D3\"]; // this stay in sync with AccentTypes\r\n\r\n\tstate = {\r\n\t\t//isInitialized: false,\r\n\t\tinstrument: this.instrumentTypes.TABLA,\r\n\t\t//beatsPerStep: 3,\r\n\t\tisPlaying: false\r\n\t};\r\n\r\n\taccents = [accentTypes.ACCENT_1]; // default with accent on first beat\r\n\tsamples = {};\r\n\r\n\tinstruments = {};\r\n\r\n\tpart = null;\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tif (!props.beatsPerStep) {\r\n\t\t\tthrow new Error(\"props.beatsPerStep is missing\");\r\n\t\t}\r\n\t\t//  this.state.beatsPerStep = props.beatsPerStep;\r\n\t\tthis.beatsPerStep = props.beatsPerStep;\r\n\r\n\t\t// initialize accents array with ticks\r\n\t\t// for (let i = 0 ; i < props.beatsPerStep ; i++) {\r\n\t\t//     this.accents.push({\r\n\t\t//          idx: i,\r\n\t\t//          type: accentTypes.ACCENT_2\r\n\t\t//     })\r\n\t\t// }\r\n\t\t// this.refreshAccentsArray(props.beatsPerStep);\r\n\r\n\t\t// set accent on first beat\r\n\t\t// this.accents[0].type =  accentTypes.ACCENT_1\r\n\t}\r\n\r\n\t// initAccentsArray() {\r\n\t//     // initialize accents array with ticks\r\n\t//     console.log('initAccentsArray()')\r\n\t//     // for (let i = 0 ; i < this.state.beatsPerStep ; i++) {\r\n\t//     for (let i = 0 ; i < this.beatsPerStep ; i++) {\r\n\t//         this.accents.push({\r\n\t//              idx: i,\r\n\t//              type: accentTypes.ACCENT_2\r\n\t//         })\r\n\t//     }\r\n\t//     // set accent on first beat\r\n\t//     this.accents[0].type =  accentTypes.ACCENT_1\r\n\t// }\r\n\r\n\tcomponentDidMount() {\r\n\t\t// reload/debug bell\r\n\t\tvar synth = new Tone.Synth().toMaster();\r\n\t\tsynth.triggerAttackRelease(\"A2\");\r\n\r\n\t\tTone.Buffer.on(\"load\", () => this.restart());\r\n\r\n\t\tvar tabla = new SoundMachineInstrument({\r\n\t\t\tkey: \"tabla\",\r\n\t\t\tsamples: [\"dha-slide.wav\", \"dhin-slide.wav\", \"tin.wav\"]\r\n\t\t}).toMaster();\r\n\r\n\t\tthis.instruments[this.instrumentTypes.TABLA] = tabla;\r\n\r\n\t\tvar electro = new SoundMachineInstrument({\r\n\t\t\tkey: \"machine\",\r\n\t\t\tsamples: [\"Kick.wav\", \"HiHat.wav\", \"Snare.wav\"]\r\n\t\t}).toMaster();\r\n\r\n\t\tthis.instruments[this.instrumentTypes.ELECTRO] = electro;\r\n\r\n\t\tTone.context.latencyHint = \"playback\";\r\n\r\n\t\t// TODO: dispatch ready event, so we can enable UI elements\r\n\t}\r\n\r\n\tsetInstrument(instrumentKey) {\r\n\t\t// TODO validate key\r\n\t\tconsole.log('<SoundMachine>new instrument', instrumentKey)\r\n\t\tthis.setState({ instrument: instrumentKey }, this.restart);\r\n\t}\r\n\r\n\tsetBpm = bpm => {\r\n\t\tTone.Transport.bpm.value = bpm;\r\n\t};\r\n\r\n\tsetBeatsPerStep = newBps => {\r\n\t   \r\n        this.beatsPerStep = newBps;\r\n        \r\n        console.log(\"<SoundMachine>setBeatsPerStep\", newBps)\r\n        \r\n        this.restart()\r\n\r\n\t\t//     this.restart();\r\n\t\t// this.setState({beatsPerStep: newBeatsPerStep}, this.restart);\r\n\t};\r\n\r\n\trestart = () => {\r\n\t\t// check accents array so we know what to play\r\n\t\t// this.refreshAccentsArray()\r\n\r\n\t\tconsole.log(\"<SoundMachine>restart()\");\r\n\r\n\t\tvar sampler = this.instruments[this.state.instrument];\r\n\r\n\t\tif (this.part) {\r\n\t\t\tconsole.log(\"clearing this.part\");\r\n\t\t\tthis.part.stop()\t\r\n\t\t\tthis.part.removeAll()\r\n\t\t\tthis.part.dispose();\r\n\t\t\t// console.log(\"disposed this.part\", this.part);\r\n\t\t\tthis.part = undefined; // maybe it will help with garbage collection?\r\n\t\t}\r\n\r\n\t\tlet score = [];\r\n\t\t// init with ACCENT_2 note, it will be changed in setAccents\r\n\t\t// for (let i = 0 ; i < this.state.beatsPerStep; i++) {\r\n\t\tfor (let i = 0; i < this.beatsPerStep; i++) {\r\n\t\t\tscore.push([\"0:\" + i, this.accentNotes[accentTypes.ACCENT_2]]);\r\n\t\t}\r\n\r\n\t\tconsole.log(\"new score \", score);\r\n\r\n\t\tthis.part = new Tone.Part(function(time, note) {\r\n\t\t\t// trigger note\r\n\t\t\tsampler.triggerAttackRelease(note, \"4n\", time);\r\n\t\t}, score);\r\n\r\n\t\t// setting accents\r\n\t\t// console.log(\"this.part\", this.part);\r\n\t\t// debugger\r\n\t\tthis.setAccents(this.accents);\r\n\r\n\t\t// set signature\r\n\t\tconsole.log('setting timeSignature',this.beatsPerStep)\r\n\t\tTone.Transport.timeSignature = [this.beatsPerStep, 4];\r\n\t\t// this.part.humanize = true; // this one is interesting\r\n\t\tthis.part.loopEnd = \"1m\"; // + this.state.beatsPerStep;\r\n\t\tthis.part.loop = true;\r\n\r\n\t\t// if (this.state.isPlaying === true ) {\r\n\t\t\tconsole.log('transpor was playing so play part')\r\n\t\t\tthis.part.start(0);\r\n\t\t// }\r\n\t};\r\n\r\n\t// setAccents(accentIdxArray) {\r\n\t//     this.accents = accentIdxArray;\r\n\t//     for (let i = 0 ; i < this.part.length; i++) {\r\n\t//         this.part.at(\"0:\"+i, this.accents.indexOf(i) < 0 ? this.tickNote: this.accentNote);\r\n\t//     }\r\n\t// }\r\n \r\n\tsetAccents(accentTypesArr) {\r\n\t\t// if (accentTypesArr.length != this.part.length) {\r\n\t\t//     throw new Error(\"accentTypes has incorrect number of elements \" + accentTypesArr.length + \" vs \" + this.part.length)\r\n\t\t// }\r\n\t\tthis.accents = accentTypesArr;\r\n\r\n\t\tfor (let i = 0; i < this.part.length; i++) {\r\n\t\t\t// by default 2 will be the tick note\r\n\t\t\tlet note = this.accentNotes[accentTypes.ACCENT_2];\r\n\r\n\t\t\t// if accent for this step is specified set it here\r\n\t\t\tif (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_1\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_1];\r\n\t\t\t} else if (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_3\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_3];\r\n\t\t\t}\r\n\t\t\tthis.part.at(\"0:\" + i, note);\r\n\t\t\t// this.part.at(\"0:\"+i, this.accents.indexOf(i) < 0 ? this.tickNote: this.accentNote);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tSound is {this.state.isPlaying === true ? \"playing\" : \"stopped\"}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// toggle() {\r\n\t//     if (Tone.Transport.state === \"started\") {\r\n\t//         this.stop();\r\n\t//     }\r\n\t//     else {\r\n\t//         this.start()\r\n\t//     }\r\n\t// }\r\n\r\n\tstop() {\r\n\t\tconsole.log(\"<SoundMachine>stop()\");\r\n\t\tthis.setState({ isPlaying: false });\r\n\t\t//Tone.Transport.stop();\r\n\t\tTone.Transport.stop();\r\n\t\t// if (this.part) {\r\n\t\t// \tthis.part.stop();\r\n\t\t// }\r\n\t}\r\n\r\n\tstart() {\r\n\t\tconsole.log(\"<SoundMachine>start()\");\r\n\r\n\t\t// Tone.Transport.start(\"+0.05\");\r\n\t\tthis.setState({ isPlaying: true });\r\n\t\t// debugger\r\n\t\tTone.Transport.start(\"+0.1\");\r\n\t\tthis.restart();\r\n\t\t// if (this.part) {\r\n\t\t// \tthis.part.start();\r\n\t\t// }\r\n\t\t// if (this.part) {\r\n\t\t// \tthis.part.start(\"+0.1\");\r\n\t\t// }\r\n\t}\r\n\r\n\tgetBpm = () => {\r\n\t\treturn Tone.Transport.bpm.value;\r\n\t};\r\n}\r\n\r\nexport default SoundMachine;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nclass Planner extends Component {\r\n\tstate = {\r\n\t\tcurrentStep: 0,\r\n\t\tbars: []\r\n\t};\r\n\r\n\ttimer = {\r\n\t\tref: null,\r\n\t\tstartTime: null\r\n\t};\r\n\tstepsCounter = 0;\r\n\r\n\tsetPlan(plan) {\r\n\t\tconsole.log(\"<Planner>setPlan\", plan);\r\n\t\tvar bars = [];\r\n\r\n\t\tfor (var i = 0; i < plan.length; i++) {\r\n\t\t\tconst bar = {\r\n\t\t\t\ttime: plan[i].time,\r\n\t\t\t\ttimeEnd: plan[i].end,\r\n\t\t\t\tsegmentDuration: plan[i].end - plan[i].time,\r\n\t\t\t\tstartTimeFormatted: this.formatTime(plan[i].start),\r\n\t\t\t\tendTimeFormatted: this.formatTime(plan[i].end),\r\n\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\tstep: this.stepsCounter++\r\n\t\t\t};\r\n\r\n\t\t\tbars.push(bar);\r\n\t\t}\r\n\r\n\t\t// update to new state\r\n\t\tthis.stepsCounter = 0;\r\n\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({\r\n\t\t\t\tcurrentStep: 0,\r\n\t\t\t\tbars: bars\r\n\t\t\t}),\r\n\t\t\t() => this.planChanged()\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\t\tconsole.log(\"lockBpm\", this.props.lockBpm);\r\n\t\tif (this.timer) {\r\n\t\t\t// clear timer\r\n\t\t\tthis.disposeTimer(this.timer.ref);\r\n\t\t\t// reset to first step\r\n\t\t}\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tdisposeTimer(ref) {\r\n\t\tif (this.timer.ref !== ref) {\r\n\t\t\tthrow new Error(\"Wront timer.ref to dispose\");\r\n\t\t}\r\n\t\tconsole.log(\"<Planner>clearing interval, \", this.timer.ref);\r\n\t\tclearInterval(this.timer.ref);\r\n\t\tthis.timer.ref = undefined;\r\n\t\tthis.timer.startTime = null;\r\n\t\tthis.timer = undefined;\r\n\t}\r\n\tonInterval() {\r\n\t\tconsole.log(\"<Planner>onInterval\");\r\n\t\tif (this.props.lockBpm) {\r\n\t\t\tconsole.log(\"<Planner>isLocked == true so don't advance anything\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar currentStep = this.state.currentStep;\r\n\r\n\t\t// check if we're not at the end of plan\r\n\t\tif (currentStep + 1 >= this.state.bars.length) {\r\n\t\t\tconsole.log(\"no more steps, please stop()\");\r\n\t\t\tthis.disposeTimer(this.timer.ref);\r\n\t\t\tthis.props.onAdvance(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconsole.log(\"<Planner>onInterval\", this.state.currentStep + 1);\r\n\t\t// console.log('advancing step to' , currentStep + 1)\r\n\t\tthis.setState({ currentStep: currentStep + 1 });\r\n\t\t// console.log('returning' , this.state.currentStep)\r\n\t\tthis.props.onAdvance(this.state.bars[this.state.currentStep]);\r\n\t}\r\n\r\n\tstart() {\r\n\t\tconsole.log(\"<Planner>start()\");\r\n\t\t// debugger\r\n\t\t// make sure we dispose any timer that's currently set\r\n\t\tif (this.timer) {\r\n\t\t\t// console.log(\"<Planner>startTimer() old timer disposed\");\r\n\t\t\tclearInterval(this.timer.ref);\r\n\t\t\tthis.timer.ref = undefined;\r\n\t\t\tthis.timer.startTime = null;\r\n\t\t\tthis.resetStep();\r\n\t\t}\r\n\r\n\t\t// calc segment length between steps and set timer for such\r\n\t\tconst time =\r\n\t\t\t1000 *\r\n\t\t\t(this.state.bars[this.state.currentStep].timeEnd -\r\n\t\t\t\tthis.state.bars[this.state.currentStep].time);\r\n\t\tvar onInterval = this.onInterval.bind(this);\r\n\t\tconsole.log(\"setting interval\", time);\r\n\r\n\t\tthis.timer = {\r\n\t\t\tref: setInterval(onInterval, time),\r\n\t\t\tstartTime: new Date()\r\n\t\t};\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.stepsCounter = 0;\r\n\t\tthis.setState({ bars: [], currentStep: 0 });\r\n\t\tthis.planChanged();\r\n\t}\r\n\r\n\tplanChanged = () => {\r\n\t\tconsole.log(\"<Planner>planChanged\");\r\n\t\tif (this.props.onChange) {\r\n\t\t\t// console.log(\"<Planner>fire onChange\");\r\n\t\t\tthis.props.onChange();\r\n\t\t}\r\n\t};\r\n\r\n\tresetStep() {\r\n\t\tthis.setState({ currentStep: 0 });\r\n\t\tthis.props.onAdvance(this.state.bars[0]);\r\n\t}\r\n\r\n\tgetCurrentBar() {\r\n\t\tif (this.state.getCurrentStep >= this.state.bars.length) {\r\n\t\t\tthrow new Error(\"Trying to get step that doesn't exists\");\r\n\t\t}\r\n\t\treturn this.state.bars[this.state.currentStep];\r\n\t}\r\n\r\n\tbarRender = b => {\r\n\t\tlet cls = this.state.currentStep === b.step ? \"current-step\" : \"\";\r\n\t\treturn (\r\n\t\t\t<div className={cls} key={\"key_\" + b.bpm}>\r\n\t\t\t\t{this.formatTime(b.segmentDuration.toFixed(0))} at{\" \"}\r\n\t\t\t\t{b.bpm.toFixed(0)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\t// console.log(\"<Planner> render\");\r\n\t\t// don't doo much if no plan yet\r\n\t\tif (this.state.bars.length === 0) {\r\n\t\t\treturn <div>No plan</div>;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Container className=\"Planner\">\r\n\t\t\t\t<div style={this.props.lockBpm ? { opacity: 0.5 } : {}}>\r\n\t\t\t\t\t{this.state.bars.map(bar => this.barRender(bar))}\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n\r\n\tpadTime(t) {\r\n\t\treturn t < 10 ? \"0\" + t : t;\r\n\t}\r\n\r\n\tformatTime(timeInSeconds) {\r\n\t\t//{this.leadingZeroCheck(now.getMinutes())}:{now.getSeconds()} --\r\n\t\tlet t = new Date(0, 0, 0, 0, 0, 0, 0);\r\n\t\tt.setSeconds(timeInSeconds);\r\n\t\tlet m = t.getMinutes();\r\n\t\tlet o = \"\";\r\n\t\tif (m !== 0) {\r\n\t\t\to += t.getMinutes(); //this.padTime(t.getMinutes());\r\n\t\t\to += \":\";\r\n\t\t}\r\n\t\to += \"\" + this.padTime(t.getSeconds()) + \"s\";\r\n\t\treturn o;\r\n\t}\r\n}\r\n\r\nexport default Planner;\r\n","import React from 'react'\r\nimport Slider from 'rc-slider'\r\nimport {Badge} from 'reactstrap'\r\n// import {Container, Row, Col} from 'reactstrap'\r\n\r\nclass AdvancedSlider extends Slider {\r\n \r\n    // constructor(props) {\r\n    //     super(props)\r\n    //     // if (props.renderVal) {\r\n    //     //     this.renderVal = props.renderVal\r\n    //     // }\r\n    \r\n    // }\r\n    render() { \r\n        return (\r\n            <div>\r\n                {super.render()}\r\n                <div><Badge  onClick={this.onBadgeClick} className=\"d-i\">{this.state.value}</Badge></div>\r\n            </div>\r\n            );\r\n    }\r\n\r\n    onBadgeClick() {\r\n        // attach editorInPlace\r\n    }\r\n \r\n}\r\n\r\nexport default AdvancedSlider\r\n","import React from 'react'\r\nimport { Range } from 'rc-slider'\r\nimport {Badge} from 'reactstrap'\r\n\r\nclass AdvancedRange extends Range {\r\n    render() { \r\n        return (<div>\r\n            {super.render()}\r\n            <Badge onClick={this.onBadgeClick} className=\"d-i\">{this.state.bounds[0]} - {this.state.bounds[1]}</Badge>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default AdvancedRange;\r\n","import React, { Component } from \"react\";\r\nimport { Button, ButtonGroup } from \"reactstrap\";\r\nimport { accentTypes } from \"./AccentTypes\";\r\n\r\n\r\nclass BarManager extends Component {\r\n\r\n\tstate = {\r\n\t\tbars: []\r\n\t};\r\n\r\n\r\n\taccents = [accentTypes.ACCENT_1,accentTypes.ACCENT_2,accentTypes.ACCENT_3];\r\n\tconstructor(props) {\r\n\t\tsuper(props);\t\t\r\n\t\tthis.state.bars = this.prepareBars(props.defaultValue);\r\n\t\t\r\n\t\t// by def set accent on first beat\r\n\t\tthis.state.bars[0].type = accentTypes.ACCENT_1;\r\n\t}\r\n\r\n\tprepareBars(amount) {\r\n\t\t\r\n\t\tlet oldVal = this.getValue();\r\n\r\n\t\tlet  bars = [];\r\n\t\tfor (let i = 0; i < amount; i++) {\r\n\t\t\tbars.push({\r\n\t\t\t\tidx: i,\r\n\t\t\t\ttype: (oldVal[i]  !== undefined) ? oldVal[i] : accentTypes.ACCENT_2\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn bars;\r\n\t}\r\n\r\n\tsetBarsAmount(amount) {\r\n\t\tlet bars = this.prepareBars(amount);\r\n\t\t// set state and send onAfterChange once updated as they have changed surely (at least the amount)\r\n\t\tthis.setState({ bars: [...bars] },  this.props.onAfterChange);\r\n\t}\r\n\r\n\thandleCellClick(selected) {\r\n\t\t// this.bars[selected]\r\n\t\tlet  bar = this.state.bars[selected]\r\n\t\t\r\n\t\tconst type = bar.type;\r\n\r\n\t\tlet newType = this.accents[(type + 1 ) % 3];\r\n\t\t\r\n\t\tthis.state.bars[selected].type = newType;\r\n\t\tthis.forceUpdate();\r\n\r\n\t\t/// hmm good patern to update arrays in state, doesn't want to lose it \r\n\t\t// const index = this.state.accentBars.indexOf(selected);\r\n\t\t// if (index < 0) {\r\n\t\t// \tthis.state.accentBars.push(selected);\r\n\t\t// } else {\r\n\t\t// \tthis.state.accentBars.splice(index, 1);\r\n\t\t// }\r\n\t\t// this.setState({ accentBars: [...this.state.accentBars] });\r\n\t}\r\n\r\n\tgetValue() {\r\n\t\tvar bars = []\r\n\t\tfor (let i = 0 ; i < this.state.bars.length ; i ++) {\r\n\t\t\tbars.push(this.state.bars[i].type)\r\n\t\t}\r\n\t\treturn bars;\r\n\t}\r\n\r\n\tgetBtnColor(type) {\r\n\t\tvar color;\r\n\t\tswitch (type) {\r\n\t\t\tcase accentTypes.ACCENT_2:\r\n\t\t\t\tcolor = \"secondary\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase accentTypes.ACCENT_3:\r\n\t\t\t\tcolor = \"warning\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tcolor = \"primary\"\r\n\t\t}\r\n\t\treturn color;\r\n\t}\r\n\trenderCells = bars => {\r\n\t\treturn bars.map(bar => (\r\n\t\t\t<Button\r\n\t\t\t\tsize=\"sm\"\r\n\t\t\t\t color={this.getBtnColor(bar.type)}\r\n\t\t\t\t// className=\"btn-state-1\"\r\n\t\t\t\tkey={\"barkey_\" + bar.idx}\r\n\t\t\t\tonClick={() => this.handleCellClick(bar.idx)}\r\n\t\t\t\t// active={!this.state.accentBars.includes(bar)}\r\n\t\t\t>\r\n\t\t\t\t{bar.idx + 1}\r\n\t\t\t</Button>\r\n\t\t));\r\n\t};\r\n\r\n\trender() {\r\n\t\t// dunno how this works but it does the job bubbling up the click event\r\n\t\tconst { onAfterChange } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<ButtonGroup onClick={onAfterChange}>\r\n\t\t\t\t{this.renderCells(this.state.bars)}\r\n\t\t\t</ButtonGroup>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BarManager;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./components/SoundMachine\";\nimport SoundMachine from \"./components/SoundMachine\";\nimport Planner from \"./components/Planner\";\nimport \"rc-slider/assets/index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport {\n\tButtonDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem\n} from \"reactstrap\";\nimport AdvancedSlider from \"./components/AdvancedSlider\";\nimport AdvancedRange from \"./components/AdvancedRange\";\nimport BarManager from \"./components/BarManager\";\n\nconst availableInstruments = {\n\ttabla: \"tabla\",\n\telectro: \"electro\"\n};\n\n\n\nclass App extends Component {\n\ttimer = {\n\t\ttimerRef: null,\n\t\tstartTime: null\n\t};\n\n\n\t\n\t// based on this value we will wait till segment or steps are finished to advance speed\n\tcycleLockType = {\n\t\tSEGMENT: \"segment\",\n\t\tSTEP: \"step\"\n\t};\n\n\tstate = {\n\t\tbpmRange: [200, 400],\n\t\texerciseDuration: 1 * 60, // 1 minute\n\t\t//segmentDuration: 5, // 5 seconds\n\t\ttotalSteps: 10, // 10 steps\n\t\tbeatsPerStep: 4,\n\t\tcurrentBpm: 60,\n\t\tinstrument: \"tabla\",\n\t\tconstantMode: this.cycleLockType.STEP,\n    instrumentDropdownOpen: false,\n\t\tcycleDropdownOpen: false,\n\t\tlockBpm: false\n\t\t\n\t};\n\n\tcomponentDidMount() {\n\t\t// initialize with UI settings\n\t\tthis.refs.planner.setPlan(this.makePlan(this.getUiState()));\n\t\t// TODO for layout debug\n\t\t//this.settingsChanged();\n\t}\n\tonInstrumentSelect(newInstrument) {\n\t\tthis.refs.sm.setInstrument(newInstrument);\n\t\tthis.setState({ instrument: newInstrument });\n\t}\n  \n  onCycleSelect(newCycle) {\n    this.setState({constantMode: newCycle});\n  }\n\n\trenderCyclePane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">CYCLE</Row>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col xs=\"3\">Constant</Col>\n\t\t\t\t\t<Col>\n          <ButtonDropdown\n\t\t\t\t\t\t\t\t\t\t\tisOpen={\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.cycleDropdownOpen\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\ttoggle={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.onCycleLockChange()\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownToggle caret>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.constantMode}\n\t\t\t\t\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onCycleSelect(this.cycleLockType.SEGMENT);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tTime\n\t\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onCycleSelect(this.cycleLockType.STEP);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tStep\n\t\t\t\t\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t\t\t\t\t</ButtonDropdown>\n          \n          </Col>\n\t\t\t\t</Row> */}\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Total time (min)</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"exerciseDuration\"\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmax={30}\n\t\t\t\t\t\t\tdefaultValue={this.state.exerciseDuration / 60}\n\t\t\t\t\t\t\tonAfterChange={() =>\n\t\t\t\t\t\t\t\tthis.exerciseDurationChanged()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Beats per step</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"beatsPerStep\"\n\t\t\t\t\t\t\tmin={2}\n\t\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\t\tdefaultValue={this.state.beatsPerStep}\n\t\t\t\t\t\t\tonAfterChange={() => this.onBeatsPerStepChange()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Number of steps</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"totalSteps\"\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmax={60}\n\t\t\t\t\t\t\tdefaultValue={this.state.totalSteps}\n\t\t\t\t\t\t\tonAfterChange={() =>\n\t\t\t\t\t\t\t\tthis.totalStepsChanged()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Accents</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<BarManager\n\t\t\t\t\t\t\tonAfterChange={() => this.onAccentsChange()}\n\t\t\t\t\t\t\tref=\"barManager\"\n\t\t\t\t\t\t\tdefaultValue={this.state.beatsPerStep}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderTempoPane() {\n\t\t// debugger\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">TEMPO</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"3\">BPM</Col>\n\t\t\t\t\t\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedRange\n\t\t\t\t\t\t\tref=\"bpmRange\"\n\t\t\t\t\t\t\tmin={30}\n\t\t\t\t\t\t\tmax={600}\n\t\t\t\t\t\t\tdefaultValue={[\n\t\t\t\t\t\t\t\tthis.state.bpmRange[0],\n\t\t\t\t\t\t\t\tthis.state.bpmRange[1]\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tpushable={true}\n\t\t\t\t\t\t\tonAfterChange={() => this.onBpmRangeChange()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\n\trenderPlaybackPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">PLAYBACK</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"3\">Instrument</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\tisOpen={this.state.instrumentDropdownOpen}\n\t\t\t\t\t\t\ttoggle={() => this.onInstrumentChange()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DropdownToggle caret>\n\t\t\t\t\t\t\t\t{this.state.instrument}\n\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tavailableInstruments.tabla\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tTabla\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tavailableInstruments.electro\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tElectro\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col xs=\"3\">Playback</Col>\n\t\t\t\t\t<Col>One Time/LoopBack/Repeat</Col>\n\t\t\t\t</Row> */}\n\t\t\t</Container>\n\t\t);\n\t}\n\trenderLeftPane() {\n\t\treturn (\n\t\t\t<Container className=\"side-panel\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderTempoPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPlaybackPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderCyclePane()}</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderExamplesPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">EXAMPLES</Row>\n\t\t\t\t<Row>Not implemented</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderPlanPane() {\n\t\treturn (\n\t\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">Plan</Row>\n\t\t\t\t<Row><Planner\n\t\t\t\t\tconstantMode = { this.state.constantMode }\n\t\t\t\t\tlockBpm = { this.state.lockBpm }\n\t\t\t\t\t//plan={this.makePlan(this.state)}\n\t\t\t\t\tonChange={() => this.onPlanChanged()}\n\t\t\t\t\tonAdvance={(currentStep) => this.onPlanAdvanced(currentStep)}\n\t\t\t\t\tref=\"planner\"\n\t\t\t\t/></Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\trenderRightPane() {\n\t\treturn (\n\t\t\t<Container className=\"side-panel\">\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col>{this.renderExamplesPane()}</Col>\n\t\t\t\t</Row> */}\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Container className=\"pane\">\n\t\t\t\t\t\t\t<Row className=\"pane-title\">\n\t\t\t\t\t\t\t\tBPM\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row className={this.state.lockBpm ? \"locked\" : \"\"}>\n\t\t\t\t\t\t\t\t<Col> {this.state.currentBpm.toFixed(0)}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPlanPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<SoundMachine ref=\"sm\" beatsPerStep={this.state.beatsPerStep}/>\n\t\t\t\t<Container>\n\t\t\t\t\t{/* outer table */}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* left pane with controls */}\n\t\t\t\t\t\t\t{this.renderLeftPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm=\"4\">\n\t\t\t\t\t\t\t{/* right pane with examples and plan*/}\n\t\t\t\t\t\t\t{this.renderRightPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n          <Row>\n            <Col>\n            <Button onClick={() => this.handleStartStop()} block>\n              Start / Stop\n            </Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col >\n           \t <Button onClick={() => this.onLockBpmBtn()}>\n              Lock BPM\n            </Button>\n            </Col>\n          </Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tonLockBpmBtn() {\n\t\tthis.setState({lockBpm: !this.state.lockBpm});\n\t}\n  \n  totalStepsChanged = () => {    \n\t\tconst s = this.getUiState();\n\t\tif (s.totalSteps !== this.state.totalSteps) {\n\t\t\tthis.refs.planner.setPlan(this.makePlan(s));\n\t\t}\n\t}\n\n\tonBeatsPerStepChange = () => {\n\t\t// plan doesn't change here, just the beats per step amount\n\t\t// console.log(\"<App>onBeatsPerStepChange\")\n\t\tconst s = this.getUiState();\n\t\t// debugger\n\t\t// update barManager with newMeasureSetting\n\t\tif (s.beatsPerStep !== this.refs.sm.beatsPerStep) {\n\t\t\tthis.refs.barManager.setBarsAmount(s.beatsPerStep);\n\t\t\tthis.refs.sm.setBeatsPerStep(s.beatsPerStep);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tonBpmRangeChange() {\n\t\tconst s = this.getUiState();\n\t\tif (s.bpmRange[0] !== this.state.bpmRange[0] || s.bpmRange[1] !== this.state.bpmRange[1]) {\n\t\t\tconsole.log('bpm range changed')\n\t\t\n\t\t\tconsole.log(s, this.state)\n\t\t\tthis.setState({bpmRange: s.bpmRange});\n\t\t\n\t\t\tthis.refs.planner.setPlan(this.makePlan(s));\n\t\t}\n\t\t\n\t}\n\t\n\texerciseDurationChanged = () => {\n\t\t// make and execute new plan\n\t\tlet newPlan = this.makePlan(this.getUiState());\n\t\tthis.refs.planner.setPlan(newPlan);\n\t\t// this.refs.planner.start();\n\n\t}\n\n\tonPlanAdvanced = (newStep) => {\n\t\tif (newStep) {\n\t\tconsole.log('<App>plan advanced, setting new bpm', newStep.bpm)\n\t\t\tthis.setBpm(newStep.bpm);\n\t\t}\n\t\telse {\n\t\t\t// no step so just stop planner and transport\n\t\t\tthis.refs.planner.stop();\n\t\t\tthis.refs.sm.stop();\n\t\t}\n\t}\n\n\tsetBpm = (newBpm) => {\n\t\tthis.setState({ currentBpm: newBpm });\n\t \tthis.refs.sm.setBpm(newBpm);\n\t}\n\n\tonPlanChanged = () => {\n\t\tconsole.log(\"<App>onPlanChanged\");\n\n\t\t// this.refs.planner.start();\n\t\tlet bar = this.refs.planner.getCurrentBar() \n\t\tconsole.log(\"<App>currentBar\", bar)\n\t\tconsole.log(\"<App>isPlaying?\", this.refs.sm.state.isPlaying )\n\t\t\n\t\t// set initial speed\n\t\tif (bar) {\n\t\t\tthis.setBpm(bar.bpm);\n\t\t}\n\t\t\n\t\tif (this.refs.sm.state.isPlaying ) {\n\t\t\tthis.refs.planner.start();\n\t\t}\n  };\n  \n  onInstrumentChange() {\n\t\tthis.setState(prevState => ({\n\t\t\tinstrumentDropdownOpen: !prevState.instrumentDropdownOpen\n\t\t}));\n  }\n  \n  // onCycleLockChange() {\n  //   this.setState(prevState => ({\n\t// \t\tcycleDropdownOpen: !prevState.cycleDropdownOpen\n\t// \t}));\n  // }\n\n\thandleStartStop = () => {\n\t\t// if stop then stop \n\t\tconsole.log(\"<App>handleStartStop, isPlaying=\",this.refs.sm.state.isPlaying )\n\t\tif (this.refs.sm.state.isPlaying === true) {\n\n\t\t\tthis.refs.planner.stop();\n\t\t\tthis.refs.sm.stop();\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\tthis.refs.planner.start();\n\t\t\tthis.refs.sm.start();\n\t\t}\n\t}\n\n\tgetUiState() {\n\t\tvar s = {\n\t\t\t//currentBpm: this.refs.sm.getBpm(),\n\t\t\tbpmRange: this.refs.bpmRange.getValue(),\n//\t\t\tsegmentDuration: this.refs.segmentDuration.getValue(),\n\t\t\texerciseDuration: this.refs.exerciseDuration.getValue(),\n\t\t\ttotalSteps: this.refs.totalSteps.getValue(),\n\t\t\tbeatsPerStep: this.refs.beatsPerStep.getValue()\n\t\t};\n\t\treturn s;\n\t}\n\n\tonAccentsChange() {\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getValue());\t\t\n\t}\n\n\n\tmakePlan(s) {\n\t\t\n\t\t// construct new plan of excercise\n\t\tconst min = s.bpmRange[0];\n\t\tconst max = s.bpmRange[1];\n\n    const deltaBpm = (max - min) / s.totalSteps;\n    const segmentDuration = (s.exerciseDuration * 60) / (s.totalSteps + 1);\n\t\tconsole.log(\"<App>makePlan, excerciseDuration:\", s.exerciseDuration)\n    // define new plan\n\t\tvar segments = [];\n\t\tfor (var i = 0; i <= s.totalSteps; i++) {\n\t\t\tsegments.push({\n\t\t\t\ttime:   i * segmentDuration,\n\t\t\t\tstart: i * segmentDuration,\n\t\t\t\tend: i * segmentDuration + segmentDuration,\n\t\t\t\tbpm:    min + i * deltaBpm\n\t\t\t});\n\t\t}\n\t\treturn segments;\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App  /> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}