{"version":3,"sources":["components/SoundMachineInstrument.jsx","components/AccentTypes.jsx","components/InstrumentLib.jsx","components/SimpleVis.jsx","components/SoundMachine.jsx","components/PlayModes.jsx","components/SimpleProgress.jsx","components/Utils.jsx","components/Planner.jsx","components/AdvancedSlider.jsx","components/AdvancedRange.jsx","components/BarManager.jsx","components/SavePresetModal.jsx","components/PresetsManager.jsx","components/SimplePanel.jsx","components/GeometricSlider.jsx","components/ModePanel.jsx","components/PresetsLib.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SoundMachineInstrument","props","_this","Object","classCallCheck","this","console","log","key","o","C3","samples","C#3","D3","possibleConstructorReturn","getPrototypeOf","call","baseUrl","label","Sampler","accentTypes","ACCENT_1","ACCENT_2","ACCENT_3","instruments","TABLA","ELECTRO_KIT","InstrumentLib","defaultInstrument","state","lib","currentInstrument","undefined","tabla","toMaster","electro","setInstrument","Error","Component","SimpleVis","radius","height","myRef","React","createRef","idx","lastEl","classList","remove","beats","el","refs","add","a","b","width","current","offsetWidth","radDelta","Math","PI","i","x","sin","y","cos","style","position","left","top","cell","push","react_default","createElement","ref","Container","className","renderCells","defaultProps","SoundMachine","accentNotes","instrumentLib","currentBeat","beatsPerStep","score","isPlaying","accents","part","repeat","time","note","getInstrument","triggerAttackRelease","updateVis","Tone","Draw","schedule","setBpm","bpm","Transport","value","setBeatsPerStep","newBps","length","pop","timeSignature","setLoopEnd","loopEndEvent","barsAmount","setState","vis","setActive","playNote","getBpm","instrument","_this2","Synth","Buffer","on","onBufferError","context","latencyHint","scheduleRepeat","Event","onLoopEndFunc","onLoopEnd","loop","instrumentKey","bars","cancel","loopEnd","start","accentTypesArr","components_SimpleVis","stop","playModes","BY_BAR","BY_TIME","SimpleProgress","display","Utils","padTime","t","formatTime","timeInSeconds","Date","setSeconds","getMinutes","getSeconds","Planner","stepProgress","timer","startTime","stepsCounter","stepProgressUpdateInterval","planChanged","onChange","barRender","cls","currentStep","step","onClick","onStepClick","segmentDuration","toFixed","end","s","min","bpmRange","max","segments","playMode","segment","interval","bpmStep","uiStateObject","plan","makePlan","totalPlanTime","bar","timeEnd","startTimeFormatted","endTimeFormatted","prevState","clearInterval","stepProgressUpdateTimer","resetStep","lockBpm","onAdvance","_this3","onInterval","bind","setInterval","updateStepProgress","event","getCurrentBar","progress","now","getTime","_this4","_this5","components_SimpleProgress","opacity","map","AdvancedSlider","Fragment","Badge","onBadgeClick","get","prototype","Slider","AdvancedRange","bounds","Range","BarManager","Button","size","color","getBtnColor","handleCellClick","defaultValue","prevVal","getValue","amount","prepareBars","toConsumableArray","onAfterChange","selected","type","newType","forceUpdate","ButtonGroup","SavePresetModal","modal","toggle","assertThisInitialized","title","preset","onSave","variant","Modal","isOpen","ModalHeader","ModalBody","Input","e","target","JSON","stringify","ModalFooter","handleSave","PresetsManager","showDelete","userPresets","cookies","Array","fill","onSelect","objectSpread","toLowerCase","saveInCookie","presets","set","path","splice","parse","Row","item","Col","onPresetClick","onMouseEnter","showDeleteBtn","onMouseLeave","hideDeleteBtn","class","visibility","onPresetDelete","components_SavePresetModal","onSavePreset","SimplePanel","children","GeometricSlider","delta","regression","d","power","precision","marks","marksNum","makeMark","v","formatter","floor","predict","marksStyle","es","ModePanel","bpmStepDropdownOpen","byTimeInterval","byBarInterval","newMode","components_SimplePanel","onModeChange","active","Collapse","components_GeometricSlider","onBarIntervalChange","onTimeIntervalChange","ButtonDropdown","bsSize","margin","onBpmStepChange","DropdownToggle","caret","DropdownMenu","DropdownItem","onBpmStepSelect","PresetsLib","App","timerRef","currentBpm","instrumentDropdownOpen","instrumentDropdownLabel","cycleDropdownOpen","onBeatsPerStepChange","getUiState","sm","barManager","getAccents","setAccents","onPlanAdvanced","newStep","planner","newBpm","onPlanChanged","handleStartStop","setPlan","setProgressEvent","newInstrument","getCurrentInstrumentLabel","xs","components_AdvancedSlider","components_BarManager","onAccentsChange","components_AdvancedRange","pushable","onBpmRangeChange","onInstrumentChange","onInstrumentSelect","renderExamplesPane","renderVisPane","renderTempoPane","components_ModePanel","onModePanelChanged","renderPlaybackPane","renderCyclePane","_this6","components_PresetsManager","uiState","onPresetSelect","_this7","components_SoundMachine","modePanel","setValue","_this8","components_Planner","renderPlanPane","_this9","renderLeftPane","renderMidPane","renderRightPane","block","onLockBpmBtn","onDebug","s1","s2","withCookies","Boolean","window","location","hostname","match","ReactDOM","render","es6","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4QAoBeA,cAfX,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACfM,QAAQC,IAAI,sCAAuCN,EAAMO,KACzD,IAAIC,EAAI,CACJC,GAAOT,EAAMU,QAAQ,GACrBC,MAAQX,EAAMU,QAAQ,GACtBE,GAAOZ,EAAMU,QAAQ,IALV,OAOfT,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAH,GAAAgB,KAAAX,KAAMI,EAAE,CACJQ,QAAShB,EAAMgB,SAAW,WAAahB,EAAMO,IAAM,QAElDA,IAAMP,EAAMO,IACjBN,EAAKgB,MAAQjB,EAAMiB,MAXJhB,6BAFciB,WCHxBC,EAAc,CAC1BC,SAAU,EACVC,SAAU,EACVC,SAAU,GCAEC,EAAc,CAC1BC,MAAO,QACPC,YAAa,cAqDCC,cA3CX,SAAAA,EAAYC,GAAmB,IAAA1B,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsB,IAC3BzB,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAwB,GAAAX,KAAAX,QANPwB,MAAQ,GAK0B3B,EAJ/B4B,IAAM,GAIyB5B,EAH/B6B,uBAAoBC,EAOtB,IAAIC,EAAQ,IAAIjC,EAAuB,CAC7BQ,IAAKgB,EAAYC,MACjBP,MAAO,QAChBP,QAAS,CAAC,gBAAiB,iBAAkB,aACrCuB,WAEHhC,EAAK4B,IAAKG,EAAMzB,KAAQyB,EAExB,IAAIE,EAAU,IAAInC,EAAuB,CACrCQ,IAAKgB,EAAYE,YACjBR,MAAO,iBAChBP,QAAS,CAAC,WAAY,YAAa,eAC3BuB,WAhBwB,OAkB3BhC,EAAK4B,IAAKK,EAAQ3B,KAAQ2B,EAE1BjC,EAAKkC,cAAcR,GAEnBtB,QAAQC,IAAI,mCAtBeL,6EAyBjBM,GACV,QAAsBwB,IAAlB3B,KAAKyB,IAAItB,GACT,MAAM,IAAI6B,MAAM,wDAA0D7B,GAE9EH,KAAK0B,kBAAoBvB,0CAIzB,QAAyCwB,IAArC3B,KAAKyB,IAAIzB,KAAK0B,mBACd,MAAM,IAAIM,MAAM,iDAAmDhC,KAAK0B,mBAE5E,OAAO1B,KAAKyB,IAAIzB,KAAK0B,0BA1CDO,sBCPtBC,cAMF,SAAAA,EAAYtC,GACZ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,IACIrC,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAoC,GAAAvB,KAAAX,KAAMJ,KAPV4B,MAAQ,CACJW,OAAQ,GACRC,OAAQ,KAMRvC,EAAKwC,MAAQC,IAAMC,YAFvB1C,yEAIU2C,GAUN,GALIxC,KAAKyC,QACNzC,KAAKyC,OAAOC,UAAUC,OAAO,UAI5BH,EAAMxC,KAAKJ,MAAMgD,MAAO,CACxB,IAAIC,EAAK7C,KAAK8C,KAAK,KAAON,GAC1BK,EAAGH,UAAUK,IAAI,UACjB/C,KAAKyC,OAASI,8CAIHG,EAAEC,GAUjB,IANA,IAAMC,EAAQlD,KAAKqC,MAAMc,QAAQC,YAI7BC,EAAW,EAAEC,KAAKC,GAAKvD,KAAKJ,MAAMgD,MAE7BY,EAAI,EAAIA,EAAIxD,KAAKJ,MAAMgD,MAAQY,IAAK,CACzC,IAAIC,EAAKzD,KAAKwB,MAAMW,OAASmB,KAAKI,IAAIL,EAAWG,GAC7CG,GAAM3D,KAAKwB,MAAMW,OAASmB,KAAKM,IAAIP,EAAWG,GAGlDxD,KAAK8C,KAAK,KAAOU,GAAGK,MAAMC,SAAW,WACrC9D,KAAK8C,KAAK,KAAOU,GAAGK,MAAME,KAAeb,EAAM,EAAX,GAAeO,EAAI,KACvDzD,KAAK8C,KAAK,KAAOU,GAAGK,MAAMG,IAAM,GAAML,EAAI,0CAItCM,GAGR,IAFA,IAAI7D,EAAI,GAECoD,EAAI,EAAIA,EAAIxD,KAAKJ,MAAMgD,MAAQY,IAEpCpD,EAAE8D,KAAKC,EAAAnB,EAAAoB,cAAA,OAAKC,IAAK,KAAOb,GAAIA,EAAE,IAElC,OAAOpD,mCAIP,OACA+D,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,KACIH,EAAAnB,EAAAoB,cAAA,OAAKC,IAAKrE,KAAKqC,MAAOkC,UAAU,YAAYV,MAAO,CAAEzB,OAAQpC,KAAKwB,MAAMY,SAAUpC,KAAKwE,uBA9D3EvC,aAmETC,IAEfA,EAAUuC,aAAe,CACrB7B,MAAO,OChEL8B,cA4BL,SAAAA,EAAY9E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,IAClB7E,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAA4E,GAAA/D,KAAAX,KAAMJ,KA3BP+E,YAAc,CAAC,KAAM,MAAO,MA0BT9E,EAxBnB+E,mBAAgBjD,EAwBG9B,EAtBnBgF,YAAc,EAsBKhF,EArBnBiF,aAAe,EAqBIjF,EAlBnBkF,MAAQ,CAAC,KAAM,MAAM,MAAM,OAkBRlF,EAhBnB2B,MAAQ,CAIPwD,WAAW,GAYOnF,EARnBoF,QAAU,CAAClE,EAAYC,UAQJnB,EAPnBS,QAAU,GAOST,EALnBsB,YAAc,GAKKtB,EAHnBqF,KAAO,KAGYrF,EAqDnBsF,OAAS,SAACC,GACT,IAAI5C,EAAM3C,EAAKgF,cAAgBhF,EAAKiF,aAEhCO,EAAOxF,EAAKkF,MAAMvC,GAGtB3C,EAAK+E,cAAcU,gBAAgBC,qBAAqBF,EAAM,KAAMD,GACpE,IAAII,EAAY3F,EAAK2F,UAErBC,IAAKC,KAAKC,SAAS,kBAAMH,EAAUhD,IAAM4C,IA9DvBvF,EAiFnB+F,OAAS,SAAAC,GACRJ,IAAKK,UAAUD,IAAIE,MAAQF,GAlFThG,EAqFnBmG,gBAAkB,SAAAC,GAOX,IAHNpG,EAAKiF,aAAemB,EAGPpG,EAAKkF,MAAMmB,OAASD,GAChCpG,EAAKkF,MAAMoB,MAIZ,KAAOtG,EAAKkF,MAAMmB,OAASD,GAC1BpG,EAAKkF,MAAMb,KAAKnD,EAAYC,UAG7ByE,IAAKK,UAAUM,cAAgB,CAACH,EAAQ,GAGxCpG,EAAKwG,WAAWxG,EAAKyG,aAAaC,YAGlC1G,EAAK2G,SAAS,CAAC1B,aAAcmB,KA3GXpG,EA8GnB2F,UAAY,SAACX,GAIZhF,EAAKiD,KAAK2D,IAAIC,UAAU7B,IAlHNhF,EAqHnB8G,SAAW,SAACvB,EAAMC,GACjBxF,EAAK+E,cAAcU,gBAAgBC,qBAAqBF,EAAM,KAAMD,IAtHlDvF,EAwLnB+G,OAAS,WACR,OAAOnB,IAAKK,UAAUD,IAAIE,OA/K1BlG,EAAK+E,cAAgB,IAAItD,EAAczB,EAAKD,MAAMiH,YAVhChH,+EAclB,MAAM,IAAImC,MAAM,0EAIG,IAAA8E,EAAA9G,MAEP,IAAIyF,IAAKsB,OAAQlF,WACvB0D,qBAAqB,MAE3BE,IAAKuB,OAAOC,GAAG,QAAS,kBAAMH,EAAKI,kBAOnCzB,IAAK0B,QAAQC,YAAc,WAE3B,IAAIjC,EAAUnF,KAAKmF,OAOnBM,IAAKK,UAAUuB,eAAe,SAACjC,GAAD,OAAUD,EAAOC,IAAO,KAAM,GAE5DpF,KAAKsG,aAAe,IAAIb,IAAK6B,MAAM,SAASlC,EAAMmC,GAEjDA,KACEvH,KAAKJ,MAAM4H,WAEdxH,KAAKsG,aAAamB,MAAO,wCA2BZC,GACb1H,KAAK4E,cAAc7C,cAAc2F,uDAIjC,OAAO1H,KAAK4E,cAAcU,gBAAgBzE,yCA2ChC8G,GAEV3H,KAAKsG,aAAasB,SAGlB5H,KAAKsG,aAAaC,WAAaoB,EAE/B3H,KAAKsG,aAAauB,QAAU7H,KAAKsG,aAAaC,WAAa,IAC3DvG,KAAKsG,aAAamB,MAAO,EACzBzH,KAAKsG,aAAawB,MAAQ9H,KAAKsG,aAAaC,WAAa,wCAE/CwB,GAIV/H,KAAKiF,QAAU8C,EAEf,IAAK,IAAIvE,EAAI,EAAGA,EAAIxD,KAAK+E,MAAMmB,OAAQ1C,IAAK,CAE3C,IAAI6B,EAAOrF,KAAK2E,YAAY5D,EAAYE,eAIjBU,IAAtBoG,EAAevE,IACfuE,EAAevE,KAAOzC,EAAYC,SAElCqE,EAAOrF,KAAK2E,YAAY5D,EAAYC,eAEdW,IAAtBoG,EAAevE,IACfuE,EAAevE,KAAOzC,EAAYG,WAElCmE,EAAOrF,KAAK2E,YAAY5D,EAAYG,WAErClB,KAAK+E,MAAMvB,GAAK6B,oCAKjB,OACClB,EAAAnB,EAAAoB,cAAA,OAAKP,MAAO,CAACX,MAAO,SACnBiB,EAAAnB,EAAAoB,cAAA,wBAAwC,IAAzBpE,KAAKwB,MAAMwD,UAAqB,UAAY,WAC3Db,EAAAnB,EAAAoB,cAAC4D,EAAD,CAAW3D,IAAI,MAAMzB,MAAO5C,KAAKwB,MAAMsD,+CAOzC9E,KAAKwG,SAAS,CAAExB,WAAW,IAC3BhF,KAAK6E,YAAc,EAEnBY,IAAKK,UAAUmC,uCAMfjI,KAAKwG,SAAS,CAAExB,WAAW,IAE3BS,IAAKK,UAAUgC,MAAM,eAhNI7F,aAyNZyC,IAGfA,EAAaD,aAAe,CAC3BK,aAAc,EACd0C,UAAW,MCtOL,IAAMU,EAAY,CACxBC,OAAQ,SACRC,QAAS,WCcKC,6MAZX7G,MAAQ,2EAEJ,OAAS2C,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,CAAWC,UAAU,kBAC1BJ,EAAAnB,EAAAoB,cAAA,OAAKG,UAAU,MAAMV,MAAO,CAACX,MAAOlD,KAAKJ,MAAMmG,MAAS,IAAKuC,QAAS,mBAJrDrG,aCHvBsG,EAAQ,CACVC,QAAS,SAASC,GACpB,OAAOA,EAAI,GAAK,IAAMA,EAAIA,GAE3BC,WAAY,SAASC,GAEpB,IAAIF,EAAI,IAAIG,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnCH,EAAEI,WAAWF,GACb,IACIvI,EAAI,GASR,OARU,IAFFqI,EAAEK,cAGT1I,GAAKqI,EAAEK,aACE1I,GAAK,IACLA,GAAK,GAAKmI,EAAMC,QAAQC,EAAEM,eAG1B3I,GAAKqI,EAAEM,aAEV3I,IAIMmI,ICfTS,6MACLxH,MAAQ,CACPmG,KAAM,GACNsB,aAAc,KAGfC,MAAQ,CACP7E,IAAK,KACL8E,UAAW,QAEZC,aAAe,IACfC,2BAA6B,KAwN7BC,YAAc,WACbrJ,QAAQC,IAAI,wBACRL,EAAKD,MAAM2J,UAEd1J,EAAKD,MAAM2J,cAsBbC,UAAY,SAAAvG,GACX,IAAMwG,EAAM5J,EAAK2B,MAAMkI,cAAgBzG,EAAE0G,KAAO,eAAiB,GACjE,OACCxF,EAAAnB,EAAAoB,cAAA,OACCwF,QAAS,kBAAM/J,EAAKgK,YAAY5G,EAAE0G,OAClCpF,UAAW,QAAUkF,EACrBtJ,IAAK,OAAS8C,EAAE4C,UAEOlE,IAAtBsB,EAAE6G,gBACAvB,EAAMG,WAAWzF,EAAE6G,gBAAgBC,QAAQ,IAAM,IACjD9G,EAAE+G,IAAM,SAPZ,MAQM/G,EAAE4C,IAAIkE,QAAQ,6EA3PbE,GAER,IAAMC,EAAMD,EAAEE,SAAS,GACjBC,EAAMH,EAAEE,SAAS,GAEnBE,EAAW,GACXxE,EAAMqE,EAEV,GAAID,EAAEK,WAAapC,EAAUC,OAC5B,KAAOtC,GAAOuE,GAAK,CAClB,IAAIG,EAAU,CACb1E,IAAKA,EACLmE,IAAKC,EAAEO,UAERH,EAASnG,KAAKqG,GACd1E,GAAOoE,EAAEQ,aAMV,KAAO5E,GAAOuE,GAAK,CAClB,IAAIG,EAAU,CACbnF,KAHM,EAGI6E,EAAEO,SACZ1C,MAJM,EAIKmC,EAAEO,SACbR,IALM,EAKGC,EAAEO,SAAWP,EAAEO,SACxB3E,IAAKA,GAENwE,EAASnG,KAAKqG,GACd1E,GAAOoE,EAAEQ,QAOX,OAAOJ,kCAIAK,GAAe,IAAA5D,EAAA9G,KAChB2K,EAAO3K,KAAK4K,SAASF,GAGvB/C,EAAO,GAEPkD,EAAgB,EACdP,EAAWI,EAAcJ,SAE/B,GAAII,EAAcJ,WAAapC,EAAUC,OACxC,IAAK,IAAI3E,EAAI,EAAGA,EAAImH,EAAKzE,OAAQ1C,IAAK,CACrC,IAAMsH,EAAM,CACXjF,IAAK8E,EAAKnH,GAAGqC,IACbmE,IAAKW,EAAKnH,GAAGwG,IACbL,KAAM3J,KAAKoJ,gBAGZyB,GAAiB,GAAKF,EAAKnH,GAAGqC,IAAO6E,EAAc5F,aAAe6F,EAAKnH,GAAGwG,IAC1ErC,EAAKzD,KAAK4G,QAGX,IAAStH,EAAI,EAAGA,EAAImH,EAAKzE,OAAQ1C,IAAK,CACrC,IAAMsH,EAAM,CACX1F,KAAMuF,EAAKnH,GAAG4B,KACd2F,QAASJ,EAAKnH,GAAGwG,IACjBF,gBAAiBa,EAAKnH,GAAGwG,IAAMW,EAAKnH,GAAG4B,KACvC4F,mBAAoBzC,EAAMG,WAAWiC,EAAKnH,GAAGsE,OAC7CmD,iBAAkB1C,EAAMG,WAAWiC,EAAKnH,GAAGwG,KAC3CnE,IAAK8E,EAAKnH,GAAGqC,IACb8D,KAAM3J,KAAKoJ,gBAGZyB,GAAiBF,EAAKnH,GAAGwG,IAEzBrC,EAAKzD,KAAK4G,GAKZ9K,KAAKoJ,aAAe,EAEpBpJ,KAAKwG,SACJ,SAAA0E,GAAS,MAAK,CACZL,cAAgBA,EACjBnB,YAAa,EACb/B,KAAMA,EACN2C,SAAUA,IAEX,kBAAMxD,EAAKwC,+CAMRtJ,KAAKkJ,QAERiC,cAAcnL,KAAKkJ,MAAM7E,KACzBrE,KAAKkJ,WAAQvH,GAIV3B,KAAKoL,0BAERD,cAAcnL,KAAKoL,yBACnBpL,KAAKoL,6BAA0BzJ,GAEhC3B,KAAKqL,iDAML,IAAIrL,KAAKJ,MAAM0L,QAAf,CAIA,IAAI5B,EAAc1J,KAAKwB,MAAMkI,YAG7B,GAAIA,EAAc,GAAK1J,KAAKwB,MAAMmG,KAAKzB,OAOtC,OALIlG,KAAKkJ,QACRiC,cAAcnL,KAAKkJ,MAAM7E,KACzBrE,KAAKoF,UAAOzD,QAEb3B,KAAKJ,MAAM2L,UAAU,MAKtBvL,KAAKwG,SAAS,CAAEkD,YAAaA,EAAc,IAE3C1J,KAAKJ,MAAM2L,UAAUvL,KAAKwB,MAAMmG,KAAK3H,KAAKwB,MAAMkI,+CAGzC,IAAA8B,EAAAxL,KAcP,GAVIA,KAAKkJ,QAERiC,cAAcnL,KAAKkJ,MAAM7E,KACzBrE,KAAKkJ,MAAM7E,SAAM1C,EACjB3B,KAAKkJ,MAAMC,UAAY,KACvBnJ,KAAKqL,aAKFrL,KAAKwB,MAAM8I,WAAapC,EAAUE,QAAS,CAG9C,IAAMhD,EACL,KACCpF,KAAKwB,MAAMmG,KAAK3H,KAAKwB,MAAMkI,aAAaqB,QACxC/K,KAAKwB,MAAMmG,KAAK3H,KAAKwB,MAAMkI,aAAatE,MACtCqG,EAAazL,KAAKyL,WAAWC,KAAK1L,MAGtCA,KAAKkJ,MAAQ,CACZ7E,IAAKsH,YAAYF,EAAYrG,GAC7B+D,UAAW,IAAIP,MAKZ5I,KAAKoL,0BACTpL,KAAKoL,wBAA0BO,YAAY,kBAAMH,EAAKI,sBAAsB5L,KAAKqJ,sEAKlEwC,GAEhB7L,KAAK6L,MAAQA,+CAMb,IAAI7L,KAAKJ,MAAM0L,QAAf,CAIA,IAAMR,EAAM9K,KAAK8L,gBACbC,EAAW,EAEf,GAAI/L,KAAKwB,MAAM8I,WAAapC,EAAUC,OACrC4D,EAAY/L,KAAK6L,MAAME,cAQvBA,GAJUnD,KAAKoD,MAAQhM,KAAKkJ,MAAMC,UAAU8C,UAGhBnB,EAAIhB,gBAAkBgB,EAAInB,KAAS,KACpCmB,EAAIhB,gBAAmB,IAElD7J,QAAQC,IAAI,WAGT6L,EAAW,IACdA,EAAW,GAGZ/L,KAAKwG,SAAS,CAACyC,aAAe8C,qCAI9B/L,KAAKoJ,aAAe,EACpBpJ,KAAKwG,SAAS,CAAEmB,KAAM,GAAI+B,YAAa,IACvC1J,KAAKsJ,kDAYLtJ,KAAKwG,SAAS,CAAEkD,YAAa,IAC7B1J,KAAKJ,MAAM2L,UAAUvL,KAAKwB,MAAMmG,KAAK,4CAIrC,GAAI3H,KAAKwB,MAAMkI,aAAe1J,KAAKwB,MAAMmG,KAAKzB,OAC7C,MAAM,IAAIlE,MAAM,0CAEjB,OAAOhC,KAAKwB,MAAMmG,KAAK3H,KAAKwB,MAAMkI,iDAGvBlH,GAAK,IAAA0J,EAAAlM,KAChBA,KAAKwG,SAAS,CAAEkD,YAAalH,GAAO,kBACnC0J,EAAKtM,MAAM2L,UAAUW,EAAK1K,MAAMmG,KAAKuE,EAAK1K,MAAMkI,iDAoBzC,IAAAyC,EAAAnM,KAGR,OAA+B,IAA3BA,KAAKwB,MAAMmG,KAAKzB,OACZ/B,EAAAnB,EAAAoB,cAAA,sBAIPD,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,CAAWC,UAAU,WAEpBJ,EAAAnB,EAAAoB,cAACgI,EAAD,CAAgBrG,MAAkC,IAA3B/F,KAAKwB,MAAMyH,eAClC9E,EAAAnB,EAAAoB,cAAA,OAAKP,MAAO7D,KAAKJ,MAAM0L,QAAU,CAAEe,QAAS,IAAQ,IAClDrM,KAAKwB,MAAMmG,KAAK2E,IAAI,SAAAxB,GAAG,OAAIqB,EAAK3C,UAAUsB,MAE5C3G,EAAAnB,EAAAoB,cAAA,0BAAkBmE,EAAMG,WAAW1I,KAAKwB,MAAMqJ,wBA3R5B5I,aAmSP+G,IAEfA,EAAQvE,aAAe,CACtB6F,SAAUpC,EAAUC,OACpBuB,YAAa,6GCnRC6C,mLAnBb,OACCpI,EAAAnB,EAAAoB,cAAAD,EAAAnB,EAAAwJ,SAAA,KACCrI,EAAAnB,EAAAoB,cAAA,WACCD,EAAAnB,EAAAoB,cAACqI,EAAA,EAAD,CAAO7C,QAAS5J,KAAK0M,aAAcnI,UAAU,OAC3CvE,KAAKwB,MAAMuE,QAGd5B,EAAAnB,EAAAoB,cAAA,OAAKP,MAAO,CAACzB,OAAO,SACnB+B,EAAAnB,EAAAoB,cAAA,WAAAtE,OAAA6M,EAAA,EAAA7M,QAAAY,EAAA,EAAAZ,CAAAyM,EAAAK,WAAA,SAAA5M,MAAAW,KAAAX,wDAXwB6M,KCQdC,mLAPP,OAAQ3I,EAAAnB,EAAAoB,cAAA,WAAAtE,OAAA6M,EAAA,EAAA7M,QAAAY,EAAA,EAAAZ,CAAAgN,EAAAF,WAAA,SAAA5M,MAAAW,KAAAX,MAEJmE,EAAAnB,EAAAoB,cAACqI,EAAA,EAAD,CAAO7C,QAAS5J,KAAK0M,aAAcnI,UAAU,OAAOvE,KAAKwB,MAAMuL,OAAO,GAAtE,MAA6E/M,KAAKwB,MAAMuL,OAAO,YAJ/EC,sBCuGbC,cAhGd,SAAAA,EAAYrN,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiN,IAClBpN,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAmN,GAAAtM,KAAAX,KAAMJ,KANP4B,MAAQ,CACPmG,KAAM,IAIY9H,EADnBoF,QAAU,CAAClE,EAAYC,SAASD,EAAYE,SAASF,EAAYG,UAC9CrB,EAqEnB2E,YAAc,SAAAmD,GACb,OAAOA,EAAK2E,IAAI,SAACxB,EAAItI,GAAL,OACf2B,EAAAnB,EAAAoB,cAAC8I,EAAA,EAAD,CACCC,KAAK,KACJC,MAAOvN,EAAKwN,YAAYvC,GAEzB3K,IAAK,UAAYqC,EACjBoH,QAAS,kBAAM/J,EAAKyN,gBAAgB9K,KAGnCA,EAAM,MA7ET3C,EAAK2B,MAAMmG,KAAO/H,EAAM2N,aAFN1N,6EAKLoF,GAIb,IAHA,IAAMuI,EAAUxN,KAAKyN,WAEhB9F,EAAO,GACHnE,EAAI,EAAGA,EAAIyB,EAAQiB,OAAQ1C,IACnCmE,EAAKzD,UAAqBvC,IAAhB6L,EAAQhK,GAAoBgK,EAAQhK,GAAKyB,EAAQzB,IAE5D,OAAOmE,2CAGS+F,GAChB,IAAI/F,EAAO3H,KAAK2N,YAAYD,GAE5B1N,KAAKwG,SAAS,CAAEmB,KAAK7H,OAAA8N,EAAA,EAAA9N,CAAK6H,IAAU3H,KAAKJ,MAAMiO,kDAGrC5I,EAASH,GAClB9E,KAAKwG,SAAS,CAACmB,KAAM1C,GAAUjF,KAAKJ,MAAMiO,uDAG5BC,GAEf,IAAMC,EAAO/N,KAAKwB,MAAMmG,KAAKmG,GAGzBE,EAAUhO,KAAKiF,SAAS8I,EAAO,GAAM,GAEzC/N,KAAKwB,MAAMmG,KAAKmG,GAAYE,EAC5BhO,KAAKiO,mDAaL,OAAOjO,KAAKwB,MAAMmG,0CAKlB,OAAO3H,KAAKwB,MAAMmG,yCAGPoG,GACX,IAAIX,EACJ,OAAQW,GACP,KAAKhN,EAAYE,SAChBmM,EAAQ,YACR,MACD,KAAKrM,EAAYG,SAChBkM,EAAQ,UACR,MACD,QACCA,EAAQ,UAEV,OAAOA,mCAkBC,IAEAS,EAAkB7N,KAAKJ,MAAvBiO,cAER,OACC1J,EAAAnB,EAAAoB,cAAC8J,EAAA,EAAD,CAAatE,QAASiE,GACpB7N,KAAKwE,YAAYxE,KAAKwB,MAAMmG,cAhGR1F,kEC+CVkM,cA9Cd,SAAAA,EAAYvO,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmO,IAClBtO,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAqO,GAAAxN,KAAAX,KAAMJ,KAHP4B,MAAQ,GAKP3B,EAAK2B,MAAQ,CACZ4M,OAAO,GAGRvO,EAAKwO,OAASxO,EAAKwO,OAAO3C,KAAZ5L,OAAAwO,EAAA,EAAAxO,QAAAwO,EAAA,EAAAxO,CAAAD,KAPIA,wEAWlBG,KAAKwG,SAAS,SAAA0E,GAAS,MAAK,CAC1BkD,OAAQlD,EAAUkD,8CAKpB,IAAMG,EAAQvO,KAAKwB,MAAM+M,MACnBC,EAASxO,KAAKJ,MAAM4O,OACtBD,GAASA,EAAMrI,OAAS,IAC3BlG,KAAKJ,MAAM6O,OAAOF,EAAOC,GACzBxO,KAAKqO,2CAGE,IAAAvH,EAAA9G,KACR,OACCmE,EAAAnB,EAAAoB,cAAAD,EAAAnB,EAAAwJ,SAAA,KACCrI,EAAAnB,EAAAoB,cAAC8I,EAAA,EAAD,CAASC,KAAK,KAAKuB,QAAQ,UAAU9E,QAAS5J,KAAKqO,QAAnD,eAGAlK,EAAAnB,EAAAoB,cAACuK,EAAA,EAAD,CAAOC,OAAQ5O,KAAKwB,MAAM4M,MAAOC,OAAQrO,KAAKqO,OAAQ9J,UAAWvE,KAAKJ,MAAM2E,WAC5EJ,EAAAnB,EAAAoB,cAACyK,EAAA,EAAD,CAAaR,OAAQrO,KAAKqO,QAA1B,eACAlK,EAAAnB,EAAAoB,cAAC0K,EAAA,EAAD,KACC3K,EAAAnB,EAAAoB,cAAC2K,EAAA,EAAD,CAAOxF,SAAU,SAAAyF,GAAC,OAAIlI,EAAKN,SAAS,CAAC+H,MAAOS,EAAEC,OAAOlJ,WACrD5B,EAAAnB,EAAAoB,cAAA,WAAM8K,KAAKC,UAAUnP,KAAKJ,MAAM4O,UAEjCrK,EAAAnB,EAAAoB,cAACgL,EAAA,EAAD,KACCjL,EAAAnB,EAAAoB,cAAC8I,EAAA,EAAD,CAAQE,MAAM,UAAUxD,QAAS,kBAAM9C,EAAKuI,eAA5C,QAAwE,IACxElL,EAAAnB,EAAAoB,cAAC8I,EAAA,EAAD,CAAQE,MAAM,YAAYxD,QAAS5J,KAAKqO,QAAxC,oBAzCyBpM,aCwGfqN,cAlGd,SAAAA,EAAY1P,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsP,IAClBzP,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAwP,GAAA3O,KAAAX,KAAMJ,KALP4B,MAAQ,CACP+N,WAAY,IAKZ1P,EAAK2P,YAAc3P,EAAKD,MAAM6P,QAAQ9C,IAAI,eAE1C9M,EAAK2B,MAAM+N,WAAaG,MAAM7P,EAAK2P,YAAYtJ,QAAQyJ,MAAK,GAJ1C9P,6EAOL2O,GAEbxO,KAAKJ,MAAMgQ,SAASpB,wCAGRD,EAAOnO,GACnB,IAAMoO,EAAM1O,OAAA+P,EAAA,EAAA/P,CAAA,CAAIyO,MAAOA,GAAUnO,GAE7BoP,EAAcxP,KAAKJ,MAAM6P,QAAQ9C,IAAI,eAEpC6C,IACJA,EAAc,IAMf,IAFA,IAAIhN,GAAO,EAEFgB,EAAI,EAAIA,EAAIgM,EAAYtJ,OAAQ1C,IACpCgM,EAAYhM,GAAG+K,MAAMuB,gBAAkBvB,EAAMuB,gBAChDtN,EAAMgB,GAGJhB,EAAM,EACTgN,EAAYtL,KAAKsK,GAGjBgB,EAAYhN,GAAOgM,EAGpBxO,KAAK+P,aAAaP,wCAGNQ,GACZhQ,KAAKJ,MAAM6P,QAAQQ,IAAI,cAAef,KAAKC,UAAUa,GAAS,CAAEE,KAAM,MACtElQ,KAAKwP,YAAcQ,wCAGNhB,EAAGxM,GAChB,IAAI+M,EAAUzP,OAAA+P,EAAA,EAAA/P,CAAA,GAAOE,KAAKwB,OAC1B+N,EAAW/M,IAAO,EAClBxC,KAAKwG,SAAS,CAAC+I,qDAEFP,GACbhP,KAAKwG,SAAS,CAAC+I,YAAY,2CAEb/M,GACdxC,KAAKwP,YAAYW,OAAO3N,EAAI,GAC5BxC,KAAK+P,aAAa/P,KAAKwP,8CAGf,IAAA1I,EAAA9G,KAEFwP,EAAcxP,KAAKJ,MAAM6P,QAAQA,QAAQD,YAAeN,KAAKkB,MAAQpQ,KAAKJ,MAAM6P,QAAQA,QAAQD,aAAgB,GAEtH,OACCrL,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,CAAWC,UAAU,kBACpBJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACErQ,KAAKJ,MAAMoQ,QAAQ1D,IAAI,SAACgE,EAAM9N,GAAP,OACvB2B,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,CAAKhM,UAAU,SACdqF,QAAS,kBAAM9C,EAAK0J,cAAcF,IAClCnQ,IAAK,UAAYqC,GAEhB8N,EAAK/B,UAITpK,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,oBAGAlM,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACEb,EAAYlD,IAAI,SAACgE,EAAM9N,GAAP,OAChB2B,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,CAAKhM,UAAU,SACdkM,aAAc,SAACzB,GAAD,OAAOlI,EAAK4J,cAAc1B,EAAGxM,IAC3CmO,aAAc,SAAC3B,GAAD,OAAOlI,EAAK8J,cAAc5B,EAAGxM,IAC3CoH,QAAS,kBAAM9C,EAAK0J,cAAcF,IAClCnQ,IAAK,UAAYqC,GAEhB8N,EAAK/B,MACNpK,EAAAnB,EAAAoB,cAAA,OAAKyM,MAAM,IAAIhN,MAAO,CAACiN,WAAYhK,EAAKtF,MAAM+N,WAAW/M,GAAO,GAAK,UAAWoH,QAAS,kBAAM9C,EAAKiK,eAAevO,KAAnH,SAKH2B,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAAC4M,EAAD,CAAiBxC,OAAQxO,KAAKJ,MAAM4O,OAAQC,OAAQ,SAACF,EAAOC,GAAR,OAAmB1H,EAAKmK,aAAa1C,EAAOC,eAhGxEvM,aCDvBiP,oLAEE,OACI/M,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,CAAWC,UAAW,QAAUvE,KAAKJ,MAAM2E,WACnDJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,CAAK9L,UAAU,cAAcvE,KAAKJ,MAAM2O,OACxCpK,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,CAAK9L,UAAU,aAAavE,KAAKJ,MAAMuR,kBALjBlP,aAWXiP,MAGfA,GAAYzM,aAAe,CACvB8J,MAAO,QACP4C,SAAU,GACV5M,UAAW,sCCZT6M,eAOF,SAAAA,EAAYxR,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoR,IACfvR,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAsR,GAAAzQ,KAAAX,KAAMJ,KAPb4B,MAAQ,CACDuE,MAAO,EACPsL,MAAO,EACPC,gBAAY3P,GAMZ,IAAM4P,EAAI,CAAC,CAAC,EAAE1R,EAAKD,MAAMsK,KAAK,CAAC,IAAKrK,EAAKD,MAAMwK,MAC/CvK,EAAK2B,MAAM8P,WAAaA,KAAWE,MAAMD,EAAG,CAACE,UAAU,KAEvD5R,EAAK6R,MAAQ,GAGb,IADA,IACSlO,EAAI,EAAGA,GAAK,IAAKA,GAAG,KAAK3D,EAAKD,MAAM+R,SAAS,GAClD9R,EAAK6R,MAAMlO,GAAK3D,EAAK+R,SAASpO,GAVnB,OAAA3D,wEAeVgS,GACL,MAAO,CACHhR,MAAOb,KAAKJ,MAAMkS,UACdxO,KAAKyO,MAAO/R,KAAKwB,MAAM8P,WAAWU,QAAQH,GAAG,KAEjDhO,MAAO7D,KAAKJ,MAAMqS,6CAIjBJ,GACL,IAAM9L,EAASzC,KAAKyO,MAAM/R,KAAKwB,MAAM8P,WAAWU,QAAQH,GAAG,IAC3D7R,KAAKwG,SAAS,CAACT,MAAOA,IACtB/F,KAAKJ,MAAM2J,SAASxD,oCAGf,IAAAe,EAAA9G,KAEL,OACImE,EAAAnB,EAAAoB,cAAAD,EAAAnB,EAAAwJ,SAAA,KACCrI,EAAAnB,EAAAoB,cAAA,WACRD,EAAAnB,EAAAoB,cAACqI,EAAA,EAAD,CAAO7C,QAAS5J,KAAK0M,aAAcnI,UAAU,OAC3CvE,KAAKJ,MAAMkS,UAAU9R,KAAKwB,MAAMuE,SAGvB5B,EAAAnB,EAAAoB,cAAC8N,EAAA,EAAD,CAASrO,MAAO,CAACzB,OAAQ,QAASmH,SAAU,SAACsI,GAAD,OAAO/K,EAAKyC,SAASsI,IAAI3H,IAAK,EAAGE,IAAK,IAAKT,KAAM,GAAK+H,MAAO1R,KAAK0R,gBA9ChGzP,aAsDfmP,MAEfA,GAAgB3M,aAAe,CAC3BkN,SAAU,EACVM,WAAY,CACR7E,MAAO,QAEX0E,UAAW,SAASD,GAAI,OAAOA,QC1D7BM,eASL,SAAAA,EAAYvS,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmS,IAClBtS,EAAAC,OAAAW,EAAA,EAAAX,CAAAE,KAAAF,OAAAY,EAAA,EAAAZ,CAAAqS,GAAAxR,KAAAX,KAAMJ,KATP4B,MAAQ,CACP8I,SAAUpC,EAAUE,QACpBqC,QAAS,GACH2H,qBAAqB,EACrBC,eAAgB,EAChBC,cAAe,GAKrBzS,EAAK2B,MAAM8I,SAAW1K,EAAM0K,SACxB1K,EAAM0K,WAAapC,EAAUC,OAChCtI,EAAK2B,MAAM8Q,cAAgB1S,EAAM4K,SAGjC3K,EAAK2B,MAAM6Q,eAAkBzS,EAAM4K,SAEpC3K,EAAK2B,MAAMiJ,QAAU7K,EAAM6K,QATT5K,4EAaN0S,GACNvS,KAAKwG,SAAS,CAAE8D,SAAUiI,GAAWvS,KAAKJ,MAAMiO,yDAItD7N,KAAKwG,SAAS,SAAA0E,GAAS,MAAK,CAC3BkH,qBAAsBlH,EAAUkH,+DAIlBrM,GACf/F,KAAKwG,SAAS,CAAEiE,QAAS1E,GAAS/F,KAAKJ,MAAMiO,kDAS7C,MALgB,CACNvD,SAAUtK,KAAKwB,MAAM8I,SACrBE,SAAUxK,KAAKwB,MAAM8I,WAAapC,EAAUC,OAASnI,KAAKwB,MAAM8Q,cAAgBtS,KAAKwB,MAAM6Q,eAC3F5H,QAASzK,KAAKwB,MAAMiJ,0CAKtBrK,GACRJ,KAAKwG,SAAS,CACb8D,SAAUlK,EAAEkK,SACZG,QAASrK,EAAEqK,QACX6H,cAAelS,EAAEkK,WAAapC,EAAUC,OAAS/H,EAAEoK,SAAWxK,KAAKwB,MAAM8Q,cACzED,eAAgBjS,EAAEkK,WAAapC,EAAUE,QAAUhI,EAAEoK,SAAWxK,KAAKwB,MAAM6Q,gBACzErS,KAAKJ,MAAMiO,4DASMgE,GACpB7R,KAAKwG,SAAS,CAAC6L,eAAgBR,GAAI7R,KAAKJ,MAAMiO,2DAG3BgE,GACnB7R,KAAKwG,SAAS,CAAC8L,cAAeT,GAAI7R,KAAKJ,MAAMiO,gDAIrC,IAAA/G,EAAA9G,KACR,OACCmE,EAAAnB,EAAAoB,cAACoO,GAAD,CAAajE,MAAM,QAClBpK,EAAAnB,EAAAoB,cAAC8J,EAAA,EAAD,KACC/J,EAAAnB,EAAAoB,cAAC8I,EAAA,EAAD,CACCtD,QAAS,kBAAM9C,EAAK2L,aAAavK,EAAUC,SAC3CuK,OAAQ1S,KAAKwB,MAAM8I,WAAapC,EAAUC,QAF3C,UAMAhE,EAAAnB,EAAAoB,cAAC8I,EAAA,EAAD,CACCtD,QAAS,kBAAM9C,EAAK2L,aAAavK,EAAUE,UAC3CsK,OAAQ1S,KAAKwB,MAAM8I,WAAapC,EAAUE,SAF3C,YAQDjE,EAAAnB,EAAAoB,cAACuO,GAAA,EAAD,CAAU/D,OAAQ5O,KAAKwB,MAAM8I,WAAapC,EAAUC,QACnDhE,EAAAnB,EAAAoB,cAAA,kCACAD,EAAAnB,EAAAoB,cAACwO,GAAD,CAAiBrJ,SAAU,SAACsI,GAAD,OAAO/K,EAAK+L,oBAAoBhB,IAAI3H,IAAK,EAAGE,IAAK,MAD5E,SAIDjG,EAAAnB,EAAAoB,cAACuO,GAAA,EAAD,CAAU/D,OAAQ5O,KAAKwB,MAAM8I,WAAapC,EAAUE,SACnDjE,EAAAnB,EAAAoB,cAAA,kCACCD,EAAAnB,EAAAoB,cAACwO,GAAD,CAAiBrJ,SAAU,SAACsI,GAAD,OAAO/K,EAAKgM,qBAAqBjB,IAAI3H,IAAK,EAAGE,IAAK,IAAM0H,UAAWvJ,EAAMG,aADrG,YAtBF,oBA4BavE,EAAAnB,EAAAoB,cAAC2O,EAAA,EAAD,CAAgBC,OAAO,KAAKnP,MAAO,CAACoP,OAAQ,WACtDrE,OAAQ5O,KAAKwB,MAAM4Q,oBACnB/D,OAAQ,kBAAMvH,EAAKoM,oBACnB/O,EAAAnB,EAAAoB,cAAC+O,EAAA,EAAD,CAAgBC,OAAK,EAACjG,KAAK,MACzBnN,KAAKwB,MAAMiJ,SAEbtG,EAAAnB,EAAAoB,cAACiP,EAAA,EAAD,KACClP,EAAAnB,EAAAoB,cAACkP,EAAA,EAAD,CAAc1J,QAAS,WAAO9C,EAAKyM,gBAAgB,KAAnD,KAGApP,EAAAnB,EAAAoB,cAACkP,EAAA,EAAD,CAAc1J,QAAS,WAAO9C,EAAKyM,gBAAgB,MAAnD,MAGApP,EAAAnB,EAAAoB,cAACkP,EAAA,EAAD,CAAc1J,QAAS,WAAO9C,EAAKyM,gBAAgB,MAAnD,MAGApP,EAAAnB,EAAAoB,cAACkP,EAAA,EAAD,CAAc1J,QAAS,WAAO9C,EAAKyM,gBAAgB,MAAnD,MAGApP,EAAAnB,EAAAoB,cAACkP,EAAA,EAAD,CAAc1J,QAAS,WAAO9C,EAAKyM,gBAAgB,MAAnD,QA/CJ,cAvEqBtR,aAiITkQ,MAEfA,GAAU1N,aAAe,CACxBoJ,cAAe,MC3IT,IAAM2F,GAAa,CACtB,CACIjF,MAAO,uBACPzJ,aAAc,EACdwF,SAAUpC,EAAUC,OACpBqC,SAAU,EACVC,QAAS,GACTN,SAAU,CAAC,IAAK,KAChBlF,QAAS,CAAC,EAAG,EAAG,EAAG,IAEvB,CACFsJ,MAAO,+BACPzJ,aAAc,EACdqF,SAAU,CAAC,IAAK,KACVlF,QAAS,CAAC,EAAG,EAAG,EAAG,EAAE,GACrBqF,SAAUpC,EAAUE,QACpBvB,WAAY1F,EAAYE,YACxBmJ,SAAU,GACVC,QAAS,IAEb,CACI8D,MAAO,gBACP1H,WAAY1F,EAAYC,MAC9B0D,aAAc,GACdqF,SAAU,CAAC,IAAK,KACVlF,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrCqF,SAAUpC,EAAUE,QACpBoC,SAAU,IACVC,QAAS,KCNXgJ,8MACLvK,MAAQ,CACPwK,SAAU,KACVvK,UAAW,QAGZ3H,MAAQ,CACPmS,WAAY,GACZ9M,WAAY1F,EAAYE,YACxBuS,wBAAwB,EACxBC,wBAAyB,cACzBC,mBAAmB,EACnBxI,SAAS,KAwXVyI,qBAAuB,WAEtB,IAAM9N,EAAUpG,EAAKmU,aAAalP,aAElC,GAAImB,IAAWpG,EAAKiD,KAAKmR,GAAGnP,aAAc,CAGzC,IAFA,IAAMG,EAAUpF,EAAKiD,KAAKoR,WAAWC,aAE9BlP,EAAQiB,OAASD,GACvBhB,EAAQkB,MAET,KAAOlB,EAAQiB,OAASD,GACvBhB,EAAQf,KAAKnD,EAAYE,UAG1BpB,EAAKiD,KAAKmR,GAAGjO,gBAAgBC,GAC7BpG,EAAKiD,KAAKoR,WAAWE,WAAWnP,GAChCpF,EAAK2G,SAAS,CAAE1B,aAAcmB,QAehCoO,eAAiB,SAAAC,GACZA,GACHrU,QAAQC,IAAI,kCAAmCoU,GAC/CzU,EAAK+F,OAAO0O,EAAQzO,OAGpBhG,EAAKiD,KAAKyR,QAAQtM,OAClBpI,EAAKiD,KAAKmR,GAAGhM,WAIfrC,OAAS,SAAA4O,GACR3U,EAAK2G,SAAS,CAAEmN,WAAYa,IAC5B3U,EAAKiD,KAAKmR,GAAGrO,OAAO4O,MAGrBC,cAAgB,WACfxU,QAAQC,IAAI,sBAGZ,IAAI4K,EAAMjL,EAAKiD,KAAKyR,QAAQzI,gBAE5BjM,EAAKiD,KAAKmR,GAAG5N,WAAWyE,EAAId,MAAO,GAG/Bc,GACHjL,EAAK+F,OAAOkF,EAAIjF,KAGbhG,EAAKiD,KAAKmR,GAAGzS,MAAMwD,WACtBnF,EAAKiD,KAAKyR,QAAQzM,WAUpB4M,gBAAkB,YACoB,IAAjC7U,EAAKiD,KAAKmR,GAAGzS,MAAMwD,WACtBnF,EAAKiD,KAAKyR,QAAQtM,OAClBpI,EAAKiD,KAAKmR,GAAGhM,SAEbpI,EAAKiD,KAAKyR,QAAQzM,QAClBjI,EAAKiD,KAAKmR,GAAGnM,6FAhcd9H,KAAK8C,KAAKyR,QAAQI,QAAQ3U,KAAKgU,cAG/BhU,KAAK8C,KAAKyR,QAAQK,iBAAiB5U,KAAK8C,KAAKmR,GAAG3N,cAGhDtG,KAAK8C,KAAKmR,GAAGG,WAAWpU,KAAK8C,KAAKoR,WAAWC,yDAK3BU,GAClB7U,KAAK8C,KAAKmR,GAAGlS,cAAc8S,GAC3B,IAAMhU,EAAQb,KAAK8C,KAAKmR,GAAGa,4BAC3B7U,QAAQC,IAAI,2CAA4C2U,GACxD7U,KAAKwG,SAAS,CAAEK,WAAYgO,EAAehB,wBAAyBhT,8CAGnD,IAAAiG,EAAA9G,KACjB,OACCmE,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,CAAWC,UAAU,QACpBJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,CAAK9L,UAAU,cAAf,SAcAJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,CAAKwE,GAAI,GAAT,kBACA5Q,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KACCpM,EAAAnB,EAAAoB,cAAC4Q,EAAD,CACC3Q,IAAI,eACJ6F,IAAK,EACLE,IAAK,GACLmD,aAAcvN,KAAKJ,MAAMkF,aACzB+I,cAAe,kBAAM/G,EAAKiN,4BAgB7B5P,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,CAAKwE,GAAI,GAAT,WACA5Q,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KACCpM,EAAAnB,EAAAoB,cAAC6Q,EAAD,CACCpH,cAAe,kBAAM/G,EAAKoO,mBAC1B7Q,IAAI,aACJkJ,aAAcvN,KAAKJ,MAAMqF,uDAQb,IAAAuG,EAAAxL,KAEjB,OACCmE,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,CAAWC,UAAU,QACpBJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,CAAK9L,UAAU,cAAf,SACAJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,CAAKwE,GAAG,KAAR,OAEA5Q,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KACCpM,EAAAnB,EAAAoB,cAAC+Q,EAAD,CACC9Q,IAAI,WACJ6F,IAAK,GACLE,IAAK,IACLmD,aAAc,CACbvN,KAAKJ,MAAMuK,SAAS,GACpBnK,KAAKJ,MAAMuK,SAAS,IAErBiL,UAAU,EACVvH,cAAe,kBAAMrC,EAAK6J,sEAQX,IAAAnJ,EAAAlM,KACpB,OACCmE,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,CAAWC,UAAU,QACpBJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,CAAK9L,UAAU,cAAf,YACAJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,CAAKwE,GAAG,KAAR,cACA5Q,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KACCpM,EAAAnB,EAAAoB,cAAC2O,EAAA,EAAD,CACCnE,OAAQ5O,KAAKwB,MAAMoS,uBACnBvF,OAAQ,kBAAMnC,EAAKoJ,uBAEnBnR,EAAAnB,EAAAoB,cAAC+O,EAAA,EAAD,CAAgBC,OAAK,GACnBpT,KAAKwB,MAAMqS,yBAEb1P,EAAAnB,EAAAoB,cAACiP,EAAA,EAAD,KACClP,EAAAnB,EAAAoB,cAACkP,EAAA,EAAD,CACC1J,QAAS,WACRsC,EAAKqJ,mBACJpU,EAAYC,SAHf,SASA+C,EAAAnB,EAAAoB,cAACkP,EAAA,EAAD,CACC1J,QAAS,WACRsC,EAAKqJ,mBACJpU,EAAYE,eAHf,iEAsBN,IAAMG,EAAQxB,KAAKgU,aAEnB/T,QAAQC,IAAI,0BAA2BsB,GACvCxB,KAAK8C,KAAKyR,QAAQI,QAAQnT,GACtBA,EAAM8I,WAAapC,EAAUC,QAChCnI,KAAK8C,KAAKmR,GAAG5N,WAAW7E,EAAMmG,8CAK/B,OACCxD,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,KACCH,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KAAMvQ,KAAKwV,uBAEZrR,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KAAMvQ,KAAKyV,kBAEZtR,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,iDAKa,IAAApE,EAAAnM,KAChB,OACCmE,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,KACCH,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KAAMvQ,KAAK0V,oBAEZvR,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KACCpM,EAAAnB,EAAAoB,cAACuR,GAAD,CACCtR,IAAI,YACJiG,SAAUtK,KAAKJ,MAAM0K,SACrBE,SAAUxK,KAAKJ,MAAM4K,SACrBC,QAASzK,KAAKJ,MAAM6K,QAEpBoD,cAAe,kBAAM1B,EAAKyJ,0BAK7BzR,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KAAMvQ,KAAK6V,uBAEZ1R,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KAAMvQ,KAAK8V,kEAMM,IAAAC,EAAA/V,KACpB,OACCmE,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,CAAWC,UAAU,QACpBJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,CAAK9L,UAAU,cAAf,WACAJ,EAAAnB,EAAAoB,cAAC4R,EAAD,CAAgB3R,IAAI,iBACnBmK,OAAQxO,KAAKiW,QAEbxG,QAASzP,KAAKJ,MAAM6P,QACpBO,QAASwD,GACT5D,SAAU,SAAApB,GAAM,OAAIuH,EAAKG,eAAe1H,+CAM5B,IAAA2H,EAAAnW,KACf,OACCmE,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,CAAWC,UAAU,QACpBJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,CAAK9L,UAAU,cAAf,iBACAJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACgS,EAAD,CACC/R,IAAI,KACJS,aAAc9E,KAAKwB,MAAMsD,aACzB0C,UAAW,kBAAM2O,EAAK3O,aAEtBX,WAAY7G,KAAKwB,MAAMqF,sDAOb2H,GACdvO,QAAQC,IAAI,iBAAkBsO,GAI9BxO,KAAK8C,KAAKqH,SAAS3D,SAAS,CAC3BuG,OAAQ,CAACyB,EAAOrE,SAAS,GAAIqE,EAAOrE,SAAS,MAE9CnK,KAAK8C,KAAKgC,aAAa0B,SAAS,CAAET,MAAOyI,EAAO1J,eAEhD9E,KAAK8C,KAAKmR,GAAGjO,gBAAgBwI,EAAO1J,cAGpC9E,KAAKuV,mBAAmB/G,EAAO3H,YAAe1F,EAAYC,OAG1DpB,KAAK8C,KAAKoR,WAAWE,WAAW5F,EAAOvJ,QAASuJ,EAAO1J,cAGvD9E,KAAK8C,KAAKuT,UAAUC,SAAS9H,4CAab,IAAA+H,EAAAvW,KAChB,OACCmE,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,CAAWC,UAAU,QACpBJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,CAAK9L,UAAU,cAAf,QACAJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACoS,EAAD,CACClL,QAAStL,KAAKwB,MAAM8J,QAEpB/B,SAAU,kBAAMgN,EAAK9B,iBACrBlJ,UAAW,SAAA7B,GAAW,OACrB6M,EAAKlC,eAAe3K,IAErBrF,IAAI,wDAQR,OACCF,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,KACCH,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KACCpM,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,CAAWC,UAAU,QACpBJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,CAAK9L,UAAU,cAAf,OACAJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,CAAK9L,UAAWvE,KAAKwB,MAAM8J,QAAU,SAAW,IAC/CnH,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,SAAOvQ,KAAKwB,MAAMmS,WAAW5J,QAAQ,QAKzC5F,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KAAMvQ,KAAKyW,wDAOJzW,KAAKgU,aACT1J,WAAapC,EAAUC,SAC5BlI,QAAQC,IAAI,qBACZF,KAAK8C,KAAKyR,QAAQ9I,+CAYX,IAAAiL,EAAA1W,KACR,OACCmE,EAAAnB,EAAAoB,cAAA,OAAKG,UAAU,OACdJ,EAAAnB,EAAAoB,cAACE,EAAA,EAAD,CAAWC,UAAU,iBAEpBJ,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KAEEvQ,KAAK2W,kBAEPxS,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KAAMvQ,KAAK4W,iBACXzS,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KAEEvQ,KAAK6W,oBAGR1S,EAAAnB,EAAAoB,cAACiM,EAAA,EAAD,KACClM,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KACCpM,EAAAnB,EAAAoB,cAAC8I,EAAA,EAAD,CACCtD,QAAS,kBAAM8M,EAAKhC,mBACpBoC,OAAK,GAFN,iBAOD3S,EAAAnB,EAAAoB,cAACmM,EAAA,EAAD,KACCpM,EAAAnB,EAAAoB,cAAC8I,EAAA,EAAD,CAAQtD,QAAS,kBAAM8M,EAAKK,iBAA5B,kDAcL/W,KAAK8C,KAAKmR,GAAG+C,iDAIbhX,KAAKwG,SAAS,CAAE8E,SAAUtL,KAAKwB,MAAM8J,qDA+BrC,IAAMrB,EAAIjK,KAAKgU,aAEd/J,EAAEE,SAAS,KAAOnK,KAAKJ,MAAMuK,SAAS,IACtCF,EAAEE,SAAS,KAAOnK,KAAKJ,MAAMuK,SAAS,KAEtCnK,KAAKwG,SAAS,CAAE2D,SAAUF,EAAEE,WAC5BnK,KAAK8C,KAAKyR,QAAQI,QAAQ1K,iDAuC3BjK,KAAKwG,SAAS,SAAA0E,GAAS,MAAK,CAC3B0I,wBAAyB1I,EAAU0I,+DAgBpC,IAAMqD,EAAK,CACV9M,SAAUnK,KAAK8C,KAAKqH,SAASsD,WAC7B3I,aAAc9E,KAAK8C,KAAKgC,aAAa2I,WACrCxI,QAASjF,KAAK8C,KAAKoR,WAAWC,aAC9BtN,WAAY7G,KAAKwB,MAAMqF,YAGlBqQ,EAAKlX,KAAK8C,KAAKuT,UAAU5I,WAEzBwI,EAAOnW,OAAA+P,EAAA,EAAA/P,CAAA,GAAQmX,EAAOC,GAS5B,OAJAjX,QAAQC,IAAI,kBAAmBF,KAAKiW,SACpCjW,KAAKiW,QAAUA,EAEfjW,KAAKiW,QAAQpP,WAAa7G,KAAKwB,MAAMqF,WAC9BoP,4CAIPjW,KAAK8C,KAAKmR,GAAGG,WAAWpU,KAAK8C,KAAKoR,WAAWC,qBA7e7BlS,aAifHkV,eAAY1D,IAG3BA,GAAIhP,aAAe,CAClB6F,SAAUpC,EAAUC,OACpBqC,SAAU,EACV3D,WAAY1F,EAAYC,MACxBqJ,QAAS,GACTN,SAAU,CAAC,IAAK,KAChBrF,aAAc,EACdG,QAAS,CAAC,EAAG,EAAG,EAAG,ICzgBAmS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAASvT,EAAAnB,EAAAoB,cAACuT,EAAA,EAAD,SAAkBxT,EAAAnB,EAAAoB,cAACwT,GAAD,MAAlB,KAAgDC,SAASC,eAAe,SD0HpF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c586a249.chunk.js","sourcesContent":["import {Sampler} from 'tone'\r\n\r\n\r\nclass SoundMachineInstrument extends Sampler {\r\n\r\n    constructor(props) {\r\n        console.log('<SoundMachineInstrument>constructor', props.key)\r\n        var o = {\r\n            \"C3\" : props.samples[0],\r\n            \"C#3\" : props.samples[1],\r\n            \"D3\" : props.samples[2],\r\n        };\r\n        super(o,{\r\n            baseUrl: props.baseUrl || './audio/' + props.key + '/'\r\n        });\r\n        this.key = props.key;\r\n        this.label = props.label;\r\n    }\r\n}\r\n\r\nexport default SoundMachineInstrument;\r\n\r\n ","export const accentTypes = {\r\n\tACCENT_1: 0,\r\n\tACCENT_2: 1,\r\n\tACCENT_3: 2\r\n};","import React, { Component } from \"react\";\r\nimport SoundMachineInstrument from \"./SoundMachineInstrument\"\r\n\r\nexport const instruments = {\r\n\tTABLA: \"tabla\",\r\n\tELECTRO_KIT: \"electrokit\"\r\n\t// ACOUSTIC_KIT: \"acoustic_kit\"\r\n};\r\n\r\nclass InstrumentLib extends Component {\r\n\tstate = {};\r\n    lib = {};\r\n    currentInstrument = undefined\r\n\r\n\r\n    constructor(defaultInstrument) {\r\n        super();\r\n    \r\n        //Tone.Buffer.on(\"load\", () => this.onBufferLoaded());\r\n\t\tvar tabla = new SoundMachineInstrument({\r\n            key: instruments.TABLA,\r\n            label: \"Tabla\",\r\n\t\t\tsamples: [\"dha-slide.wav\", \"dhin-slide.wav\", \"tin.wav\"]\r\n        }).toMaster();\r\n        \r\n        this.lib[ tabla.key ] = tabla;\r\n    \r\n        var electro = new SoundMachineInstrument({\r\n            key: instruments.ELECTRO_KIT,\r\n            label: 'Electronic Kit',\r\n\t\t\tsamples: [\"Kick.wav\", \"HiHat.wav\", \"Snare.wav\"]\r\n        }).toMaster();\r\n        \r\n        this.lib[ electro.key ] = electro;\r\n\r\n        this.setInstrument(defaultInstrument)\r\n        \r\n        console.log('<InstrumentLib>done constructor')\r\n    }\r\n\r\n    setInstrument(key) {\r\n        if (this.lib[key] === undefined) {\r\n            throw new Error(\"InstrumentLib has no such instrument with given key: \" + key)\r\n        }\r\n        this.currentInstrument = key;\r\n    }\r\n \r\n    getInstrument() {\r\n        if (this.lib[this.currentInstrument] === undefined) {\r\n            throw new Error(\"There is no such instrument in InstrumentLib: \" + this.currentInstrument)\r\n        }\r\n        return this.lib[this.currentInstrument];\r\n    }\r\n\r\n\t// render() {\r\n\t// \treturn <div />;\r\n\t// }\r\n}\r\nexport default InstrumentLib;\r\n","import React, {Component} from 'react';\r\nimport {Container} from 'reactstrap'\r\nclass SimpleVis extends Component {\r\n    state = { \r\n        radius: 50,\r\n        height: 150\r\n    }\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n    }\r\n    setActive(idx)  {\r\n        //  console.log('setActive',idx)\r\n        // cap idx\r\n        // idx = idx % this.props.beats;\r\n\r\n        if (this.lastEl) {\r\n           this.lastEl.classList.remove('active')\r\n        }\r\n\r\n        // belts and braces \r\n        if (idx < this.props.beats) {\r\n            let el = this.refs[\"el\" + idx];\r\n            el.classList.add('active')\r\n            this.lastEl = el;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(a,b) {\r\n        //  console.log('<SimpleVis>componentDidUpdate');\r\n\r\n        // reposition elements\r\n        const width = this.myRef.current.offsetWidth;\r\n\r\n        let radius = width / 2 - 5;\r\n        // console.log('radius', radius)\r\n        let radDelta = 2*Math.PI / this.props.beats;\r\n\r\n        for (let i = 0 ; i < this.props.beats ; i++) {\r\n            let x =  this.state.radius * Math.sin(radDelta * i);\r\n            let y =  -this.state.radius * Math.cos(radDelta * i);\r\n     \r\n  \r\n            this.refs[\"el\" + i].style.position = 'absolute';\r\n            this.refs[\"el\" + i].style.left =  - 20 + width/2 + x + 'px';  // hardcoded numbers determined visually\r\n            this.refs[\"el\" + i].style.top = 50 +  y + 'px';\r\n        }   \r\n    }\r\n\r\n    renderCells(cell) {\r\n        let o = [];\r\n        // console.log('radDelta',radDelta)\r\n        for (let i = 0 ; i < this.props.beats ; i++) {\r\n            \r\n            o.push(<div ref={\"el\" + i}>{i+1}</div>);\r\n        }\r\n        return o\r\n    }\r\n\r\n    render() {  \r\n        return (\r\n        <Container>\r\n            <div ref={this.myRef} className=\"SimpleVis\" style={{ height: this.state.height}}>{this.renderCells()}</div>\r\n        </Container>);\r\n    }\r\n}\r\n \r\nexport default SimpleVis; \r\n\r\nSimpleVis.defaultProps = {\r\n    beats: 4\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Tone from \"tone\";\r\nimport SoundMachineInstrument from \"./SoundMachineInstrument\";\r\nimport { accentTypes } from \"./AccentTypes\";\r\nimport InstrumentLib, {instruments} from \"./InstrumentLib\";\r\nimport SimpleVis from \"./SimpleVis\"\r\n\r\n\r\nclass SoundMachine extends Component {\r\n\r\n\taccentNotes = [\"C3\", \"C#3\", \"D3\"]; // this stay in sync with AccentTypes\r\n\r\n\tinstrumentLib = undefined;\r\n\r\n\tcurrentBeat = 0;\r\n\tbeatsPerStep = 4;\t\r\n\r\n\r\n\tscore = [\"C3\", \"C#3\",\"C#3\",\"C#3\"];\r\n\r\n\tstate = {\r\n\t\t// currentBeat: 0,\r\n\t\t//isInitialized: false,\r\n\t\t// instrument: instruments.ELECTRO_KIT,\r\n\t\tisPlaying: false\r\n\t\t// cnt:0 \r\n\t};\r\n\r\n\taccents = [accentTypes.ACCENT_1]; // default with accent on first beat\r\n\tsamples = {};\r\n\r\n\tinstruments = {};\r\n\r\n\tpart = null;\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t// if (!props.beatsPerStep) {\r\n\t\t// \tthrow new Error(\"props.beatsPerStep is missing\");\r\n\t\t// }\r\n\t\t// this.state.beatsPerStep = props.beatsPerStep;\r\n\t\t// onAfterChange: null\r\n\t\t// onLoopEnd = props.onLoopEnd\r\n\r\n\t\t// init library\r\n\t\tthis.instrumentLib = new InstrumentLib(this.props.instrument)\r\n\t}\r\n\t\r\n\tonBufferError() {\r\n\t\tthrow new Error(\"Some buffers weren't found\")\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// reload/debug bell\r\n\t\tvar synth = new Tone.Synth().toMaster();\r\n\t\tsynth.triggerAttackRelease(\"A2\");\r\n\r\n\t\tTone.Buffer.on(\"error\", () => this.onBufferError());\r\n\r\n\t\t// Tone.Transport.on('stop', () => console.log('TRANSPORTstop'));\r\n\t\t// Tone.Transport.on('pause', () => console.log('TRANSPORT.pause'));\r\n\t\t// Tone.Transport.on('start', () => console.log('TRANSPORTstart'));\r\n\t\t// Tone.Transport.on('loop', () => console.log('TRANSPORT loop'));\r\n\t\t\r\n\t\tTone.context.latencyHint = \"playback\";\r\n\t\t\r\n\t\tlet repeat =  this.repeat;\r\n\r\n\t\t// Tone.Transport.scheduleRepeat(function(time){\r\n\t\t// \t//use the time argument to schedule a callback with Tone.Draw\r\n\t\t// \tTone.Draw.schedule(updateVis, time)\r\n\t\t// }, \"4n\", 0)\r\n\t\t\r\n\t\tTone.Transport.scheduleRepeat((time) => repeat(time), \"4n\", 0);\r\n\r\n\t\tthis.loopEndEvent = new Tone.Event(function(time, onLoopEndFunc) {\r\n\t\t\t// console.log('loop has finished!',time)\r\n\t\t\tonLoopEndFunc();\r\n\t\t}, this.props.onLoopEnd);\r\n\r\n\t\tthis.loopEndEvent.loop = true;\r\n\t\t\r\n\t\t\r\n\r\n\t\t// TODO: dispatch ready event, so we can enable UI elements\r\n\t}\r\n\r\n\trepeat = (time) => {\r\n\t\tlet idx = this.currentBeat++ % this.beatsPerStep;\r\n\t\t\r\n\t\tlet note = this.score[idx];\r\n\t\t// console.log('play note', note, time)\r\n\t\t// debugger\r\n\t\tthis.instrumentLib.getInstrument().triggerAttackRelease(note, \"4n\", time);\r\n\t\tlet updateVis = this.updateVis;\r\n\r\n\t\tTone.Draw.schedule(() => updateVis(idx), time)\r\n\t\t\r\n\r\n\t\t\r\n\t\t// init with ACCENT_2 note, it will be changed in setAccents\r\n\t\t// for (let i = 0; i < this.state.beatsPerStep; i++) {\r\n\t\t// \tscore.push([\"0:\" + i, this.accentNotes[accentTypes.ACCENT_2]]);\r\n\t\t// }\r\n\r\n\t}\r\n\r\n\tsetInstrument(instrumentKey) {\r\n\t\tthis.instrumentLib.setInstrument(instrumentKey);\r\n\t}\r\n\r\n\tgetCurrentInstrumentLabel() {\r\n\t\treturn this.instrumentLib.getInstrument().label;\r\n\t}\r\n\r\n\tsetBpm = bpm => {\r\n\t\tTone.Transport.bpm.value = bpm;\r\n\t};\r\n\r\n\tsetBeatsPerStep = newBps => {\r\n\t\t// console.log(\"<SoundMachine>setBeatsPerStep\", newBps)\r\n\t\t\r\n\t \r\n\t\tthis.beatsPerStep = newBps;\r\n\t\t\r\n\t\t// remove if needed\r\n        while (this.score.length > newBps) {\r\n\t\t\tthis.score.pop();\r\n\t\t}\r\n\r\n\t\t// add if needed\r\n\t\twhile (this.score.length < newBps) {\r\n\t\t\tthis.score.push(accentTypes.ACCENT_1)\r\n\t\t}\r\n\t\t\r\n\t\tTone.Transport.timeSignature = [newBps, 4];\r\n\r\n\t\t// restart loopevent because score length has been changed\r\n\t\tthis.setLoopEnd(this.loopEndEvent.barsAmount);\r\n\r\n\t\t// this will refresh visualisation\r\n\t\tthis.setState({beatsPerStep: newBps})\r\n\t};\r\n\r\n\tupdateVis = (currentBeat) => {\r\n\t\t// console.log('updateVis.currentBeat', currentBeat, Tone.Transport.progress)\r\n\t\t\r\n\r\n\t\tthis.refs.vis.setActive(currentBeat)\r\n\t}\r\n\r\n\tplayNote = (time, note) => {\r\n\t\tthis.instrumentLib.getInstrument().triggerAttackRelease(note, \"4n\", time);\r\n\t}\r\n \r\n\tsetLoopEnd(bars) {\r\n\t\t// console.log('<SM>setLoopEnd', bars)\r\n\t\tthis.loopEndEvent.cancel();\r\n\r\n\r\n\t\tthis.loopEndEvent.barsAmount = bars;\r\n\t\t\r\n\t\tthis.loopEndEvent.loopEnd = this.loopEndEvent.barsAmount + \"m\"; \r\n\t\tthis.loopEndEvent.loop = true;\r\n\t\tthis.loopEndEvent.start(  this.loopEndEvent.barsAmount + \"m\") \r\n\t}\r\n\tsetAccents(accentTypesArr) {\r\n\t\t// if (accentTypesArr.length != this.part.length) {\r\n\t\t//     throw new Error(\"accentTypes has incorrect number of elements \" + accentTypesArr.length + \" vs \" + this.part.length)\r\n\t\t// }\r\n\t\tthis.accents = accentTypesArr;\r\n\t\t\r\n\t\tfor (let i = 0; i < this.score.length; i++) {\r\n\t\t\t// by default 2 will be the tick note\r\n\t\t\tlet note = this.accentNotes[accentTypes.ACCENT_2];\r\n\r\n\t\t\t// if accent for this step is specified set it here\r\n\t\t\tif (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_1\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_1];\r\n\t\t\t} else if (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_3\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_3];\r\n\t\t\t}\r\n\t\t\tthis.score[i] = note;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{width: '100%'}}>\r\n\t\t\t\t<div>Sound is {this.state.isPlaying === true ? \"playing\" : \"stopped\"}</div>\r\n\t\t\t\t<SimpleVis ref=\"vis\" beats={this.state.beatsPerStep}/>\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\t\t// console.log(\"<SoundMachine>stop()\");\r\n\t\tthis.setState({ isPlaying: false });\r\n\t\tthis.currentBeat = 0;\r\n\r\n\t\tTone.Transport.stop();\r\n\t}\r\n\r\n\tstart() {\r\n\t\t// console.log(\"<SoundMachine>start()\");\r\n\r\n\t\tthis.setState({ isPlaying: true });\r\n\t\t\r\n\t\tTone.Transport.start(\"+0.1\");\r\n\r\n\t}\r\n\r\n\tgetBpm = () => {\r\n\t\treturn Tone.Transport.bpm.value;\r\n\t};\r\n}\r\n\r\nexport default SoundMachine;\r\n\r\n\r\nSoundMachine.defaultProps = {\r\n\tbeatsPerStep: 4,\r\n\tonLoopEnd: null\r\n };","export const playModes = {\r\n\tBY_BAR: \"by_bar\",\r\n\tBY_TIME: \"by_time\"\r\n};","import React, { Component } from 'react';\r\nimport {Container, Col} from 'reactstrap';\r\n\r\nclass SimpleProgress extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( <Container className=\"SimpleProgress\">\r\n            <div className=\"bar\" style={{width: this.props.value  + \"%\", display: 'block'}} />\r\n            {/* <div style={{backgroundColor: 'red', width: this.props.value  + \"%\" }}>{this.props.value.toFixed(0) }</div> */}\r\n            {/* <Col style={{backgroundColor: 'red'}} width=\"20px\">\r\n                progress {this.props.value}\r\n            </Col> */}\r\n        </Container> );\r\n    }\r\n}\r\n \r\nexport default SimpleProgress;","const Utils = {\r\n    padTime: function(t) {\r\n\t\treturn t < 10 ? \"0\" + t : t;\r\n\t},\r\n\tformatTime: function(timeInSeconds) {\r\n\t\t//{this.leadingZeroCheck(now.getMinutes())}:{now.getSeconds()} --\r\n\t\tlet t = new Date(0, 0, 0, 0, 0, 0, 0);\r\n\t\tt.setSeconds(timeInSeconds);\r\n\t\tlet m = t.getMinutes();\r\n\t\tlet o = \"\";\r\n\t\tif (m !== 0) {\r\n\t\t\to += t.getMinutes(); //this.padTime(t.getMinutes());\r\n            o += \":\";\r\n            o += \"\" + Utils.padTime(t.getSeconds());\r\n        }\r\n        else {\r\n            o += t.getSeconds();\r\n        }\r\n\t\treturn o;\r\n    }\r\n}\r\n\r\nexport default Utils;","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { playModes } from \"./PlayModes\";\r\nimport Tone  from \"tone\"\r\nimport SimpleProgress from \"./SimpleProgress\";\r\nimport  Utils  from \"./Utils\"\r\n\r\nclass Planner extends Component {\r\n\tstate = {\r\n\t\tbars: [],\r\n\t\tstepProgress: 0\r\n\t};\r\n\r\n\ttimer = {\r\n\t\tref: null,\r\n\t\tstartTime: null\r\n\t};\r\n\tstepsCounter = 0;\r\n\tstepProgressUpdateInterval = 50;\t// in ms\r\n\r\n\tmakePlan(s) {\r\n \r\n\t\tconst min = s.bpmRange[0];\r\n\t\tconst max = s.bpmRange[1];\r\n\r\n\t\tlet segments = [];\r\n\t\tlet bpm = min;\r\n\r\n\t\tif (s.playMode === playModes.BY_BAR) {\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tlet segment = {\r\n\t\t\t\t\tbpm: bpm,\r\n\t\t\t\t\tend: s.interval\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tlet i = 0;\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tlet segment = {\r\n\t\t\t\t\ttime: i * s.interval,\r\n\t\t\t\t\tstart: i * s.interval,\r\n\t\t\t\t\tend: i * s.interval + s.interval,\r\n\t\t\t\t\tbpm: bpm\r\n\t\t\t\t}\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\t \r\n\t\t\t\r\n\t\t}\r\n\t\treturn segments;\r\n\t}\r\n \r\n\t// TODO: this is ugly\r\n\tsetPlan(uiStateObject) {\r\n\t\tconst plan = this.makePlan(uiStateObject);\r\n\r\n\t\t// console.log(\"<Planner>setPlan\", plan);\r\n\t\tvar bars = [];\r\n \r\n\t\tlet totalPlanTime = 0;\r\n\t\tconst playMode = uiStateObject.playMode;\r\n\r\n\t\tif (uiStateObject.playMode === playModes.BY_BAR) {\r\n\t\t\tfor (var i = 0; i < plan.length; i++) {\r\n\t\t\t\tconst bar = {\r\n\t\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\t\tend: plan[i].end,\r\n\t\t\t\t\tstep: this.stepsCounter++\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\ttotalPlanTime += 60 / plan[i].bpm  * uiStateObject.beatsPerStep * plan[i].end;\t\r\n\t\t\t\tbars.push(bar);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (var i = 0; i < plan.length; i++) {\r\n\t\t\t\tconst bar = {\r\n\t\t\t\t\ttime: plan[i].time,\r\n\t\t\t\t\ttimeEnd: plan[i].end,\r\n\t\t\t\t\tsegmentDuration: plan[i].end - plan[i].time,\r\n\t\t\t\t\tstartTimeFormatted: Utils.formatTime(plan[i].start),\r\n\t\t\t\t\tendTimeFormatted: Utils.formatTime(plan[i].end),\r\n\t\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\t\tstep: this.stepsCounter++\r\n\t\t\t\t};\r\n\r\n\t\t\t\ttotalPlanTime += plan[i].end;\r\n\t\t\t\t\r\n\t\t\t\tbars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// update to new state\r\n\t\tthis.stepsCounter = 0;\r\n\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({\r\n\t\t\t \ttotalPlanTime:  totalPlanTime,\r\n\t\t\t\tcurrentStep: 0,\r\n\t\t\t\tbars: bars,\r\n\t\t\t\tplayMode: playMode\r\n\t\t\t}),\r\n\t\t\t() => this.planChanged()\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\t\t// console.log(\"lockBpm\", this.props.lockBpm);\r\n\t\tif (this.timer) {\r\n\t\t\t// clear timer\r\n\t\t\tclearInterval(this.timer.ref);\r\n\t\t\tthis.timer = undefined;\r\n\t\t}\r\n\r\n\t\t\r\n\t\tif (this.stepProgressUpdateTimer) {\r\n\t\t\t// console.log('clearing stepProgressUpdateTimer')\r\n\t\t\tclearInterval(this.stepProgressUpdateTimer);\r\n\t\t\tthis.stepProgressUpdateTimer = undefined\r\n\t\t}\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\t\r\n\tonInterval() {\r\n\t\t// console.log(\"<Planner>onInterval\");\r\n\t\tif (this.props.lockBpm) {\r\n\t\t\t// console.log(\"<Planner>isLocked == true so don't advance anything\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar currentStep = this.state.currentStep;\r\n\r\n\t\t// check if we're not at the end of plan\r\n\t\tif (currentStep + 1 >= this.state.bars.length) {\r\n\t\t\t// console.log(\"no more steps, please stop()\");\r\n\t\t\tif (this.timer) {\r\n\t\t\t\tclearInterval(this.timer.ref);\r\n\t\t\t\tthis.time = undefined;\r\n\t\t\t}\r\n\t\t\tthis.props.onAdvance(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// console.log(\"<Planner>onInterval\", this.state.currentStep + 1);\r\n\t\t// console.log('<Planner>advancing step to' , currentStep + 1)\r\n\t\tthis.setState({ currentStep: currentStep + 1 });\r\n\t\t// console.log('returning' , this.state.currentStep)\r\n\t\tthis.props.onAdvance(this.state.bars[this.state.currentStep]);\r\n\t}\r\n\r\n\tstart() {\r\n\t\t// console.log(\"<Planner>start()\");\r\n\t\t// debugger\r\n\t\t// make sure we dispose any timer that's currently set\r\n\t\tif (this.timer) {\r\n\t\t\t// console.log(\"<Planner>startTimer() old timer disposed\");\r\n\t\t\tclearInterval(this.timer.ref);\r\n\t\t\tthis.timer.ref = undefined;\r\n\t\t\tthis.timer.startTime = null;\r\n\t\t\tthis.resetStep();\r\n\t\t}\r\n\r\n\t\t\r\n\t\t// if we step forward after time interval, then set the timer func here\r\n\t\tif (this.state.playMode === playModes.BY_TIME) {\r\n\t\t\t// we're in playMode === BY_TIME mode\r\n\t\t\t// calc segment length between steps and set timer for such\r\n\t\t\tconst time =\r\n\t\t\t\t1000 *\r\n\t\t\t\t(this.state.bars[this.state.currentStep].timeEnd -\r\n\t\t\t\t\tthis.state.bars[this.state.currentStep].time);\r\n\t\t\tvar onInterval = this.onInterval.bind(this);\r\n\t\t\t// console.log(\"setting interval\", time);\r\n\r\n\t\t\tthis.timer = {\r\n\t\t\t\tref: setInterval(onInterval, time),\r\n\t\t\t\tstartTime: new Date() \r\n\t\t\t};\r\n\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.stepProgressUpdateTimer) {\r\n\t\t\tthis.stepProgressUpdateTimer = setInterval(() => this.updateStepProgress(), this.stepProgressUpdateInterval);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tsetProgressEvent(event) {\r\n\t\t// if (this.state.playMode === playModes.BY_BAR) {\r\n\t\tthis.event = event;\r\n\t\t// }\r\n\t}\r\n\r\n\tupdateStepProgress() {\r\n\t\t\r\n\t\tif (this.props.lockBpm) {\r\n \t\t\treturn\r\n\t\t}\r\n\t\t// console.log('updateStepProgress()', this.event.progress)\r\n\t\tconst bar = this.getCurrentBar();\r\n\t\tlet progress = 0;\r\n\r\n\t\tif (this.state.playMode === playModes.BY_BAR) {\r\n\t\t\tprogress = \tthis.event.progress\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tlet now = Date.now() - this.timer.startTime.getTime();\r\n\t\t\t// console.log('lockstart',this.timer.lockStart);\r\n\t\t\t// console.log(' this.timer.startTime.getTime()', this.timer.startTime.getTime())\r\n\t\t\tconst elapsedTime = now - ( bar.segmentDuration * bar.step ) * 1000;\r\n\t\t\tprogress = \t(elapsedTime / bar.segmentDuration) / 1000\r\n\t\t\t// console.log('progress %f, elapsed %d', progress,elapsedTime)\r\n\t\t\tconsole.log('BY_TIME')\r\n\t\t}\r\n\t\t// cheat\r\n\t\tif (progress > 1) {\r\n\t\t\tprogress = 1;\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({stepProgress:  progress})\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.stepsCounter = 0;\r\n\t\tthis.setState({ bars: [], currentStep: 0 });\r\n\t\tthis.planChanged();\r\n\t}\r\n\r\n\tplanChanged = () => {\r\n\t\tconsole.log(\"<Planner>planChanged\");\r\n\t\tif (this.props.onChange) {\r\n\t\t\t// console.log(\"<Planner>fire onChange\");\r\n\t\t\tthis.props.onChange();\r\n\t\t}\r\n\t};\r\n\r\n\tresetStep() {\r\n\t\tthis.setState({ currentStep: 0 });\r\n\t\tthis.props.onAdvance(this.state.bars[0]);\r\n\t}\r\n\r\n\tgetCurrentBar() {\r\n\t\tif (this.state.currentStep >= this.state.bars.length) {\r\n\t\t\tthrow new Error(\"Trying to get step that doesn't exists\");\r\n\t\t}\r\n\t\treturn this.state.bars[this.state.currentStep];\r\n\t}\r\n\r\n\tonStepClick(idx) {\r\n\t\tthis.setState({ currentStep: idx }, () =>\r\n\t\t\tthis.props.onAdvance(this.state.bars[this.state.currentStep])\r\n\t\t);\r\n\t}\r\n\r\n\tbarRender = b => {\r\n\t\tconst cls = this.state.currentStep === b.step ? \"current-step\" : \"\";\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => this.onStepClick(b.step)}\r\n\t\t\t\tclassName={\"step \" + cls}\r\n\t\t\t\tkey={\"key_\" + b.bpm}\r\n\t\t\t>\r\n\t\t\t\t{b.segmentDuration !== undefined\r\n\t\t\t\t\t? Utils.formatTime(b.segmentDuration.toFixed(0)) + \" \"\r\n\t\t\t\t\t: b.end + \" bars \"}\r\n\t\t\t\t at {b.bpm.toFixed(0)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\t// console.log(\"<Planner> render\");\r\n\t\t// don't doo much if no plan yet\r\n\t\tif (this.state.bars.length === 0) {\r\n\t\t\treturn <div>No plan</div>;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Container className=\"Planner\">\r\n\t\t\t\t{/* <div>Next step in {this.state.stepProgress.toFixed(1)} seconds</div> */}\r\n\t\t\t\t<SimpleProgress value={this.state.stepProgress  * 100}/>\r\n\t\t\t\t<div style={this.props.lockBpm ? { opacity: 0.5 } : {}}>\r\n\t\t\t\t\t{this.state.bars.map(bar => this.barRender(bar))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>Total time: {Utils.formatTime(this.state.totalPlanTime)}</div>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n\r\n\t\r\n}\r\n\r\nexport default Planner;\r\n\r\nPlanner.defaultProps = {\r\n\tplayMode: playModes.BY_BAR,\r\n\tcurrentStep: 0\r\n}\t","import React from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { Badge, Row , Col} from \"reactstrap\";\r\n// import {Container, Row, Col} from 'reactstrap'\r\n\r\nclass AdvancedSlider extends Slider {\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Badge onClick={this.onBadgeClick} className=\"d-i\">\r\n\t\t\t\t\t\t{this.state.value}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{height:'30px'}}>\r\n\t\t\t\t\t<div>{super.render()}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonBadgeClick() {\r\n\t\t// TODO attach editorInPlace\r\n\t}\r\n}\r\n\r\nexport default AdvancedSlider;\r\n","import React from 'react'\r\nimport { Range } from 'rc-slider'\r\nimport {Badge} from 'reactstrap'\r\n\r\nclass AdvancedRange extends Range {\r\n    render() { \r\n        return (<div>\r\n            {super.render()}\r\n            <Badge onClick={this.onBadgeClick} className=\"d-i\">{this.state.bounds[0]} - {this.state.bounds[1]}</Badge>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default AdvancedRange;\r\n","import React, { Component } from \"react\";\r\nimport { Button, ButtonGroup } from \"reactstrap\";\r\nimport { accentTypes } from \"./AccentTypes\";\r\n\r\n\r\nclass BarManager extends Component {\r\n\tstate = {\r\n\t\tbars: []\r\n\t};\r\n\r\n\taccents = [accentTypes.ACCENT_1,accentTypes.ACCENT_2,accentTypes.ACCENT_3];\r\n\tconstructor(props) {\r\n\t\tsuper(props);\t\t\r\n\t\tthis.state.bars = props.defaultValue;\r\n\t}\r\n\r\n\tprepareBars_O(accents) {\r\n\t\tconst prevVal = this.getValue();\r\n\r\n\t\tlet  bars = [];\r\n\t\tfor (let i = 0; i < accents.length; i++) {\r\n\t\t\tbars.push(prevVal[i]  !== undefined ? prevVal[i] : accents[i]);\r\n\t\t}\r\n\t\treturn bars;\r\n\t}\r\n\r\n\tsetBeatsAmount_O(amount) {\r\n\t\tlet bars = this.prepareBars(amount);\r\n\t\t// set state and send onAfterChange once updated as they have changed surely (at least the amount)\r\n\t\tthis.setState({ bars: [...bars] },  this.props.onAfterChange);\r\n\t}\r\n\r\n\tsetAccents(accents, beatsPerStep) {\r\n \t\tthis.setState({bars: accents}, this.props.onAfterChange);\r\n\t}\r\n\r\n\thandleCellClick(selected) {\r\n\t\t// old type\r\n\t\tconst type = this.state.bars[selected]\r\n\t\t\r\n\t\t// new type\r\n\t\tlet newType = this.accents[(type + 1 ) % 3];\r\n\t\t\r\n\t\tthis.state.bars[selected] = newType;\r\n\t\tthis.forceUpdate();\r\n\r\n\t\t/// hmm good patern to update arrays in state, doesn't want to lose it \r\n\t\t// const index = this.state.accentBars.indexOf(selected);\r\n\t\t// if (index < 0) {\r\n\t\t// \tthis.state.accentBars.push(selected);\r\n\t\t// } else {\r\n\t\t// \tthis.state.accentBars.splice(index, 1);\r\n\t\t// }\r\n\t\t// this.setState({ accentBars: [...this.state.accentBars] });\r\n\t}\r\n\r\n\tgetAccents() {\r\n\t\treturn this.state.bars;\r\n\t}\r\n\r\n\t\r\n\tgetValue_o() {\r\n\t\treturn this.state.bars;\r\n\t}\r\n\r\n\tgetBtnColor(type) {\r\n\t\tvar color;\r\n\t\tswitch (type) {\r\n\t\t\tcase accentTypes.ACCENT_2:\r\n\t\t\t\tcolor = \"secondary\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase accentTypes.ACCENT_3:\r\n\t\t\t\tcolor = \"warning\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tcolor = \"primary\"\r\n\t\t}\r\n\t\treturn color;\r\n\t}\r\n\r\n\trenderCells = bars => {\r\n\t\treturn bars.map((bar,idx) => (\r\n\t\t\t<Button\r\n\t\t\t\tsize=\"sm\"\r\n\t\t\t\t color={this.getBtnColor(bar)}\r\n\t\t\t\t// className=\"btn-state-1\"\r\n\t\t\t\tkey={\"barkey_\" + idx}\r\n\t\t\t\tonClick={() => this.handleCellClick(idx)}\r\n\t\t\t\t// active={!this.state.accentBars.includes(bar)}\r\n\t\t\t>\r\n\t\t\t\t{idx + 1}\r\n\t\t\t</Button>\r\n\t\t));\r\n\t};\r\n\r\n\trender() {\r\n\t\t// I'm starting to realize how this works finally\r\n\t\tconst { onAfterChange } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<ButtonGroup onClick={onAfterChange}>\r\n\t\t\t\t{this.renderCells(this.state.bars)}\r\n\t\t\t</ButtonGroup>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BarManager;\r\n","import React, { Component } from \"react\";\r\nimport { Input, Button, Modal, ModalHeader, ModalBody, ModalFooter} from \"reactstrap\";\r\n\r\nclass SavePresetModal extends Component {\r\n\tstate = {};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmodal: false\r\n\t\t  };\r\n\t  \r\n\t\tthis.toggle = this.toggle.bind(this);\r\n\t}\r\n\r\n\ttoggle() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t  modal: !prevState.modal\r\n\t\t}));\r\n\t  }\r\n\t\r\n\thandleSave() {\r\n\t\tconst title = this.state.title;\r\n\t\tconst preset = this.props.preset;\r\n\t\tif (title && title.length > 0) {\r\n\t\t\tthis.props.onSave(title, preset);\r\n\t\t\tthis.toggle();\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button  size=\"sm\" variant=\"primary\" onClick={this.toggle}>\r\n\t\t\t\t\tSave Preset\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n\t\t\t\t<ModalHeader toggle={this.toggle}>Save Preset</ModalHeader>\r\n\t\t\t\t<ModalBody>\r\n\t\t\t\t\t<Input onChange={e => this.setState({title: e.target.value})}/>\r\n\t\t\t\t\t<div>{JSON.stringify(this.props.preset)}</div>\r\n\t\t\t\t</ModalBody>\r\n\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t<Button color=\"primary\" onClick={() => this.handleSave()}>Save</Button>{' '}\r\n\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n\t\t\t\t</ModalFooter>\r\n\t\t\t\t</Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SavePresetModal;\r\n","import React, { Component } from \"react\";\r\nimport {Button, Container, Row, Col } from \"reactstrap\";\r\nimport SavePresetModal from \"./SavePresetModal\"\r\n\r\nclass PresetsManager extends Component {\r\n\tstate = {\r\n\t\tshowDelete: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.userPresets = this.props.cookies.get('userPresets');\r\n\t\t\r\n\t\tthis.state.showDelete = Array(this.userPresets.length).fill(false);\r\n\t}\r\n\t\r\n\tonPresetClick(preset) {\r\n\t\t// make sure we set this in props\r\n\t\tthis.props.onSelect(preset);\r\n\t}\r\n\r\n\tonSavePreset(title, o) {\r\n\t\tconst preset = {title: title, ...o}\r\n\t\t\r\n\t\tlet userPresets = this.props.cookies.get('userPresets');\r\n\r\n\t\tif (!userPresets) {\r\n\t\t\tuserPresets = [];\r\n\t\t}\r\n\t\t\r\n\t\t// overwrite by title \r\n\t\tlet idx = -1;\r\n\r\n\t\tfor (let i = 0 ; i < userPresets.length; i++) {\r\n\t\t\tif (userPresets[i].title.toLowerCase() === title.toLowerCase()) {\r\n\t\t\t\tidx = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (idx < 0) {\r\n\t\t\tuserPresets.push(preset)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tuserPresets[idx] = preset;\r\n\t\t}\r\n\r\n\t\tthis.saveInCookie(userPresets);\r\n\t}\r\n\r\n\tsaveInCookie(presets) {\r\n\t\tthis.props.cookies.set('userPresets', JSON.stringify(presets),{ path: '/' });\r\n\t\tthis.userPresets = presets;\r\n\t}\r\n\r\n\tshowDeleteBtn(e, idx) {\r\n\t\tlet showDelete = {...this.state};\r\n\t\tshowDelete[idx] = true;\r\n\t\tthis.setState({showDelete});\r\n\t}\r\n\thideDeleteBtn(e) {\r\n\t\tthis.setState({showDelete: false})\r\n\t}\r\n\tonPresetDelete(idx) {\r\n\t\tthis.userPresets.splice(idx,1);\r\n\t\tthis.saveInCookie(this.userPresets);\r\n\t}\r\n\r\n\trender() {\r\n\t\t// const  presets = [...this.props.presets,}\r\n\t\tconst userPresets = this.props.cookies.cookies.userPresets ?  JSON.parse(  this.props.cookies.cookies.userPresets ) : [];\r\n\t\t// console.log('<PresetsManager>userPresets', userPresets)\r\n\t\treturn (\r\n\t\t\t<Container className=\"PresetsManager\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{this.props.presets.map((item, idx) => (\r\n\t\t\t\t\t\t<Col className=\"preset\"\r\n\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\tmy presets:\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{userPresets.map((item, idx) => (\r\n\t\t\t\t\t\t<Col className=\"preset\"\r\n\t\t\t\t\t\t\tonMouseEnter={(e) => this.showDeleteBtn(e, idx)}\r\n\t\t\t\t\t\t\tonMouseLeave={(e) => this.hideDeleteBtn(e, idx)}\r\n\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t\t<div class='x' style={{visibility: this.state.showDelete[idx] ? '' : 'hidden'}} onClick={() => this.onPresetDelete(idx)}>x</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<SavePresetModal preset={this.props.preset} onSave={(title, preset) => this.onSavePreset(title, preset)}/>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PresetsManager;\r\n","import React, { Component } from 'react';\r\nimport {Container, Row, Col} from 'reactstrap'\r\n\r\nclass SimplePanel extends Component {\r\n    render() { \r\n        return (\r\n            <Container className={\"pane \" + this.props.className}>\r\n\t\t\t\t<Row className=\"pane-title\">{this.props.title}</Row>\r\n\t\t\t\t<Row className=\"pane-body\">{this.props.children}</Row>\r\n            </Container>\r\n            );\r\n    }\r\n}\r\n \r\nexport default SimplePanel;\r\n\r\n\r\nSimplePanel.defaultProps = {\r\n    title: 'title',\r\n    children: [],\r\n    className: ''\r\n };","import React, { Component } from 'react';\r\nimport AdvancedSlider from './AdvancedSlider'\r\nimport Slider from 'rc-slider'\r\nimport regression from 'regression';\r\nimport {Badge} from 'reactstrap'\r\nimport Utils from \"./Utils\"\r\n\r\n\r\nclass GeometricSlider extends Component {\r\n\tstate = {\r\n        value: 0,\r\n        delta: 1,\r\n        regression: undefined\r\n\t};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        const d = [[1,this.props.min],[100, this.props.max]];\r\n        this.state.regression = regression.power(d, {precision:10})\r\n\r\n        this.marks = {};\r\n\r\n        const marksTotal = 4;\r\n        for (let i = 0; i <= 100; i+=100/(this.props.marksNum-1)) {\r\n            this.marks[i] = this.makeMark(i);\r\n        }\r\n    }\r\n\r\n\r\n    makeMark(v) {\r\n        return {\r\n            label: this.props.formatter(\r\n                Math.floor( this.state.regression.predict(v)[1] )\r\n            ),\r\n            style: this.props.marksStyle\r\n        };\r\n    }\r\n\r\n    onChange(v) {\r\n        const value =  Math.floor(this.state.regression.predict(v)[1]);\r\n        this.setState({value: value})\r\n        this.props.onChange(value)\r\n    }\r\n \r\n    render() {\r\n        // debugger\r\n        return(\r\n            <>\r\n            \t<div>\r\n\t\t\t\t\t<Badge onClick={this.onBadgeClick} className=\"d-i\">\r\n\t\t\t\t\t\t{this.props.formatter(this.state.value)}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n                <Slider  style={{height: '45px'}} onChange={(v) => this.onChange(v)} min={1} max={100} step={0.2} marks={this.marks}/>\r\n            </>\r\n        )\r\n\r\n    }\r\n    \r\n}\r\n \r\nexport default GeometricSlider;\r\n\r\nGeometricSlider.defaultProps = {\r\n    marksNum: 6,\r\n    marksStyle: {\r\n        color: '#ccc'\r\n    },\r\n    formatter: function(v) {return v;}\r\n}","import React, { Component } from \"react\";\r\nimport SimplePanel from \"./SimplePanel\";\r\nimport {Container, Row, Col, ButtonGroup, Button, Collapse, Input, ButtonDropdown, DropdownToggle, DropdownItem, DropdownMenu, InputGroup} from \"reactstrap\";\r\nimport { playModes } from \"./PlayModes\"\r\nimport Slider from 'rc-slider'\r\nimport GeometricSlider from \"./GeometricSlider\";\r\nimport AdvancedSlider from \"./AdvancedSlider\";\r\nimport { func } from \"prop-types\";\r\nimport Utils from \"./Utils\";\r\n\r\n\r\nclass ModePanel extends Component {\r\n\tstate = {\r\n\t\tplayMode: playModes.BY_TIME,\r\n\t\tbpmStep: 10,\r\n        bpmStepDropdownOpen: false,\r\n        byTimeInterval: 5,\r\n        byBarInterval: 2\r\n    };\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state.playMode = props.playMode;\r\n\t\tif (props.playMode === playModes.BY_BAR) {\r\n\t\t\tthis.state.byBarInterval = props.interval;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.state.byTimeInterval  = props.interval;\r\n\t\t}\r\n\t\tthis.state.bpmStep = props.bpmStep;\r\n\t\t// debugger\r\n\t}\r\n\r\n\tonModeChange(newMode) {\r\n        this.setState({ playMode: newMode }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBpmStepChange() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tbpmStepDropdownOpen: !prevState.bpmStepDropdownOpen\r\n        }),);\r\n\t}\r\n\r\n\tonBpmStepSelect(value) {\r\n\t\tthis.setState({ bpmStep: value }, this.props.onAfterChange);\r\n\t}\r\n\r\n    getValue() {\r\n        const o = {\r\n            playMode: this.state.playMode,\r\n            interval: this.state.playMode === playModes.BY_BAR ? this.state.byBarInterval : this.state.byTimeInterval,\r\n            bpmStep: this.state.bpmStep\r\n\t\t}\r\n\t\treturn o;\r\n\t}\r\n\t\r\n\tsetValue(o) {\r\n\t\tthis.setState({\r\n\t\t\tplayMode: o.playMode,\r\n\t\t\tbpmStep: o.bpmStep,\r\n\t\t\tbyBarInterval: o.playMode === playModes.BY_BAR ? o.interval : this.state.byBarInterval,\r\n\t\t\tbyTimeInterval: o.playMode === playModes.BY_TIME ? o.interval : this.state.byTimeInterval\r\n\t\t}, this.props.onAfterChange);\r\n\t}\r\n\r\n    // onInputChange(e) {\r\n\t// \tlet state = {};\r\n    //     state[e.target.name] = Number(e.target.value);\r\n    //     this.setState(state, this.props.onAfterChange);\r\n\t// }\r\n\t\r\n\tonTimeIntervalChange(v) {\r\n\t\tthis.setState({byTimeInterval: v}, this.props.onAfterChange)\r\n\t}\r\n\r\n\tonBarIntervalChange(v) {\r\n\t\tthis.setState({byBarInterval: v}, this.props.onAfterChange)\r\n\t}\r\n\r\n \r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SimplePanel title=\"Mode\"> \t\r\n\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.BY_BAR)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.BY_BAR}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBy bar\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.BY_TIME)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.BY_TIME}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBy time\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.BY_BAR}>\r\n\t\t\t\t\t<div>Increase speed every\r\n\t\t\t\t\t<GeometricSlider onChange={(v) => this.onBarIntervalChange(v)} min={1} max={300} />                   \r\n                   bars</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.BY_TIME}>\t\t\t \r\n\t\t\t\t\t<div>Increase speed every\r\n\t\t\t\t\t\t<GeometricSlider onChange={(v) => this.onTimeIntervalChange(v)} min={1} max={600}  formatter={Utils.formatTime}/>\r\n                    minutes</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</Collapse>\r\n                increase speed by\r\n                <ButtonDropdown bsSize=\"sm\" style={{margin: '0px 5px'}}\r\n\t\t\t\t\t\tisOpen={this.state.bpmStepDropdownOpen}\r\n\t\t\t\t\t\ttoggle={() => this.onBpmStepChange()}>\r\n\t\t\t\t\t\t<DropdownToggle caret size=\"sm\">\r\n\t\t\t\t\t\t\t{this.state.bpmStep}\r\n\t\t\t\t\t\t</DropdownToggle>\r\n\t\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => {this.onBpmStepSelect(5)}}>\r\n\t\t\t\t\t\t\t\t5\r\n\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => {this.onBpmStepSelect(10)}}>\r\n\t\t\t\t\t\t\t\t10\r\n\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => {this.onBpmStepSelect(20)}}>\r\n\t\t\t\t\t\t\t\t20\r\n\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => {this.onBpmStepSelect(30)}}>\r\n                             \t30\r\n\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t\t<DropdownItem onClick={() => {this.onBpmStepSelect(50)}}>\r\n\t\t\t\t\t\t\t\t50\r\n\t\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t\t</ButtonDropdown>\r\n\t\t\t\t\tbpm\r\n\t\t\t</SimplePanel>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModePanel;\r\n\r\nModePanel.defaultProps = {\r\n\tonAfterChange: null\r\n };","import {playModes} from \"./PlayModes\"\r\nimport InstrumentLib, { instruments } from \"./InstrumentLib\";\r\n\r\n\r\nexport const PresetsLib = [\r\n    {\r\n        title: \"4 beats every 4 bars\",\r\n        beatsPerStep: 4,\r\n        playMode: playModes.BY_BAR,\r\n        interval: 4,\r\n        bpmStep: 20,\r\n        bpmRange: [100, 400],\r\n        accents: [0, 1, 2, 1]\r\n    },\r\n    {\r\n\t\ttitle: \"5 beats, every 1min, electro\",\r\n\t\tbeatsPerStep: 5,\r\n\t\tbpmRange: [200, 400],\r\n        accents: [0, 1, 0, 0,2],\r\n        playMode: playModes.BY_TIME,\r\n        instrument: instruments.ELECTRO_KIT,\r\n        interval: 60,\r\n        bpmStep: 10\r\n    },\r\n    {\r\n        title: \"Jhaptal tabla\",\r\n        instrument: instruments.TABLA,\r\n\t\tbeatsPerStep: 10,\r\n\t\tbpmRange: [200, 400],\r\n        accents: [0, 1, 0, 0, 1, 2, 1, 0, 0, 1 ],\r\n        playMode: playModes.BY_TIME,\r\n        interval: 5*60,\r\n        bpmStep: 10\r\n    }\r\n];","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./components/SoundMachine\";\nimport SoundMachine from \"./components/SoundMachine\";\nimport Planner from \"./components/Planner\";\nimport \"rc-slider/assets/index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport {\n\tButtonDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem\n} from \"reactstrap\";\nimport AdvancedSlider from \"./components/AdvancedSlider\";\nimport AdvancedRange from \"./components/AdvancedRange\";\nimport BarManager from \"./components/BarManager\";\nimport  { instruments } from \"./components/InstrumentLib\";\nimport PresetsManager from \"./components/PresetsManager\";\nimport ModePanel from \"./components/ModePanel\";\nimport { playModes } from \"./components/PlayModes\";\nimport { withCookies } from \"react-cookie\";\nimport { PresetsLib } from \"./components/PresetsLib\";\nimport { accentTypes } from \"./components/AccentTypes\";\nimport  GeometricSlider  from \"./components/GeometricSlider\"\n\nclass App extends Component {\n\ttimer = {\n\t\ttimerRef: null,\n\t\tstartTime: null\n\t};\n\n\tstate = {\n\t\tcurrentBpm: 60,\n\t\tinstrument: instruments.ELECTRO_KIT,\n\t\tinstrumentDropdownOpen: false,\n\t\tinstrumentDropdownLabel: \"Electro kit\",\t// bit messy, why would we hardcode this here, it ought to be taken from instrumentLib\n\t\tcycleDropdownOpen: false,\n\t\tlockBpm: false\n\t};\n\n\tcomponentDidMount() {\n\t\t// initialize with UI settings\n\t\tthis.refs.planner.setPlan(this.getUiState());\n\n\t\t// pass the event so we know how to display progress when in BY_BAR mode\n\t\tthis.refs.planner.setProgressEvent(this.refs.sm.loopEndEvent);\n\t\n\t\t// initialize accents\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getAccents());\n\n\t}\n\n\n\tonInstrumentSelect(newInstrument) {\n\t\tthis.refs.sm.setInstrument(newInstrument);\n\t\tconst label = this.refs.sm.getCurrentInstrumentLabel();\n\t\tconsole.log('setting new instrument. state.instrument', newInstrument)\n\t\tthis.setState({ instrument: newInstrument, instrumentDropdownLabel: label });\n\t}\n\n\trenderCyclePane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">CYCLE</Row>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col xs={3}>Total time (min)</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"exerciseDuration\"\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmax={30}\n\t\t\t\t\t\t\tdefaultValue={1}\n\t\t\t\t\t\t\t// defaultValue={this.state.exerciseDuration / 60}\n\t\t\t\t\t\t\tonAfterChange={() => this.exerciseDurationChanged()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> */}\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Beats per step</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"beatsPerStep\"\n\t\t\t\t\t\t\tmin={2}\n\t\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\t\tdefaultValue={this.props.beatsPerStep}\n\t\t\t\t\t\t\tonAfterChange={() => this.onBeatsPerStepChange()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col xs={3}>Number of steps</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"totalSteps\"\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmax={60}\n\t\t\t\t\t\t\tdefaultValue={this.state.totalSteps}\n\t\t\t\t\t\t\tonAfterChange={() => this.totalStepsChanged()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> */}\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Accents</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<BarManager\n\t\t\t\t\t\t\tonAfterChange={() => this.onAccentsChange()}\n\t\t\t\t\t\t\tref=\"barManager\"\n\t\t\t\t\t\t\tdefaultValue={this.props.accents}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderTempoPane() {\n\t\t// debugger\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">RANGE</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"3\">BPM</Col>\n\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedRange\n\t\t\t\t\t\t\tref=\"bpmRange\"\n\t\t\t\t\t\t\tmin={30}\n\t\t\t\t\t\t\tmax={600}\n\t\t\t\t\t\t\tdefaultValue={[\n\t\t\t\t\t\t\t\tthis.props.bpmRange[0],\n\t\t\t\t\t\t\t\tthis.props.bpmRange[1]\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tpushable={true}\n\t\t\t\t\t\t\tonAfterChange={() => this.onBpmRangeChange()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderPlaybackPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">PLAYBACK</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"3\">Instrument</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\tisOpen={this.state.instrumentDropdownOpen}\n\t\t\t\t\t\t\ttoggle={() => this.onInstrumentChange()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DropdownToggle caret>\n\t\t\t\t\t\t\t\t{this.state.instrumentDropdownLabel}\n\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tinstruments.TABLA\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tTabla\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tinstruments.ELECTRO_KIT\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t Electro Kit\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col xs=\"3\">Playback</Col>\n\t\t\t\t\t<Col>One Time/LoopBack/Repeat</Col>\n\t\t\t\t</Row> */}\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonModePanelChanged() {\n\t\tconst state = this.getUiState();\n\n\t\tconsole.log(\"<App>onModePanelChanged\", state);\n\t\tthis.refs.planner.setPlan(state);\n\t\tif (state.playMode === playModes.BY_BAR) {\n\t\t\tthis.refs.sm.setLoopEnd(state.bars);\n\t\t}\n\t}\n\n\trenderMidPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderExamplesPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderVisPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col />\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\trenderLeftPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderTempoPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ModePanel\n\t\t\t\t\t\t\tref=\"modePanel\"\n\t\t\t\t\t\t\tplayMode={this.props.playMode}\n\t\t\t\t\t\t\tinterval={this.props.interval}\n\t\t\t\t\t\t\tbpmStep={this.props.bpmStep}\n\t\t\t\t\t\t\t// defaultValue={{playMode: this.props.playMode, interval: this.props.interval, bpmStep: this.props.bpmStep}}\n\t\t\t\t\t\t\tonAfterChange={() => this.onModePanelChanged()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPlaybackPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderCyclePane()}</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderExamplesPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">Presets</Row>\n\t\t\t\t<PresetsManager ref=\"presetsManager\"\n\t\t\t\t\tpreset={this.uiState}\n\t\t\t\t\t\n\t\t\t\t\tcookies={this.props.cookies}\n\t\t\t\t\tpresets={PresetsLib}\n\t\t\t\t\tonSelect={preset => this.onPresetSelect(preset)}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderVisPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">Visualisation</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<SoundMachine\n\t\t\t\t\t\tref=\"sm\"\n\t\t\t\t\t\tbeatsPerStep={this.state.beatsPerStep}\n\t\t\t\t\t\tonLoopEnd={() => this.onLoopEnd()}\n\t\t\t\t\t\t// onLoopEnd={ this.state.playMode === playModes.BY_BAR ?  () => this.onLoopEnd() : function(){}}\n\t\t\t\t\t\tinstrument={this.state.instrument}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonPresetSelect(preset) {\n\t\tconsole.log(\"setting preset\", preset);\n\n\t\t// this.setState({exerciseDuration: preset.exerciseDuration})\n\n\t\tthis.refs.bpmRange.setState({\n\t\t\tbounds: [preset.bpmRange[0], preset.bpmRange[1]]\n\t\t});\n\t\tthis.refs.beatsPerStep.setState({ value: preset.beatsPerStep });\n\t\t// this.refs.barManager.setBeatsAmount(preset.beatsPerStep);\n\t\tthis.refs.sm.setBeatsPerStep(preset.beatsPerStep);\n\t\t// this.refs.totalSteps.setState({ value: preset.totalSteps });\n\n\t\tthis.onInstrumentSelect(preset.instrument  || instruments.TABLA)\n\t\t\n\t\t\n\t\tthis.refs.barManager.setAccents(preset.accents, preset.beatsPerStep);\n\n\t\t// set mode\n\t\tthis.refs.modePanel.setValue(preset);\n\n\t\t// this.refs.exerciseDuration.setState(\n\t\t// \t{ value: preset.exerciseDuration },\n\t\t// \tthis.exerciseDurationChanged\n\t\t// );\n\n\t\t// this will trigger restart\n\t\t// this.exerciseDurationChanged()\n\t\t//this.refs.exerciseDuration.setState({value: 20})\n\t\t//this.exerciseDuration.setValue(preset.exerciseDuration)\n\t}\n\n\trenderPlanPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">Plan</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Planner\n\t\t\t\t\t\tlockBpm={this.state.lockBpm}\n\t\t\t\t\t\t//plan={(this.state)}\n\t\t\t\t\t\tonChange={() => this.onPlanChanged()}\n\t\t\t\t\t\tonAdvance={currentStep =>\n\t\t\t\t\t\t\tthis.onPlanAdvanced(currentStep)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tref=\"planner\"\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderRightPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Container className=\"pane\">\n\t\t\t\t\t\t\t<Row className=\"pane-title\">BPM</Row>\n\t\t\t\t\t\t\t<Row className={this.state.lockBpm ? \"locked\" : \"\"}>\n\t\t\t\t\t\t\t\t<Col> {this.state.currentBpm.toFixed(0)}</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPlanPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonLoopEnd() {\n\t\tconst s = this.getUiState();\n\t\tif (s.playMode === playModes.BY_BAR) {\n\t\t\tconsole.log(\"onLoopEnd fetched\");\n\t\t\tthis.refs.planner.onInterval();\n\t\t}\n\n\t\t// this.refs.sm.resetLoopEnd()\n\n\t\t// debugger\n\t\t// if (this.state.constantMode)\n\n\t\t// this.refs.sm.start();\n\t\t// debugger\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Container className=\"app-container\">\n\t\t\t\t\t{/* outer table */}\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* left pane with controls */}\n\t\t\t\t\t\t\t{this.renderLeftPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>{this.renderMidPane()}</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* right pane with examples and plan*/}\n\t\t\t\t\t\t\t{this.renderRightPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => this.handleStartStop()}\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tStart / Stop\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Button onClick={() => this.onLockBpmBtn()}>\n\t\t\t\t\t\t\t\tLock BPM\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{/* <Button onClick={() => this.onDebug()}>\n\t\t\t\t\t\t\t\tDebug\n\t\t\t\t\t\t\t</Button> */}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tonDebug() {\n\t\tthis.refs.sm.onDebug();\n\t}\n\n\tonLockBpmBtn() {\n\t\tthis.setState({ lockBpm: !this.state.lockBpm });\n\t}\n\n\t// totalStepsChanged = () => {\n\t// \tconst s = this.getUiState();\n\t// \tif (s.totalSteps !== this.state.totalSteps) {\n\t// \t\tthis.refs.planner.setPlan(s);\n\t// \t}\n\t// };\n\n\tonBeatsPerStepChange = () => {\n\t\t// plan doesn't change here, just the beats per step amount\n\t\tconst newBps =  this.getUiState().beatsPerStep;\n\n\t\tif (newBps !== this.refs.sm.beatsPerStep) {\n\t\t\tconst accents = this.refs.barManager.getAccents();\n\n\t\t\twhile (accents.length > newBps) {\n\t\t\t\taccents.pop();\n\t\t\t}\n\t\t\twhile (accents.length < newBps) {\n\t\t\t\taccents.push(accentTypes.ACCENT_2);\n\t\t\t}\n\t\t\t \n\t\t\tthis.refs.sm.setBeatsPerStep(newBps);\n\t\t\tthis.refs.barManager.setAccents(accents);\n\t\t\tthis.setState({ beatsPerStep: newBps });\n\t\t}\n\t};\n\n\tonBpmRangeChange() {\n\t\tconst s = this.getUiState();\n\t\tif (\n\t\t\ts.bpmRange[0] !== this.props.bpmRange[0] ||\n\t\t\ts.bpmRange[1] !== this.props.bpmRange[1]\n\t\t) {\n\t\t\tthis.setState({ bpmRange: s.bpmRange });\n\t\t\tthis.refs.planner.setPlan(s);\n\t\t}\n\t}\n \n\tonPlanAdvanced = newStep => {\n\t\tif (newStep) {\n\t\t\tconsole.log(\"<App>onPlanAdvanced() new step:\", newStep);\n\t\t\tthis.setBpm(newStep.bpm);\n\t\t} else {\n\t\t\t// no step so just stop planner and transport\n\t\t\tthis.refs.planner.stop();\n\t\t\tthis.refs.sm.stop();\n\t\t}\n\t};\n\n\tsetBpm = newBpm => {\n\t\tthis.setState({ currentBpm: newBpm });\n\t\tthis.refs.sm.setBpm(newBpm);\n\t};\n\n\tonPlanChanged = () => {\n\t\tconsole.log(\"<App>onPlanChanged\");\n\n\t\t// this.refs.planner.start();\n\t\tlet bar = this.refs.planner.getCurrentBar();\n\n\t\tthis.refs.sm.setLoopEnd(bar.end || false);\n\n\t\t// set initial speed\n\t\tif (bar) {\n\t\t\tthis.setBpm(bar.bpm);\n\t\t}\n\n\t\tif (this.refs.sm.state.isPlaying) {\n\t\t\tthis.refs.planner.start();\n\t\t}\n\t};\n\n\tonInstrumentChange() {\n\t\tthis.setState(prevState => ({\n\t\t\tinstrumentDropdownOpen: !prevState.instrumentDropdownOpen\n\t\t}));\n\t}\n\n\thandleStartStop = () => {\n\t\tif (this.refs.sm.state.isPlaying === true) {\n\t\t\tthis.refs.planner.stop();\n\t\t\tthis.refs.sm.stop();\n\t\t} else {\n\t\t\tthis.refs.planner.start();\n\t\t\tthis.refs.sm.start();\n\t\t}\n\t};\n\n\tgetUiState() {\n\t\t// obsolete, we're going to use new UI from ModePanel\n\t\tconst s1 = {\n\t\t\tbpmRange: this.refs.bpmRange.getValue(),\n\t\t\tbeatsPerStep: this.refs.beatsPerStep.getValue(),\n\t\t\taccents: this.refs.barManager.getAccents(),\n\t\t\tinstrument: this.state.instrument\n\t\t};\n\n\t\tconst s2 = this.refs.modePanel.getValue();\n\n\t\tconst uiState = { ...s1, ...s2 };\n\t\t// console.log('uiState', uiState)\n\t\t// store current state in component state so we know what's going on always (do we? really?)\n\t\t// this.setState({ uiState });\n\t\t// store current state\n\t\tconsole.log(\"storing uiState\", this.uiState)\n\t\tthis.uiState = uiState;\n\t\t// HACK\n\t\tthis.uiState.instrument = this.state.instrument;\n\t\treturn uiState;\n\t}\n\n\tonAccentsChange() {\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getAccents());\n\t}\n}\n\nexport default withCookies(App);\n\n// this serves as default app settings\nApp.defaultProps = {\n\tplayMode: playModes.BY_BAR,\n\tinterval: 2,\n\tinstrument: instruments.TABLA,\n\tbpmStep: 50,\n\tbpmRange: [100, 400],\n\tbeatsPerStep: 4,\n\taccents: [0, 1, 2, 1]\t\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {CookiesProvider} from 'react-cookie'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(  <CookiesProvider> <App  /> </CookiesProvider> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}