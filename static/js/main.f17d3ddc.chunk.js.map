{"version":3,"sources":["components/SimplePanel.jsx","components/PlayModes.jsx","components/PlaybackModes.jsx","components/Instruments.jsx","components/Locale.jsx","components/PresetsLib.jsx","localization/pl-pl.jsx","components/SimpleProgress.jsx","components/Utils.jsx","components/Planner.jsx","components/EditPresetModal.jsx","components/Config.jsx","components/PresetsManager.jsx","components/SvgClock.jsx","components/Sliders/GeometricSlider.jsx","components/Sliders/AdvancedRange.jsx","components/Sliders/AdvancedSlider.jsx","components/Sliders/DiscreteSlider.jsx","components/ModePanel.jsx","components/TrackView/TrackRow.jsx","components/TrackView/TrackView.jsx","components/SoundLibrary.jsx","components/SoundMachine.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SimplePanel","Container","className","this","props","Row","title","children","Component","defaultProps","PlayModes","PlaybackModes","Instruments","TABLA","key","label","ELECTRO_KIT","METRONOME","BASIC_DRUM_KIT","YAMAHA_RX5","Samples","file","instrumentKey","InstrumentsByKey","Object","keys","map","item","idx","locale","PresetsLib","playMode","byTimeInterval","bpmStep","bpmRange","track","playbackMode","byBarInterval","stepsNum","isHidden","InitPreset","pl","1","2","3","4","5","GetNavigatorLanguage","navigator","languages","length","userLanguage","language","browserLanguage","Tr","text","TrRange","number","l","SimpleProgress","state","style","width","value","display","Utils","toLocaleDateTime","dateTime","Date","toLocaleString","dateStyle","timeStyle","padTime","t","formatTime","timeInSeconds","formatTimeFull","formatTimeLong","hLabel","mLabel","sLabel","usePad","setSeconds","h","getHours","m","getMinutes","s","getSeconds","o","trim","storageAvailable","type","storage","window","x","setItem","removeItem","e","DOMException","code","name","Planner","steps","currentStepIdx","stepProgress","planProgress","isUpDown","isPaused","barRender","b","cls","stepIdx","onClick","startStep","duration","Infinity","durationFormatted","durationBars","Math","floor","bpm","toFixed","segments","max","segment","push","constantBpmSlider","exerciseTime","rev","slice","reverse","shift","concat","isRandom","shuffle","array","temporaryValue","randomIndex","currentIndex","random","setState","stepChanged","step","getStep","transport","ticks","startTimeTicks","Tone","Time","toTicks","endTime","clamp","min","config","plan","makePlan","baseBpm","timeSignature","events","totalPlanTime","i","beatDuration","schedule","time","onPlanStep","durationInBars","bar","calcTimeForBpm","Error","onPlanEnd","prevState","seconds","getCurrentStep","newPlaybackMode","onChange","height","overflow","Collapse","isOpen","ButtonGroup","size","Button","outline","onPlaybackChange","active","onUpDownBtn","onRandomBtn","NaN","EditPresetModal","modal","nestedModal","preset","presetId","showDelete","toggle","toggleNested","onSave","newTitle","target","onDeleteBtn","color","marginTop","onSaveBtn","Modal","ModalHeader","ModalBody","Input","titleChanged","placeholder","defaultValue","ModalFooter","handleDelete","handleSave","renderDelete","Config","TRACKS_NUMBER","MAXIMUM_TIMESIGNATURE","PROGRESS_UPDATE_FPS","COLOR_PALETTE","0","PresetsManager","showEdit","userPresets","storedPresets","localStorage","getItem","JSON","parse","Array","fill","interval","accents","beatIdx","beats","beat","samples","convertInstrumentKeyToSamples","filter","el","onSelect","validatePreset","undefined","apply","p","savedDtm","findIndex","saveInLocalStorage","presets","stringify","newPresets","splice","getPreset","refs","presetEditor","edit","onPresetClick","Col","textAlign","xs","onPresetEdit","userPresetsJson","isHeader","renderUserPresets","justifyContent","ref","onPresetDelete","onSavePreset","SvgClock","colorEmpty","strokeColor","strokeWidth","percent","r","cos","PI","y","sin","radius","trackIdx","pctStep","slices","forEach","volume","subIdx","cumulativePercent","paths","getCoordinatesForPercent","startX","startY","endX","endY","largeArcFlag","pathData","join","d","stroke","labels","textAnchor","transform","progress","line","radiusIncrement","circles","drawSlices","cx","cy","container","viewBox","svg","drawText","strokeLinecap","x1","y1","x2","y2","partProgress","GeometricSlider","regression","onMinusClick","newValue","btnStep","onPlusClick","exponential","precision","prepareMarks","marks","marksAt","findX","v","predict","log","equation","Badge","onBadgeClick","badgeFormatter","included","marksNum","marksStyle","desc","markFormatter","AdvancedRange","bounds","Range","AdvancedSlider","disableBtns","Slider","DiscreteSlider","innerValue","innerMarks","values","prevProps","theValue","indexOf","sliderValue","margin","whiteSpace","onSliderChange","ModePanel","bpmStepDropdownOpen","onBpmSliderChange","onAfterChange","newMode","newState","byBarSlider","setValue","byTimeSlider","barsNum","ButtonDropdown","onBpmStepChange","DropdownToggle","caret","DropdownMenu","DropdownItem","onBpmStepSelect","onExerciseTimeSliderChange","10","15","20","30","40","50","60","70","80","90","100","onStepsSliderChange","pushable","onBpmRangeChange","onModeChange","renderSpeedRange","renderTimeSlider","renderStepsSlider","byBarFormatter","onBarIntervalChange","onTimeIntervalChange","renderIncreaseBpmDropdown","200","400","600","800","1000","1200","TrackRow","activeIdx","instrument","onSampleSelect","trackRow","onMeasureChange","sampleDropdownOpen","filename","soundLibrary","use","onSampleChange","playersArr","fullLabel","sample","alignSelf","vertical","addBeat","removeBeat","backgroundColor","TrackView","rowRefs","sampleIdx","columnIdx","indicator","left","minLeft","maxRight","cellsBBtop","trackRow_0","cellsDiv","getBoundingClientRect","cellsBBbottom","trackRow_3","box","top","bottom","right","offsetLeft","offsetWidth","addEventListener","updateDimensions","pop","trackId","newTimeSignature","indicatorProgress","padding","onTrackRowSignatureChange","handleCellClick","SoundLibrary","players","Players","reverb","Reverb","toMaster","decay","predelay","generate","wet","connect","add","player","onLoad","get","find","loaded","start","SoundMachine","initialized","Transport","tone","repeat","play","setBpm","isNaN","document","documentTitle","lookAhead","part","Part","note","loop","getConfig","setPlan","initProgressUpdate","onReady","modePanel","getSamples","setInterval","onProgress","cancel","position","setTrack","planner","setTimeSignature","removeAll","createPoly","loopEnd","debug","innerHTML","updateProgress","svgClock","setProgress","trackView","stop","newTrack","newVolume","Master","setReverb","preventDefault","stepBackward","stepForward","handleKeys","onKeyEvent","handleKey","isPlaying","block","onVolumeChange","onReverbChange","onControlChange","onTrackChange","onPresetSelect","App","showMask","ReactGA","initialize","trackingId","gaOptions","cookieDomain","pageview","location","pathname","search","removeLoadMask","href","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","origin","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f17d3ddc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Container, Row} from 'reactstrap'\r\n\r\nclass SimplePanel extends Component {\r\n    render() { \r\n        return (\r\n            <Container className={\"pane \" + this.props.className}>\r\n\t\t\t\t<Row className=\"pane-title\">{this.props.title}</Row>\r\n\t\t\t\t<Row className=\"pane-body\">{this.props.children}</Row>\r\n            </Container>\r\n            );\r\n    }\r\n}\r\n \r\nexport default SimplePanel;\r\n\r\n\r\nSimplePanel.defaultProps = {\r\n    title: 'title',\r\n    children: [],\r\n    className: ''\r\n };","\r\n// NOTE: If we change any of existing string names we will screw up user presets on client's side\r\nexport const PlayModes = {\r\n\tBY_BAR: \"by_bar\",\r\n\tBY_TIME: \"by_time\",\r\n\tSET_TIME: \"set_time\",\r\n\tCONSTANT: \"constant\"\r\n};","export const PlaybackModes = {\r\n\tSTOP: \"stop\",\r\n\tCYCLE: \"cycle\",\r\n\tREPEAT: \"repeat\",\r\n\tCONTINUE: \"continue\"\r\n};","export const Instruments = {\r\n    TABLA: {\r\n        key: 'tabla',\r\n        label: 'Tabla'\r\n    },\r\n    ELECTRO_KIT: {\r\n        key: 'electrokit',\r\n        label: 'Electronic Kit'\r\n        \r\n    },\r\n    METRONOME: {\r\n        key: 'metronome',\r\n        label: 'Metronome'\r\n        \r\n    },\r\n    BASIC_DRUM_KIT: {\r\n        key: 'basicdrumkit',\r\n        label: 'Basic Drum Kit'\r\n        \r\n    },\r\n    YAMAHA_RX5: {\r\n        key: 'yamaha_rx5',\r\n        label: 'Yamaha RX 5'\r\n    }\r\n};\r\n\r\n\r\nexport const Samples = [\r\n{\r\n        file: \"dha-slide.wav\",\r\n        label: \"Dha\",\r\n        instrumentKey: 'tabla'\r\n    }, {\r\n        file: \"dhin-slide.wav\",\r\n        label: \"Dhin\",\r\n        instrumentKey: 'tabla'\r\n    }, {\r\n        file: \"tin.wav\",\r\n        label: \"Tin\",\r\n        instrumentKey: 'tabla'\r\n    },{\r\n        file: \"Kick.wav\",\r\n        label: \"Kick\",\r\n        instrumentKey: 'electrokit'\r\n    }, {\r\n        file: \"Snare.wav\",\r\n        label: \"Snare\",\r\n        instrumentKey: 'electrokit'\r\n    }, {\r\n        file: \"HiHat.wav\",\r\n        label: \"Hi Hat\",\r\n        instrumentKey: 'electrokit'\r\n    }, {\r\n        file: \"tap.wav\",\r\n        label: \"Tap\",\r\n        instrumentKey: 'metronome'\r\n    }, {\r\n        file: \"down.wav\",\r\n        label: \"Down\",\r\n        instrumentKey: 'metronome'\r\n    }, {\r\n        file: \"up.wav\",\r\n        label: \"Up\",\r\n        instrumentKey: 'metronome'\r\n    },\r\n    {\r\n        file: \"Kick.wav\",\r\n        label: \"Kick\",\r\n        instrumentKey: 'basicdrumkit'\r\n    }, {\r\n        file: \"Snare.wav\",\r\n        label: \"Snare\",\r\n        instrumentKey: 'basicdrumkit'\r\n    }, {\r\n        file: \"ClosedHat.wav\",\r\n        label: \"Closed Hat\",\r\n        instrumentKey: 'basicdrumkit'\r\n    }, {\r\n        file: \"OpenHat.wav\",\r\n        label: \"Open Hat\",\r\n        instrumentKey: 'basicdrumkit'\r\n    },\r\n    {\r\n        file: \"Kick.wav\",\r\n        label: \"Kick\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }, {\r\n        file: \"Rim.wav\",\r\n        label: \"Rim\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }, {\r\n        file: \"Ride.wav\",\r\n        label: \"Ride\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }, {\r\n        file: \"Cowbell.wav\",\r\n        label: \"Cowbell\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }, {\r\n        file: \"Shaker.wav\",\r\n        label: \"Shaker\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }\r\n];\r\n\r\n\r\n\r\nconst InstrumentsByKey = {}\r\nObject.keys(Instruments).map(function (item, idx) {\r\n    InstrumentsByKey[Instruments[item].key] = Instruments[item];\r\n    // expected to return a value from arrow func\r\n    return true;\r\n});\r\nexport { InstrumentsByKey };\r\n\r\nexport const InstrumentsArray = Object.keys(Instruments)\r\n    .map(item => {\r\n        return Instruments[item]\r\n    });\r\n","import pl from '../localization/pl-pl'\r\n// import it from '../localization/it-it'\r\n\r\n// A bit rough attempt to i18n\r\nexport function GetNavigatorLanguage() {\r\n    return (navigator.languages && navigator.languages.length) ? navigator.languages[0] : navigator.userLanguage || navigator.language || navigator.browserLanguage || 'en';\r\n}\r\n\r\n// set language for the app\r\nlet locale;\r\nswitch ( GetNavigatorLanguage() )\r\n{\r\n    case 'pl':\r\n    case 'pl-PL':\r\n    case 'pl-pl':\r\n        locale = pl;\r\n        break;\r\n    default:\r\n        locale = {};    // this will default to en\r\n        break;\r\n}\r\n\r\nfunction Tr(text) {\r\n    if (locale[text]) {\r\n        return locale[text];\r\n    }\r\n    else {\r\n        return text;\r\n    }\r\n}\r\nexport default Tr;\r\n\r\nexport function TrRange(number, label) {\r\n    if (!locale[label]) {\r\n        return label\r\n    }\r\n    else if (locale[label][number]) {\r\n        return locale[label][number]\r\n    }\r\n    else {\r\n        const l =  locale[label];\r\n        // If it's not specified then return last defined term\r\n        // Bit dodgy, but should do the job.\r\n        return l[Object.keys(l)[Object.keys(l).length -1]]\r\n    }\r\n}\r\n\r\n\r\n","import { PlayModes } from \"./PlayModes\"\r\nimport { PlaybackModes } from \"./PlaybackModes\"\r\nimport { Instruments } from \"./Instruments\";\r\n\r\nexport const PresetsLib = [\r\n    { \"isHeader\": true, title: \"Basic\" },\r\n    { title: \"Metronome 2/4\", \"bpmStep\": 20, \"bpmRange\": [100, 200], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"interval\": 300, \"track\": [[2], [1]], \"instrumentKey\": \"metronome\" },\r\n\r\n    {\r\n        title: \"Metronome 4/4\",\r\n        instrumentKey: Instruments.METRONOME.key,\r\n        playMode: PlayModes.BY_TIME,\r\n        byTimeInterval: 60,\r\n        bpmStep: 20,\r\n        bpmRange: [100, 200],\r\n        track: [[2], [1], [1], [1]]\r\n    },\r\n    {\r\n        title: \"Metronome 3/4\",\r\n        instrumentKey: Instruments.METRONOME.key,\r\n        playMode: PlayModes.BY_TIME,\r\n        byTimeInterval: 60,\r\n        bpmStep: 20,\r\n        bpmRange: [100, 200],\r\n        track: [[2], [1], [1]]\r\n    },\r\n    { \"isHeader\": true, title: \"Drum Patterns\" },\r\n    {\r\n        title: \"Levee Break\",\r\n        instrumentKey: 'electrokit',\r\n        bpmRange: [300, 400],\r\n        track: [[0, 2], [0], [2], [], [1, 2], [], [2], [0], [2], [], [0, 2], [0], [1, 2], [], [2], []],\r\n        playMode: PlayModes.BY_BAR,\r\n        playbackMode: PlaybackModes.STOP,\r\n        byTimeInterval: 5,\r\n        byBarInterval: 10,\r\n        stepsNum: 10,\r\n        bpmStep: 10,\r\n        isHidden: true\r\n    },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [], [0, 2], [], [2, 1], [], [0, 2], [], [2, 0], [], [2, 0], [], [1, 2], [], [2, 0], []], \"instrumentKey\": \"electrokit\", \"title\": \"Basic Rock\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [], [2], [], [2, 1], [], [2], [0, 2], [2, 0], [], [0, 2], [], [1, 2], [], [2, 0], []], \"instrumentKey\": \"electrokit\", \"title\": \"Impeach the President\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [350, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [2], [0, 2], [2], [2, 1], [2], [0, 2], [3, 1], [2], [2, 1], [0, 2], [2, 1], [2, 1], [0, 3], [2], [2, 1]], \"instrumentKey\": \"basicdrumkit\", \"title\": \"Funky Drummer\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [], [2], [], [1, 2], [], [2], [0], [2, 0], [], [0, 2], [], [1, 2], [], [2], []], \"instrumentKey\": \"electrokit\", \"title\": \"Walk This Way\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [], [2, 0], [], [1, 2], [], [2], [], [2], [], [0, 2], [0], [1, 2], [], [2], [0]], \"instrumentKey\": \"electrokit\", \"title\": \"It's a New Day\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0], [], [], [0], [1, 2], [], [0], [], [0], [], [], [], [1, 2], [], [], []], \"instrumentKey\": \"electrokit\", \"title\": \"The Big Beat\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [300, 500], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 50, \"constantBpmSlider\": 300, \"interval\": 120, \"track\": [[0, 2], [], [0, 2], [], [1, 2], [], [0, 2], [], [0, 2], [], [0, 2], [], [1, 2], [], [0, 2], []], \"instrumentKey\": \"basicdrumkit\", \"title\": \"Rock\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [528, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"constant\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 50, \"constantBpmSlider\": 600, \"interval\": 120, \"track\": [[0], [], [3], [], [1, 0], [], [3], [], [0], [2], [3], [], [1, 0], [], [0, 3], []], \"instrumentKey\": \"basicdrumkit\", \"title\": \"Techno\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [528, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"constant\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 50, \"constantBpmSlider\": 400, \"interval\": 120, \"track\": [[0, 2], [], [2], [], [1, 2], [], [2], [0], [2], [], [0, 2], [], [1, 2], [0], [2], [0]], \"instrumentKey\": \"basicdrumkit\", \"title\": \"Hip Hop\" },\r\n\r\n    // Afro-Cuban\r\n    { \"isHeader\": true, title: \"Afro-Cuban\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"interval\": 120, \"track\": [[0, 1, 2], [2], [2], [0, 1, 2], [2, 0], [2], [1, 2], [0, 2], [0, 2], [2], [1, 2], [0, 2], [1, 2, 0], [2], [2], [0, 2]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Son Clave\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 1, 2], [2], [2], [0, 1, 2], [2, 0], [2], [2], [0, 2, 1], [0, 2], [2], [2, 1], [0, 2], [2, 0, 1], [2], [2], [0, 2]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Rumba\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 1, 2], [2], [2], [0, 1, 2], [2, 0], [2], [2, 1], [0, 2], [0, 2], [2], [2, 1], [0, 2], [2, 0], [2, 1], [2], [0, 2]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Bossa Nova\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 1, 3], [], [], [1, 3], [0], [], [1, 3], [], [0, 1], [3], [3], [1], [0], [], [0, 1], []], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Soukous\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 3], [], [1], [1, 3], [0], [], [1, 3], [1], [0], [], [3, 1], [1], [0], [], [0, 1, 3], [1]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Gahu\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 3], [], [1], [1], [0, 3], [], [1, 3, 0], [1], [0], [], [3, 1], [1], [0, 3], [], [0, 1], [1]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Shiko\" },\r\n\r\n    // Polyrhythms\r\n    { \"isHeader\": true, title: \"Polyrhythms\" },\r\n    { \"title\": \"3 over 4\", \"bpmStep\": 20, \"bpmRange\": [100, 200], \"currentBpm\": 100, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"constantBpmSlider\": 300, \"track\": [[1, 0, 0, 0], [0, 1, 1], [1, 1, 1, 1], [0, 0, 0, 0]], \"timeSignature\": 4, \"instrumentKey\": \"basicdrumkit\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [100, 200], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[1, 1, 0], [0, 0, 1], [1, 1, 1, 1], [0, 0, 0]], \"timeSignature\": 3, \"instrumentKey\": \"basicdrumkit\", \"title\": \"4 over 3\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [121, 359], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"set_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"byBarInterval\": 2, \"constantBpmSlider\": 122, \"track\": [[1, 0, 1, 0, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]], \"timeSignature\": 6, \"instrumentKey\": \"basicdrumkit\", \"title\": \"2 over 3\" },\r\n\r\n    // ancient ones, but leave them for compaitibility\r\n    { \"isHeader\": true, title: \"Other\" },\r\n    { title: \"Balkan 1\", \"bpmRange\": [241, 400], \"accents\": [0, 2, 1, 0, 2, 1, 2], \"instrument\": Instruments.ELECTRO_KIT, \"playMode\": \"by_bar\", \"interval\": 20, \"bpmStep\": 30 },\r\n    { title: \"Balkan 2\", \"bpmRange\": [293, 400], \"accents\": [0, 1, 2, 0, 1, 2, 1], \"instrument\": Instruments.TABLA, \"playMode\": \"by_bar\", \"interval\": 300, \"bpmStep\": 30 },\r\n    { title: \"Groove 1\", \"bpmRange\": [222, 262], \"accents\": [0, 1, 2, 1, 2, 0, 2, 2], \"instrument\": Instruments.ELECTRO_KIT, \"playMode\": \"by_time\", \"interval\": 600, \"bpmStep\": 30 },\r\n    { title: \"Groove 2\", \"bpmRange\": [222, 400], \"accents\": [0, 1, 0, 1, 1, 1, 0, 2], \"instrument\": Instruments.ELECTRO_KIT, \"playMode\": \"by_bar\", \"interval\": 20, \"bpmStep\": 30 },\r\n\r\n];\r\n\r\n\r\n\r\nexport const InitPreset_debug = {\r\n    \"bpmStep\": 50,\r\n    \"bpmRange\": [\r\n        300,\r\n        400\r\n    ],\r\n    // \"currentBpm\": 100,\r\n    \"playbackMode\": \"stop\",\r\n    \"playMode\": PlayModes.CONSTANT,\r\n\r\n    \"exerciseTime\": 60 * 30,    // 30 minutes\r\n    \"stepsNum\": 30,             // 1 minutes per step\r\n    \"byTimeInterval\": 5,\r\n    \"byBarInterval\": 2,\r\n    \"constantBpmSlider\": 300,\r\n    \"track\": [[1, 1, 0, 1], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]],\r\n    \"samples\": [{ instrumentKey: 'tabla', file: 'dha-slide.wav' }, { instrumentKey: 'electrokit', file: 'Kick.wav' }, { instrumentKey: 'metronome', file: 'tap.wav' }],\r\n    \"timeSignature\": 4,\r\n    \"instrumentKey\": Instruments.ELECTRO_KIT.key\r\n}\r\n\r\n\r\nexport const InitPreset = {\r\n    \"bpmStep\": 50,\r\n    \"bpmRange\": [\r\n        300,\r\n        400\r\n    ],\r\n    \"playbackMode\": \"stop\",\r\n    \"playMode\": \"constant\",\r\n    \"stepsNum\": 10,\r\n    \"exerciseTime\": 600,\r\n    \"bpmStepDropdownOpen\": false,\r\n    \"byTimeInterval\": 5,\r\n    \"byBarInterval\": 2,\r\n    \"constantBpmSlider\": 300,\r\n    \"track\": [\r\n        [\r\n            1,\r\n            1,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n            0,\r\n            0,\r\n            1,\r\n            1,\r\n            0,\r\n            0,\r\n            0,\r\n            0\r\n        ],\r\n        [\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n            0,\r\n            0,\r\n            0\r\n        ],\r\n        [\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0\r\n        ],\r\n        [\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0\r\n        ]\r\n    ],\r\n    \"timeSignature\": 16,\r\n    \"samples\": [\r\n        {\r\n            \"file\": \"Kick.wav\",\r\n            \"instrumentKey\": \"basicdrumkit\"\r\n        },\r\n        {\r\n            \"file\": \"Snare.wav\",\r\n            \"instrumentKey\": \"basicdrumkit\"\r\n        },\r\n        {\r\n            \"file\": \"ClosedHat.wav\",\r\n            \"instrumentKey\": \"basicdrumkit\"\r\n        },\r\n        {\r\n            \"file\": \"OpenHat.wav\",\r\n            \"instrumentKey\": \"basicdrumkit\"\r\n        }\r\n    ]\r\n}\r\n","const pl = {\r\n    /* App */\r\n    \"arrow up/down\": \"strzałki góra/dół\",\r\n    \"higher/lower BPM\": \"zwiększ/zmniejsz BPM\",\r\n    \"arrow left/right\": \"strzałki lewa/prawa\",\r\n    \"previous/next step according to plan\": \"poprzedni/następny krok wg planu\",\r\n    \"start/stop\": \"zacznij/zatrzymaj\",\r\n    \"stop\": \"zatrzymaj\",\r\n\r\n    /* SoundMachine */\r\n    \"Control\": \"Kontrola\",\r\n    \"Start / Stop\": \"Zacznij / Zatrzymaj\",\r\n    \"Volume\": \"Głośność\",\r\n    // \"Reverb\": \"Reverb\",\r\n    \"Instrument\": \"Instrument\",\r\n    \"Mode\": \"Tryb\",\r\n    \"Increase speed\": \"Zwiększaj prędkość\",\r\n    \"BPM range\": \"Zakres BPM\",\r\n    \"By bar\": \"Co kilka taktów\",\r\n    \"bar\": \"takt\",\r\n    \"By time\": \"Co jakiś czas\",\r\n    \"Set time\": \"W ustalonym czasie ćwiczeń\",\r\n    \"Constant\": \"Nie zwiększaj\",\r\n    \"Increase speed every\": \"Zwiększ prędkość co\",\r\n    \"Number of steps\": \"Ilość kroków\",\r\n    \"Up and Down\": \"Szybciej i wolniej\",\r\n    \"Shuffle\": \"Losowo\",\r\n    \"Exercise Time\": \"Czas ćwiczenia\",\r\n    \"Total time:\": \"Całkowity czas:\",\r\n    \"Please select\": \"Proszę wybrać\",\r\n    \"Select\": \"Wybierz\",\r\n    // \"BPM\": \"BPM\"\r\n\r\n    /* Planner */\r\n    \"Stop\": \"Zatrzymaj\",\r\n    \"Continue\": \"Kontynuuj\",\r\n    \"Repeat\": \"Od początku\",\r\n    \"After plan\": \"Po zakończeniu\",\r\n    \"Step order\": \"Kolejność\",\r\n\r\n    \"Plan progress\": \"Postęp planu\",\r\n    \"Step progress\": \"Postęp kroku\",\r\n\r\n    /* Presets */\r\n    \"Title\": \"Nazwa\",\r\n    \"Save current settings\": \"Zapisz bieżące ustawienia\",\r\n    \"Edit\": \"Edytuj\",\r\n    \"User presets\": \"Zapisane ustawienia\",\r\n    \"Presets\": \"Presety\",\r\n    \"Delete\": \"Usuń\",\r\n    \"Save Preset\": \"Zapisz Ustawienia\",\r\n    \"Cancel\": \"Anuluj\",\r\n    \"Are you sure?\": \"Czy aby na pewno?\",\r\n    \"Are you sure to delete current preset?\": \"Czy jesteś pewien, że chcesz usunąć to ustawienie?\",\r\n    \"Save\": \"Zapisz\",\r\n    \"Polyrhythms\": \"Polirytmy\",\r\n    \"Basic\": \"Podstawowe\",\r\n    \"Drum Patterns\": \"Motywy perkusyjne\",\r\n    \"Afro-Cuban\": \"Afro-Kubańskie\",\r\n    \"Other\": \"Inne\",\r\n\r\n\r\n\r\n    /* TrackView */\r\n    \"Sequencer\": \"Sekwencer\",\r\n\r\n    /* Keyboard control panel */\r\n    \"Keyboard controls\": \"Skróty klawiszowe\",\r\n\r\n    /* Utils */\r\n\r\n    \"bars\": {\r\n        1: \"takt\",\r\n        2: \"takty\",\r\n        3: \"takty\",\r\n        4: \"takty\",\r\n        5: \"taktów\"\r\n    },\r\n\r\n    \"hours\": {\r\n        1: \"godzina\",\r\n        2: \"godziny\",\r\n        3: \"godziny\",\r\n        4: \"godziny\",\r\n        5: \"godzin\"\r\n    },\r\n\r\n    \"minutes\": {\r\n        1: \"minuta\",\r\n        2: \"minuty\",\r\n        3: \"minuty\",\r\n        4: \"minuty\",\r\n        5: \"minut\"\r\n    },\r\n\r\n    \"seconds\": {\r\n        1: \"sekunda\",\r\n        2: \"sekundy\",\r\n        3: \"sekundy\",\r\n        4: \"sekundy\",\r\n        5: \"sekund\"\r\n    },\r\n\r\n    \"hr\": \"godz.\",\r\n    \"hrs\": \"godz.\"\r\n}\r\n\r\nexport default pl;","import React, { Component } from 'react';\r\nimport {Container} from 'reactstrap';\r\n\r\nclass SimpleProgress extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( <Container className=\"SimpleProgress\">\r\n            <div className=\"bar\" style={{width: this.props.value  + \"%\", display: 'block'}} />\r\n        </Container> );\r\n    }\r\n}\r\n \r\nexport default SimpleProgress;","import { TrRange, GetNavigatorLanguage } from './Locale'\r\n\r\nconst Utils = {\r\n\r\n\ttoLocaleDateTime: function (dateTime) {\r\n\t\t// safety\r\n\t\tif (!dateTime) return '';\r\n\r\n\t\t// go for it\r\n\t\treturn new Date(dateTime).toLocaleString(GetNavigatorLanguage(), {\r\n\t\t\tdateStyle: \"long\",\r\n\t\t\ttimeStyle: \"short\"\r\n\t\t});\r\n\r\n\t},\r\n\r\n\tpadTime: function (t) {\r\n\t\treturn t < 10 ? \"0\" + t : t;\r\n\t},\r\n\r\n\tformatTime: function (timeInSeconds) {\r\n\t\tif (timeInSeconds) {\r\n\t\t\treturn Utils.formatTimeFull(timeInSeconds, 'h', 'm', 's', true);\r\n\t\t}\r\n\t},\r\n\r\n\tformatTimeLong: function (timeInSeconds) {\r\n\t\tif (timeInSeconds) {\r\n\t\t\treturn Utils.formatTimeFull(timeInSeconds, 'hours', 'minutes', 'seconds', false);\r\n\t\t}\r\n\t},\r\n\r\n\tformatTimeFull: function (timeInSeconds, hLabel, mLabel, sLabel, usePad) {\r\n\t\tlet t = new Date(0, 0, 0, 0, 0, 0, 0);\r\n\t\tt.setSeconds(timeInSeconds);\r\n\t\tconst h = t.getHours();\r\n\t\tconst m = t.getMinutes();\r\n\t\tconst s = t.getSeconds();\r\n\r\n\t\tlet o = \"\";\r\n\r\n\t\tif (h !== 0) {\r\n\t\t\to += h + ' ' + TrRange(h, hLabel) + \" \";\r\n\t\t}\r\n\r\n\t\tif (m !== 0 || h !== 0) {\r\n\t\t\tif (h !== 0 && m !== 0) {\r\n\t\t\t\to += (usePad ? Utils.padTime(m) : m) + ' ' + TrRange(m, mLabel) + \" \";\r\n\t\t\t}\r\n\t\t\telse if (m !== 0) {\r\n\t\t\t\to += (usePad ? Utils.padTime(m) : m) + ' ' + TrRange(m, mLabel) + \" \";\r\n\t\t\t}\r\n\t\t\tif (s !== 0) {\r\n\t\t\t\to += \"\" + (usePad ? Utils.padTime(s) : s) + ' ' + TrRange(s, sLabel)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\to += t.getSeconds() + ' ' + TrRange(s, sLabel)\r\n\t\t}\r\n\t\treturn o.trim();\r\n\t},\r\n\r\n\tstorageAvailable: function (type) {\r\n\t\tvar storage;\r\n\t\ttry {\r\n\t\t\tstorage = window[type];\r\n\t\t\tvar x = '__storage_test__';\r\n\t\t\tstorage.setItem(x, x);\r\n\t\t\tstorage.removeItem(x);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\treturn e instanceof DOMException && (\r\n\t\t\t\t// everything except Firefox\r\n\t\t\t\te.code === 22 ||\r\n\t\t\t\t// Firefox\r\n\t\t\t\te.code === 1014 ||\r\n\t\t\t\t// test name field too, because code might not be present\r\n\t\t\t\t// everything except Firefox\r\n\t\t\t\te.name === 'QuotaExceededError' ||\r\n\t\t\t\t// Firefox\r\n\t\t\t\te.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n\t\t\t\t// acknowledge QuotaExceededError only if there's something already stored\r\n\t\t\t\t(storage && storage.length !== 0);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React, { Component } from \"react\";\r\nimport Tone from 'tone'\r\nimport Tr, {TrRange} from './Locale'\r\nimport { Collapse, ButtonGroup, Button } from \"reactstrap\";\r\nimport SimplePanel from \"./SimplePanel\"\r\nimport { PlayModes } from \"./PlayModes\";\r\nimport { PlaybackModes } from \"./PlaybackModes\";\r\nimport SimpleProgress from \"./SimpleProgress\";\r\nimport Utils from \"./Utils\";\r\nimport { InitPreset } from \"./PresetsLib\";\r\n\r\n// import Control from \"./Control\"\r\nclass Planner extends Component {\r\n\tstate = {\r\n\t\tplaybackMode: this.props.playbackMode,\r\n\t\tplayMode: this.props.playMode,\r\n\t\tsteps: [],\r\n\t\tcurrentStepIdx: this.props.currentStepIdx,\r\n\t\tstepProgress: 0,\r\n\t\tplanProgress: 0,\r\n\t\tisUpDown: false,\r\n\t\tisPaused: false\r\n\t};\r\n\r\n\tmakePlan(s) {\r\n\t\tlet segments = [];\r\n\t\t// some helpful variables\r\n\t\tconst max = s.bpmRange[1];\r\n\t\tlet bpm = s.bpmRange[0];\r\n\r\n\t\tif (s.playMode === PlayModes.BY_BAR) {\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tconst segment = {\r\n\t\t\t\t\tbpm: bpm,\r\n\t\t\t\t\tduration: s.byBarInterval\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (s.playMode === PlayModes.BY_TIME) {\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tconst segment = {\r\n\t\t\t\t\tduration: s.byTimeInterval,\r\n\t\t\t\t\tbpm: bpm\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t} else if (s.playMode === PlayModes.CONSTANT) {\r\n\t\t\tconst segment = {\r\n\t\t\t\tduration: Infinity,\r\n\t\t\t\tbpm: s.constantBpmSlider\r\n\t\t\t};\r\n\t\t\tsegments.push(segment);\r\n\t\t}\r\n\t\telse if (s.playMode === PlayModes.SET_TIME) {\r\n\t\t\t\r\n\t\t\tconst duration = s.exerciseTime  / (s.stepsNum );\r\n\t\t\t\r\n\t\t\tlet bpm = s.bpmRange[0];\r\n\t\t\tconst bpmStep = (s.bpmRange[1] - s.bpmRange[0]) / (s.stepsNum -1 );\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tconst segment = {\r\n\t\t\t\t\tduration: duration,\r\n\t\t\t\t\tbpm: bpm\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += bpmStep;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.state.isUpDown) {\r\n\t\t\tconst rev = segments.slice().reverse();\r\n\t\t\trev.shift()\r\n\t\t\tsegments = segments.concat(rev);\r\n\t\t}\r\n\t\tif (this.state.isRandom) {\r\n\t\t\tsegments = this.shuffle(segments.slice())\r\n\t\t}\r\n\t\treturn segments;\r\n\t}\r\n\r\n\tshuffle(array) {\r\n\t\tvar currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n\t\t// While there remain elements to shuffle...\r\n\t\twhile (0 !== currentIndex) {\r\n\r\n\t\t\t// Pick a remaining element...\r\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\r\n\t\t\tcurrentIndex -= 1;\r\n\r\n\t\t\t// And swap it with the current element.\r\n\t\t\ttemporaryValue = array[currentIndex];\r\n\t\t\tarray[currentIndex] = array[randomIndex];\r\n\t\t\tarray[randomIndex] = temporaryValue;\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\t}\r\n\r\n\tonPlanStep(idx) {\r\n\t\tthis.setState({ currentStepIdx: idx }, this.stepChanged)\r\n\t}\r\n\r\n\tupdateProgress() {\r\n\t\tconst step = this.getStep(this.state.currentStepIdx);\r\n\t\tconst stepProgress = (this.props.transport.ticks - step.startTimeTicks) / (Tone.Time(step.duration).toTicks());\r\n\t\tconst planProgress =  this.props.transport.ticks  / this.endTime;\r\n\t\tthis.setState({ stepProgress: this.clamp(stepProgress), planProgress: this.clamp(planProgress) })\r\n\t}\r\n\r\n\tclamp(value, min = 0 , max = 1) {\r\n\t\treturn Math.min(Math.max(value, min), max);\r\n\t}\r\n\r\n\tsetPlan(config, stepIdx = 0) {\r\n\t\tconst plan = this.makePlan(config);\r\n\t\tthis.baseBpm = this.props.transport.bpm.value\r\n\r\n\t\tconst timeSignature = config.timeSignature;\r\n\t\tlet t = 0;\r\n\t\tthis.events = [];\r\n\t\tlet steps = []\r\n\t\tlet totalPlanTime = 0;\r\n\r\n\t\tfor (let i = 0; i < plan.length; i++) {\r\n\t\t\tconst s = plan[i];\r\n\t\t\tconst beatDuration = 60 / s.bpm;\r\n\r\n\t\t\t// create  step end event\r\n\t\t\tthis.props.transport.schedule((time) => this.onPlanStep(i), t)\r\n\r\n\t\t\tconst duration = config.playMode === PlayModes.BY_BAR ? beatDuration * timeSignature * s.duration : s.duration;\r\n\t\t\tconst durationInBars = config.playMode === PlayModes.BY_BAR ? s.duration : s.duration / (beatDuration * timeSignature);\r\n\r\n\t\t\tconst bar = {\r\n\t\t\t\tbpm: s.bpm,\r\n\t\t\t\tduration: duration,\r\n\t\t\t\tdurationBars: durationInBars.toFixed(1),\r\n\t\t\t\tdurationFormatted: Utils.formatTime(duration),\r\n\t\t\t\tstepIdx: i,\r\n\t\t\t\ttrack: config.track,\r\n\t\t\t\tplayMode: s.playMode,\r\n\t\t\t\tstartTimeTicks: Tone.Time(t).toTicks()\r\n\t\t\t};\r\n\r\n\r\n\t\t\tswitch (config.playMode) {\r\n\t\t\t\tcase PlayModes.BY_TIME:\r\n\t\t\t\tcase PlayModes.SET_TIME:\r\n\t\t\t\t\tt += this.calcTimeForBpm(s.duration, s.bpm);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase PlayModes.BY_BAR:\r\n\t\t\t\t\tt = s.duration * (i + 1) + \"m\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase PlayModes.CONSTANT:\r\n\t\t\t\t\tt = Infinity\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('Invalid playMode: ' + config.playMode)\r\n\t\t\t}\r\n\r\n\t\t\ttotalPlanTime += duration\r\n\t\t\tsteps.push(bar);\r\n\r\n\t\t}\r\n\r\n\t\tthis.props.transport.schedule((time) => this.onPlanEnd(time), t);\r\n\t\tthis.endTime = Tone.Time(t).toTicks();\r\n\t\t\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({\r\n\t\t\t\ttotalPlanTime: totalPlanTime,\r\n\t\t\t\t// hmm this is shit as change in currentStepIdx doesn't move transport, this needs some thinking \r\n\t\t\t\tcurrentStepIdx: 0,\r\n\t\t\t\tsteps: steps,\r\n\t\t\t\tplayMode: config.playMode\r\n\t\t\t}),\r\n\t\t\tthis.stepChanged\r\n\t\t);\r\n\t}\r\n\r\n\tcalcTimeForBpm(seconds, bpm) {\r\n\t\treturn Tone.Time(seconds * bpm / this.baseBpm);\r\n\r\n\t}\r\n\r\n\tstartStep(stepIdx) {\r\n\t\tif (this.state.currentStepIdx !== stepIdx) {\r\n\t\t\tconst s = this.getStep(stepIdx);\r\n\t\t\tthis.props.transport.ticks = s.startTimeTicks;\r\n\t\t\tthis.setState({ currentStepIdx: stepIdx }, this.stepChanged)\r\n\t\t}\r\n\t}\r\n\r\n\tgetStep(idx) {\r\n\t\treturn this.state.steps[idx];\r\n\t}\r\n\r\n\tstepForward() {\r\n\t\t// check if we're not at the end of plan\r\n\t\tif (this.state.currentStepIdx + 1 < this.state.steps.length) {\r\n\t\t\tthis.startStep(this.state.currentStepIdx + 1)\r\n\t\t}\r\n\t}\r\n\r\n\tstepBackward() {\r\n\t\tif (this.state.currentStepIdx - 1 >= 0) {\r\n\t\t\tthis.startStep(this.state.currentStepIdx - 1)\r\n\t\t}\r\n\t}\r\n\r\n\tonPlanEnd(time) {\r\n\t\tif (this.state.playbackMode === PlaybackModes.STOP) {\r\n\t\t\tthis.props.onPlanEnd();\r\n\t\t}\r\n\t\telse if (this.state.playbackMode === PlaybackModes.REPEAT) {\r\n\t\t\tthis.startStep(0)\r\n\t\t}\r\n\t}\r\n\tstepChanged() {\r\n\t\tconst bpm = this.getCurrentStep().bpm\r\n\t\tthis.props.onPlanStep(bpm)\r\n\t}\r\n\r\n\tgetCurrentStep() {\r\n\t\tif (this.state.currentStepIdx >= this.state.steps.length) {\r\n\t\t\tthrow new Error(\"Trying to get step that doesn't exists\");\r\n\t\t}\r\n\t\treturn this.state.steps[this.state.currentStepIdx];\r\n\t}\r\n\r\n\tonPlaybackChange(newPlaybackMode) {\r\n\t\tthis.setState({ playbackMode: newPlaybackMode }, this.props.onChange);\r\n\t}\r\n\r\n\tbarRender = b => {\r\n\t\tconst cls = this.state.currentStepIdx === b.stepIdx ? \"current-step\" : \"\";\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => this.startStep(b.stepIdx)}\r\n\t\t\t\tclassName={\"step clickable \" + cls}\r\n\t\t\t\tkey={\"key_\" + b.stepIdx}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tb.duration !== Infinity\r\n\t\t\t\t\t\t? <>{b.durationFormatted} ({b.durationBars} {TrRange(Math.floor(b.durationBars),\"bars\")}) </>\r\n\t\t\t\t\t\t: ''}\r\n\t\t\t\t@ {b.bpm.toFixed(0)} bpm\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tonUpDownBtn() {\r\n\t\tthis.setState({ isUpDown: !this.state.isUpDown, isRandom: false }, this.props.onChange)\r\n\t}\r\n\r\n\tonRandomBtn() {\r\n\t\tthis.setState({ isRandom: !this.state.isRandom, isUpDown: false }, this.props.onChange)\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.playMode === PlayModes.CONSTANT) {\r\n\t\t\treturn <div/>\r\n\t\t}\r\n\t\treturn (\r\n\r\n\t\t\t<SimplePanel title={\"Plan\"}>\r\n\t\t\t\t<div className=\"Planner\">\r\n\t\t\t\t\t{/* <div>Next step in {this.state.stepProgress.toFixed(1)} seconds</div> */}\r\n\t\t\t\t\t<div>{Tr(\"Step progress\")} <SimpleProgress value={this.state.stepProgress * 100} /></div>\r\n\t\t\t\t\t<div>{Tr(\"Plan progress\")} <SimpleProgress value={this.state.planProgress * 100} /></div>\r\n\r\n\t\t\t\t\t{/* <Button onClick={() => this.togglePause()}>\r\n\t\t\t\t\tisPaused:\r\n\t\t\t\t\t{this.state.isPaused === true ? \"paused\" : \"normal\"}\r\n\t\t\t\t</Button> */}\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div style={{height: '200px', overflow: 'auto'}}>\r\n\t\t\t\t\t\t{this.state.steps.map(bar => this.barRender(bar))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{Tr(\"Total time:\")} {Utils.formatTime(this.state.totalPlanTime)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== PlayModes.CONSTANT}>\r\n\t\t\t\t\t<div>{Tr(\"After plan\")}</div>\r\n\t\t\t\t\t<ButtonGroup size=\"sm\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(PlaybackModes.STOP)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === PlaybackModes.STOP}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Stop\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(PlaybackModes.CONTINUE)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === PlaybackModes.CONTINUE}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Continue\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(PlaybackModes.REPEAT)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === PlaybackModes.REPEAT}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Repeat\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t<div>{Tr(\"Step order\")}</div>\r\n\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tonClick={(e) => this.onUpDownBtn(e)}\r\n\t\t\t\t\t\t\tactive={this.state.isUpDown}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Up and Down\")}\r\n\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\t// toggle\r\n\t\t\t\t\t\t\tonClick={() => this.onRandomBtn()}\r\n\t\t\t\t\t\t\tactive={this.state.isRandom}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Shuffle\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t</SimplePanel>\r\n\r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Planner;\r\n\r\nPlanner.defaultProps = {\r\n\tplaybackMode: InitPreset.playbackMode,\r\n\tplayMode: InitPreset.playMode,\r\n\tonChange: () => { },\r\n\tonPlanStep: () => { },\r\n\tonPlanEnd: () => { },\r\n\tcurrentStepIdx: NaN\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n\tInput,\r\n\tButton,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tModalFooter\r\n} from \"reactstrap\";\r\nimport Tr from \"./Locale\"\r\n\r\nclass EditPresetModal extends Component {\r\n\tstate = {\r\n\t\tmodal: false,\r\n\t\tnestedModal: false,\r\n\t\tpreset: null,\r\n\t\tpresetId: null,\r\n\t\tshowDelete: false\r\n\t};\r\n\r\n\ttoggle = () => {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tmodal: !prevState.modal,\r\n\t\t\tnestedModal: false\r\n\t\t}));\r\n\t}\r\n\r\n\ttoggleNested = () => {\r\n\t\tthis.setState({ nestedModal: !this.state.nestedModal })\r\n\t}\r\n\r\n\r\n\thandleSave() {\r\n\t\tconst preset = this.state.preset;\r\n\t\tconst title = this.state.preset.title;\r\n\t\tif (title && title.length > 0) {\r\n\t\t\tthis.props.onSave(title, preset);\r\n\t\t\tthis.toggle();\r\n\t\t}\r\n\t}\r\n\r\n\tedit(preset, presetId, title) {\r\n\r\n\t\t// preset = {...presetId};\r\n\t\tif (presetId && title) {\r\n\t\t\tpreset.presetId = presetId;\r\n\t\t\tpreset.title = title;\r\n\r\n\t\t}\r\n\t\t// debugger;\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tpreset: preset,\r\n\t\t\t\tshowDelete: presetId ? true : false\r\n\t\t\t},\r\n\t\t\tthis.toggle\r\n\t\t);\r\n\t}\r\n\r\n\ttitleChanged(e) {\r\n\t\tconst newTitle = e.target.value;\r\n\t\tlet preset = { ...this.state.preset };\r\n\t\tpreset.title = newTitle;\r\n\t\tthis.setState({ preset });\r\n\t}\r\n\r\n\thandleDelete() {\r\n\t\tthis.props.onDeleteBtn(this.state.preset);\r\n\t\tthis.toggle();\r\n\t}\r\n\r\n\trenderDelete() {\r\n\t\tif (this.state.showDelete === true) {\r\n\t\t\treturn (\r\n\t\t\t\t<Button color=\"warning\" onClick={this.toggleNested}>{Tr(\"Delete\")}</Button>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ marginTop: '0.5em' }}\r\n\t\t\t\t\toutline\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\tonClick={this.props.onSaveBtn}\r\n\t\t\t\t>\r\n\t\t\t\t\t{Tr(\"Save current settings\")}\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tisOpen={this.state.modal}\r\n\t\t\t\t\ttoggle={this.toggle}\r\n\t\t\t\t\tclassName={this.props.className}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggle}>{Tr(\"Save Preset\")}</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tonChange={e => this.titleChanged(e)}\r\n\t\t\t\t\t\t\tplaceholder={Tr(\"Title\")}\r\n\t\t\t\t\t\t\tdefaultValue={\r\n\t\t\t\t\t\t\t\t(this.state.preset &&\r\n\t\t\t\t\t\t\t\t\tthis.state.preset.title) ||\r\n\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/* <div className=\"code\">\r\n\t\t\t\t\t\t\t{JSON.stringify(this.state.preset)}\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t<Modal isOpen={this.state.nestedModal} toggle={this.toggleNested}>\r\n\t\t\t\t\t\t\t<ModalHeader toggle={this.toggleNested}>{Tr(\"Are you sure?\")}</ModalHeader>\r\n\t\t\t\t\t\t\t<ModalBody>{Tr(\"Are you sure to delete current preset?\")}</ModalBody>\r\n\t\t\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t\t\t<Button color=\"warning\" onClick={() => this.handleDelete()}>{Tr(\"Delete\")}</Button>\r\n\t\t\t\t\t\t\t\t<Button onClick={this.toggleNested}>{Tr(\"Cancel\")}</Button>\r\n\t\t\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => this.handleSave()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Save\")}\r\n\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggle}>\r\n\t\t\t\t\t\t\t{Tr(\"Cancel\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{this.renderDelete()}\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditPresetModal;\r\n\r\n\r\nEditPresetModal.defaultProps = {\r\n\tonDeleteBtn: function (preset) { },\r\n\tonSave: function (title, preset) { },\r\n\tonSaveBtn: function (e, idx) { }\r\n};","\r\nconst ColorThemes = {\r\n    'ambient' : {\r\n        3: '#FF6355',\r\n        2: '#E1537F',\r\n        1: '#AC5696',\r\n        0: '#705A94'\r\n        // 1: '#40557B',\r\n        // 0: '#2F4858'\r\n    },\r\n    'blueish' : {\r\n        0: '#D1D2F9',\r\n        1: '#A3BCF9',\r\n        2: '#7796CB',\r\n        3: '#576490'\r\n    },\r\n    'rainbow': {\r\n        0: '#FF715B',\r\n        1: '#F9CB40',\r\n        2: '#BCED09',\r\n        3: '#2F52E0'\r\n    }\r\n}\r\n\r\nconst Config = {\r\n    TRACKS_NUMBER: 4,\r\n    MAXIMUM_TIMESIGNATURE: 24,\r\n    PROGRESS_UPDATE_FPS: 30, // TODO: Set this according to device. higher values might cause slower devices to stutter\r\n    COLOR_PALETTE: ColorThemes['rainbow']\r\n}\r\nexport default Config;\r\n\r\n\r\n// old \r\n// 0: '#ff6355',\r\n// \t1: '#ff7155',\r\n// \t2: '#ff8055',\r\n// \t3: '#ff8e55',\r\n// \t4: '#ff9955',\r\n// \t5: '#ff9c55',\r\n// \t6: '#ffaa55'","import React, { Component } from \"react\";\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\nimport EditPresetModal from \"./EditPresetModal\"\r\nimport { PresetsLib, InitPreset } from './PresetsLib'\r\nimport { Samples } from \"./Instruments\"\r\nimport Tr from './Locale'\r\nimport SimplePanel from \"./SimplePanel\";\r\nimport Utils from \"./Utils\"\r\nimport Config from \"./Config\";\r\n\r\nclass PresetsManager extends Component {\r\n\tstate = {\r\n\t\tshowDelete: [],\r\n\t\tshowEdit: [],\r\n\t\tuserPresets: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst storedPresets = localStorage.getItem('userPresets');\r\n\t\tthis.state.userPresets = storedPresets ? JSON.parse(storedPresets) : [];\r\n\r\n\t\tthis.state.showDelete = this.state.userPresets ? Array(this.state.userPresets.length).fill(false) : []\r\n\t\tthis.state.showEdit = this.state.userPresets ? Array(this.state.userPresets.length).fill(false) : []\r\n\t}\r\n\r\n\t// Old version of app didn't use certain properties.\r\n\t// If user did store some ancient presets in cookie this will make it work again\r\n\tvalidatePreset(preset) {\r\n\r\n\t\tpreset.byBarInterval = preset.byBarInterval || preset.interval || InitPreset.byBarInterval;\r\n\t\tpreset.byTimeInterval = preset.byTimeInterval || preset.interval || InitPreset.byTimeInterval;\r\n\t\t// change from accents into track\r\n\t\tif (!preset.track) {\r\n\t\t\tlet track = [];\r\n\t\t\tpreset.accents.map(item => {\r\n\t\t\t\ttrack.push([item])\r\n\t\t\t\t// expected te return value in arrow function\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\tpreset.track = track;\r\n\t\t}\r\n\r\n\r\n\t\t// if no timeSignature then we're dealing with tracks made before polyrythm support. Fix them now.\r\n\t\tif (!preset.timeSignature) {\r\n\t\t\tconst timeSignature = preset.track.length\r\n\t\t\tpreset.timeSignature = timeSignature\r\n\r\n\t\t\tvar track = new Array(Config.TRACKS_NUMBER).fill(0).map(x => new Array(timeSignature).fill(0));\r\n\r\n\r\n\t\t\tfor (let beatIdx = 0; beatIdx < preset.track.length; beatIdx++) {\r\n\t\t\t\tconst beats = preset.track[beatIdx];\r\n\t\t\t\tfor (let beat = 0; beat < beats.length; beat++) {\r\n\t\t\t\t\ttrack[beats[beat]][beatIdx] = 1;\t// set volume to one, effectively enabling it\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpreset.track = track;\r\n\t\t}\r\n\r\n\t\tif (!preset.samples) {\r\n\t\t\tpreset.samples = this.convertInstrumentKeyToSamples(preset.instrumentKey)\r\n\t\t}\r\n\r\n\t\treturn preset;\r\n\t}\r\n\r\n\tconvertInstrumentKeyToSamples(instrumentKey) {\r\n\t\t// desired result: \"samples\": [{instrumentKey: 'tabla', file: 'dha-slide.wav' }, {instrumentKey: 'electrokit', file: 'Kick.wav'}, {instrumentKey: 'metronome', file: 'tap.wav'}],\r\n\t\tconst samples = Samples.filter(el => el.instrumentKey === instrumentKey);\r\n\t\treturn samples;\r\n\t}\r\n\r\n\tonPresetClick(preset) {\r\n\t\tthis.props.onSelect(this.validatePreset(preset));\r\n\t}\r\n\r\n\tonSavePreset(title, o) {\r\n\t\tconst preset = { title: title, ...o }\r\n\r\n\t\t// if it's got presetId then overwrite preset with such id\r\n\t\t// if no presetId then create it here\r\n\t\tif (preset.presetId === undefined) {\r\n\t\t\tlet presetId = 1;\r\n\t\t\tif (this.state.userPresets.length > 0) {\r\n\t\t\t\t// find max and add 1\r\n\t\t\t\tpresetId = Math.max.apply(Math, this.state.userPresets.map(function (p) { return p.presetId; }));\r\n\t\t\t\tpresetId++\r\n\t\t\t}\r\n\r\n\t\t\t// assign id\r\n\t\t\tpreset.presetId = presetId;\r\n\t\t}\r\n\r\n\r\n\t\t// update date\r\n\t\tpreset.savedDtm = new Date();\r\n\r\n\t\tlet userPresets = this.state.userPresets;\r\n\r\n\t\t// if (!userPresets) {\r\n\t\t// \tuserPresets = [];\r\n\t\t// }\r\n\r\n\t\t// overwrite by presetId\r\n\t\tlet idx = this.state.userPresets.findIndex(o => o.presetId === preset.presetId);\r\n\r\n\t\tif (idx < 0) {\r\n\t\t\tuserPresets.push(preset)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tuserPresets[idx] = preset;\r\n\t\t}\r\n\r\n\r\n\t\tthis.saveInLocalStorage(userPresets);\r\n\t\t// window.localStorage.setItem(preset.title, preset);\r\n\t}\r\n\r\n\tsaveInLocalStorage(presets) {\r\n\t\tlocalStorage.setItem('userPresets', JSON.stringify(presets))\r\n\t\tthis.setState({ userPresets: presets })\r\n\t}\r\n\r\n\tshowDeleteBtn(e, idx) {\r\n\t\tlet showDelete = { ...this.state };\r\n\t\tshowDelete[idx] = true;\r\n\t\tthis.setState({ showDelete });\r\n\t}\r\n\r\n\tshowEditBtn(e, idx, presetId) {\r\n\t\tlet showEdit = { ...this.state };\r\n\t\tshowEdit[idx] = true;\r\n\t\tthis.setState({ showEdit });\r\n\t}\r\n\thideEditBtn(e) {\r\n\t\tthis.setState({ showEdit: false })\r\n\t}\r\n\r\n\tonPresetDelete(preset) {\r\n\t\tlet idx = this.state.userPresets.findIndex(o => o.presetId === preset.presetId);\r\n\t\tlet newPresets = this.state.userPresets.slice();\r\n\r\n\t\t// let idx = this.state.userPresets.indexOf(preset)\r\n\t\tif (idx < 0) {\r\n\t\t\tthrow new Error(\"Selected preset \" + preset.title + \" has not been found in the store\")\r\n\t\t}\r\n\r\n\t\t// remove preset\r\n\t\tnewPresets.splice(idx, 1);\r\n\t\tthis.saveInLocalStorage(newPresets);\r\n\t}\r\n\r\n\tonPresetEdit(e, idx) {\r\n\t\tvar p = this.props.getPreset();\r\n\t\t\r\n\t\tif (idx !== undefined) {\r\n\r\n\t\t\tthis.refs.presetEditor.edit(p, this.state.userPresets[idx].presetId, this.state.userPresets[idx].title)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.refs.presetEditor.edit(p)\r\n\t\t}\r\n\t}\r\n\r\n\trenderUserPresets(userPresets) {\r\n\t\tif (userPresets.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{Tr(\"User presets\")}:\r\n\t\t\t\t</Row>\r\n\t\t\t\t{userPresets.map((item, idx) => (\r\n\t\t\t\t\t<Row className=\"presetItem clickable\"\r\n\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Col style={{ textAlign: 'left' }} >\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xs=\"auto\" className=\"userPresetSavedDtm\">\r\n\t\t\t\t\t\t\t{Utils.toLocaleDateTime(item.savedDtm)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button size=\"sm\" outline\r\n\t\t\t\t\t\t\t\tonClick={(e) => this.onPresetEdit(e, idx)}>\r\n\t\t\t\t\t\t\t\t{Tr(\"Edit\")}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* // <div className='editBtn clickable' onClick={(e) =>}></div> */}\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst userPresetsJson = localStorage.getItem('userPresets');\r\n\t\tlet userPresets = userPresetsJson ? JSON.parse(userPresetsJson) : [];\r\n\r\n\t\treturn (\r\n\t\t\t<SimplePanel className=\"PresetsManager\" title={Tr(\"Presets\")}>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{PresetsLib.map((item, idx) => {\r\n\t\t\t\t\t\tif (item.isHeader) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Row\r\n\t\t\t\t\t\t\t\t\tclassName={\"presetHeader\"}\r\n\t\t\t\t\t\t\t\t\tkey={\"header_\" + idx}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{Tr(item.title)}:\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Row\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\t\t\tclassName={\"presetItem clickable\"}\r\n\t\t\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{this.renderUserPresets(userPresets)}\r\n\t\t\t\t\t{/* center button */}\r\n\t\t\t\t\t<Row style={{ justifyContent: 'center' }}>\r\n\t\t\t\t\t\t<EditPresetModal ref='presetEditor' onDeleteBtn={(preset) => this.onPresetDelete(preset)} onSaveBtn={(e, idx) => this.onPresetEdit(e, idx)} onSave={(title, preset) => this.onSavePreset(title, preset)} />\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</SimplePanel>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PresetsManager;\r\n\r\nPresetsManager.defaultProps = {\r\n\tonSelect: function (preset) { }\r\n};\r\n","import React, { Component } from 'react';\r\n// import { accentColor } from './AccentTypes';\r\nimport { InitPreset } from './PresetsLib'\r\nimport Config from './Config';\r\n\r\nclass SvgClock extends Component {\r\n    state = {\r\n        track: this.props.track,\r\n        timeSignature: this.props.timeSignature\r\n    }\r\n    colorEmpty = \"#333\";\r\n    strokeColor = \"#444\";\r\n    strokeWidth = \"0.001em\"\r\n\r\n    setAccents(track) {\r\n        this.setState({ track: track })\r\n        // this.drawSvg()\r\n    }\r\n\r\n    getCoordinatesForPercent(percent, r = 1) {\r\n        const x = r * Math.cos(2 * Math.PI * percent);\r\n        const y = r * Math.sin(2 * Math.PI * percent);\r\n        return [x, y];\r\n    }\r\n\r\n    drawSlices(radius, trackIdx) {\r\n        // Drawing pie charts by David Gilbertson, taken from https://medium.com/hackernoon/a-simple-pie-chart-in-svg-dbdd653b6936\r\n        if (this.props.track[trackIdx] === undefined) {\r\n            debugger\r\n        }\r\n        let pctStep = 1 / this.props.track[trackIdx].length;\r\n        let slices = [];\r\n        // let step = pctStep;\r\n        this.props.track[trackIdx].forEach((volume, subIdx) => {\r\n            slices.push({ percent: pctStep, color: volume > 0 ? Config.COLOR_PALETTE[trackIdx] : this.colorEmpty });\r\n\r\n            // if (trackColumn > 0)\r\n\r\n            // step += pctStep;\r\n        })\r\n        let cumulativePercent = 0;\r\n\r\n        let paths = [];\r\n        slices.forEach((slice, idx) => {\r\n            // destructuring assignment sets the two variables at once\r\n            const [startX, startY] = this.getCoordinatesForPercent(cumulativePercent, radius);\r\n\r\n            // each slice starts where the last slice ended, so keep a cumulative percent\r\n            cumulativePercent += slice.percent;\r\n\r\n            const [endX, endY] = this.getCoordinatesForPercent(cumulativePercent, radius);\r\n\r\n            // if the slice is more than 50%, take the large arc (the long way around)\r\n            const largeArcFlag = slice.percent > .5 ? 1 : 0;\r\n\r\n            // create an array and join it just for code readability\r\n            const pathData = [\r\n                `M ${startX} ${startY}`, // Move\r\n                `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY}`, // Arc\r\n                `L 0 0`, // Line\r\n            ].join(' ');\r\n\r\n            // create a <path> and append it to the <svg> element\r\n            paths.push(\r\n                <path key={\"pie_\" + idx} d={pathData} fill={slice.color} stroke={this.strokeColor} strokeWidth={this.strokeWidth} />\r\n            )\r\n        });\r\n        return paths\r\n    }\r\n\r\n    // OLD_drawSlices(radius, filter) {\r\n    //     // Drawing pie charts by David Gilbertson, taken from https://medium.com/hackernoon/a-simple-pie-chart-in-svg-dbdd653b6936\r\n    //     let pctStep = 1 / this.props.track.length;\r\n    //     let slices = [];\r\n    //     // let step = pctStep;\r\n    //     this.props.track.forEach(trackColumn => {\r\n    //         const idx = trackColumn.indexOf(filter);\r\n    //         slices.push({ percent: pctStep, color: idx >= 0 ? accentColor[filter] : this.colorEmpty });\r\n    //         // step += pctStep;\r\n    //     })\r\n    //     let cumulativePercent = 0;\r\n\r\n    //     let paths = [];\r\n    //     slices.forEach((slice, idx) => {\r\n    //         // destructuring assignment sets the two variables at once\r\n    //         const [startX, startY] = this.getCoordinatesForPercent(cumulativePercent, radius);\r\n\r\n    //         // each slice starts where the last slice ended, so keep a cumulative percent\r\n    //         cumulativePercent += slice.percent;\r\n\r\n    //         const [endX, endY] = this.getCoordinatesForPercent(cumulativePercent, radius);\r\n\r\n    //         // if the slice is more than 50%, take the large arc (the long way around)\r\n    //         const largeArcFlag = slice.percent > .5 ? 1 : 0;\r\n\r\n    //         // create an array and join it just for code readability\r\n    //         const pathData = [\r\n    //             `M ${startX} ${startY}`, // Move\r\n    //             `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY}`, // Arc\r\n    //             `L 0 0`, // Line\r\n    //         ].join(' ');\r\n\r\n    //         // create a <path> and append it to the <svg> element\r\n    //         paths.push(\r\n    //             <path key={\"pie_\" + idx} d={pathData} fill={slice.color} stroke={this.strokeColor} strokeWidth={this.strokeWidth}  />\r\n    //         )\r\n    //     });\r\n    //     return paths\r\n    // }\r\n\r\n    drawText() {\r\n        let labels = [];\r\n        const pctStep = 1 / this.props.timeSignature;\r\n        let cumulativePercent = 0;\r\n\r\n        for (let i = 0; i < this.props.timeSignature; i++) {\r\n\r\n            let [x, y] = this.getCoordinatesForPercent(cumulativePercent, 0.9);\r\n            // tweak position of labels\r\n            x -= 0.06\r\n            labels.push(\r\n                <text x={x} y={y} key={\"label_\" + i} textAnchor=\"middle\" transform={\"rotate(90, \" + x + \", \" + y + \")\"} className=\"svgText\">{i + 1}</text>\r\n            )\r\n            cumulativePercent += pctStep\r\n        }\r\n\r\n        return <g>{labels}</g>;\r\n    }\r\n\r\n    setProgress(progress) {\r\n        this.line.style.transform = 'rotate(' + progress * 360 + 'deg)'\r\n    }\r\n    render() {\r\n        let radiusIncrement = 0.5 / Config.TRACKS_NUMBER;\r\n\r\n        let circles = [];\r\n\r\n        for (let i = 0; i < this.props.track.length; i++) {\r\n            // main circles\r\n            circles.push(this.drawSlices(0.8 - radiusIncrement * i, i));\r\n        }\r\n        // inner gray circle\r\n        circles.push(\r\n            <circle key=\"innerCircle\" cx=\"0\" cy=\"0\" r={0.8 - radiusIncrement * Config.TRACKS_NUMBER} fill={this.colorEmpty} stroke={this.strokeColor} strokeWidth={this.strokeWidth} />\r\n        )\r\n\r\n        return (\r\n            <div ref={el => (this.container = el)} className=\"visClockContainer\">\r\n                <svg viewBox=\"-1 -1 2 2\" ref={el => (this.svg = el)}>\r\n                    <g style={{ transform: 'rotate(-90deg)' }}>\r\n                        {\r\n                            circles\r\n                        }\r\n                        {this.drawText()}\r\n                        <line ref={el => (this.line = el)} strokeLinecap=\"round\" x1=\"0\" y1=\"0\" x2=\".7\" y2=\"0\" stroke=\"rgba(255,255,255,0.5)\" strokeWidth=\"0.1\" style={{ transform: 'rotate(' + this.props.partProgress * 360 + 'deg)' }} />\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SvgClock;\r\n\r\nSvgClock.defaultProps = {\r\n    track: InitPreset.track,\r\n    timeSignature: InitPreset.timeSignature\r\n}","import React, { Component } from 'react';\r\nimport Slider from 'rc-slider'\r\nimport regression from 'regression';\r\nimport { Badge, Button } from 'reactstrap'\r\n\r\n\r\nclass GeometricSlider extends Component {\r\n    state = {\r\n        value: this.props.defaultValue,\r\n        regression: undefined\r\n    };\r\n\r\n    constructor(props) {\r\n        // TODO:  \r\n        // currently it works only for min=1 only\r\n        super(props);\r\n\r\n        const d = [[0, this.props.min], [100, this.props.max]];\r\n\r\n        this.state.regression = regression.exponential(d, { precision: 10 })\r\n\r\n        this.prepareMarks();\r\n\r\n        this.state.value = this.props.defaultValue;\r\n\r\n        this.state.btnStep = props.btnStep || 1;\r\n    }\r\n\r\n    onMinusClick = () => {\r\n        const newValue = this.state.value - this.state.btnStep;\r\n        this.setState({ value: newValue }, this.props.onChange(newValue))\r\n    }\r\n\r\n    onPlusClick = () => {\r\n        const newValue = this.state.value + this.state.btnStep;\r\n        this.setState({ value: newValue }, this.props.onChange(newValue))\r\n    }\r\n\r\n\r\n    prepareMarks() {\r\n        this.marks = {};\r\n\r\n        for (let i = 0; i < this.props.marksAt.length; i++) {\r\n            this.marks[this.findX(this.props.marksAt[i])] = this.props.marksAt[i];\r\n        }\r\n    }\r\n\r\n    onChange(v) {\r\n        const value = Math.floor(this.state.regression.predict(v)[1]);\r\n        this.setState({ value: value })\r\n        this.props.onChange(value)\r\n    }\r\n\r\n    findX(y) {\r\n        // y = e^bx ==> x = ln(y) / b\r\n        return Math.log(y) / this.state.regression.equation[1];\r\n    }\r\n\r\n    setValue(v) {\r\n        this.setState({ value: v })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <Button size=\"sm\" outline className=\"inlineBtn\" onClick={this.onMinusClick}>-</Button>\r\n                    <Badge color=\"light\" onClick={this.onBadgeClick} className=\"d-i\">\r\n                        {this.props.badgeFormatter(this.state.value)}\r\n                    </Badge>\r\n                    <Button size=\"sm\" outline className=\"inlineBtn\" onClick={this.onPlusClick}>+</Button>\r\n                </div>\r\n                <Slider ref=\"slider\" included={false} value={this.findX(this.state.value)} style={{ height: '45px' }} onChange={(v) => this.onChange(v)} min={0} max={100} step={0.5} marks={this.marks} />\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default GeometricSlider;\r\n\r\nGeometricSlider.defaultProps = {\r\n    marksNum: 6,\r\n    marksStyle: {\r\n        color: '#ccc'\r\n    },\r\n    desc: '',\r\n    badgeFormatter: function (v) { return v; },\r\n    markFormatter: function (v) { return v; },\r\n    marksAt: []\r\n}","import React from \"react\";\r\nimport { Range } from \"rc-slider\";\r\nimport { Badge } from \"reactstrap\";\r\n\r\nclass AdvancedRange extends Range {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t// onClick={this.onBadgeClick}\r\n\t\t\t\t\t\tclassName=\"d-i\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.bounds[0]} - {this.state.bounds[1]}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n                <div style={{ height: \"30px\" }}>\r\n                {super.render()}\r\n                </div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AdvancedRange;\r\n","import React from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { Badge, Button } from \"reactstrap\";\r\n// import {Container, Row, Col} from 'reactstrap'\r\n\r\nclass AdvancedSlider extends Slider {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state.btnStep = props.btnStep || 1;\r\n\t}\r\n\tonMinusClick = () => {\r\n\t\tconst newValue = this.state.value - this.state.btnStep;\r\n\t\tthis.setState({value: newValue}, this.props.onChange(newValue))\r\n\t}\r\n\r\n\tonPlusClick = () => {\r\n\t\tconst newValue = this.state.value + this.state.btnStep;\r\n\t\tthis.setState({value: newValue}, this.props.onChange(newValue))\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"advancedSlider\">\r\n\t\t\t\t\t{this.props.disableBtns === true ? '' : <Button size=\"sm\" outline className=\"inlineBtn\" onClick={this.onMinusClick}>-</Button>}\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tclassName=\"d-i\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.value}\r\n\t\t\t\t\t\t{/* {this.props.badgeFormatter(this.state.value)} */}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t\t{this.props.disableBtns ===true ? '' : <Button size=\"sm\" outline className=\"inlineBtn\" onClick={this.onPlusClick}>+</Button>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ height: \"30px\" }}>\r\n\t\t\t\t\t<div>{super.render()}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonBadgeClick() {\r\n\t\t// TODO attach editorInPlace\r\n\t}\r\n}\r\n\r\nexport default AdvancedSlider;\r\n","import React, { Component } from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { Badge } from \"reactstrap\";\r\n\r\nclass DiscreteSlider extends Component {\r\n\r\n    state = {\r\n        value: undefined,\r\n        innerValue: 0\r\n    }\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        // helpful to display marks properly (need to be an object)\r\n        this.state.innerMarks = {};\r\n        Object.values(this.props.marks).map((el, idx)  => {\r\n            this.state.innerMarks[idx] = {label: el.label};\r\n            return true;\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // TODO: apply this componentDidUpdate to remaining custom sliders\r\n        var value = this.props.value;\r\n        var theValue = value !== undefined ? value : prevState.value;\r\n        var innerValue = Object.keys(this.props.marks).indexOf(theValue+ '');\r\n        \r\n        if ( innerValue !== prevState.innerValue) {\r\n            this.setState({innerValue: innerValue, value: value});\r\n        }\r\n    }\r\n\r\n    onSliderChange(sliderValue) {\r\n        const value = Object.values(this.props.marks)[sliderValue].value;\r\n        this.setState({ innerValue: sliderValue, value: value })\r\n        this.props.onChange(value)\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <Badge\r\n                        color=\"light\"\r\n                        className=\"d-i\"\r\n                    >\r\n                        {this.props.badgeFormatter(this.state.value)}\r\n                    </Badge>\r\n                </div>\r\n                {/* render it slightly narrower so we fit marks which usually falls outside the container */}\r\n                <div style={{ height: \"3.5em\", width: '95%', margin: 'auto', whiteSpace: 'nowrap' }}>\r\n                    <Slider ref=\"slider\"\r\n                        included={false}\r\n                        value={this.state.innerValue}\r\n                        style={{ height: '3.5em' }}\r\n                        onChange={(v) => this.onSliderChange(v)}\r\n                        min={0}\r\n                        max={Object.keys(this.props.marks).length - 1}\r\n                        step={1}\r\n                        marks={this.state.innerMarks} />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default DiscreteSlider;\r\n\r\n\r\nDiscreteSlider.defaultProps = {\r\n    badgeFormatter: function (v) { return v; },\r\n    markFormatter: function (v) { return v; },\r\n    defaultValue: 0\r\n}","import React, { Component } from \"react\";\r\nimport SimplePanel from \"./SimplePanel\";\r\nimport {\r\n\tButtonGroup,\r\n\tButton,\r\n\tCollapse,\r\n\tButtonDropdown,\r\n\tDropdownToggle,\r\n\tDropdownItem,\r\n\tDropdownMenu\r\n} from \"reactstrap\";\r\nimport { PlayModes } from \"./PlayModes\";\r\nimport GeometricSlider from \"./Sliders/GeometricSlider\";\r\nimport AdvancedRange from \"./Sliders/AdvancedRange\"\r\nimport AdvancedSlider from \"./Sliders/AdvancedSlider\"\r\nimport DiscreteSlider from \"./Sliders/DiscreteSlider\"\r\nimport Utils from \"./Utils\";\r\nimport { InitPreset } from \"./PresetsLib\";\r\nimport Tr, { TrRange } from \"./Locale\"\r\nclass ModePanel extends Component {\r\n\tstate = {\r\n\t\tbpmStep: this.props.bpmStep,\r\n\t\tbpmRange: this.props.bpmRange,\r\n\t\t// currentBpm: this.props.bpmRange[0],\r\n\t\tplaybackMode: this.props.playbackMode,\r\n\t\tplayMode: this.props.playMode,\r\n\t\tstepsNum: this.props.stepsNum,\r\n\t\texerciseTime: this.props.exerciseTime,\r\n\t\tbpmStepDropdownOpen: false,\r\n\t\tbyTimeInterval: this.props.byTimeInterval,\r\n\t\tbyBarInterval: this.props.byBarInterval,\r\n\t\tconstantBpmSlider: this.props.constantBpmSlider\r\n\t}\r\n\r\n\tonAfterChange(e) {\r\n\t\tthis.props.onChange()\r\n\t}\r\n\r\n\tonModeChange(newMode) {\r\n\r\n\t\tlet newState = {...this.state};\r\n\r\n\t\t// maintain current bpm when changing to CONSTANT playmode\r\n\t\tif (newMode === PlayModes.CONSTANT && newMode !== this.state.playMode) {\r\n\t\t\tnewState.constantBpmSlider =  this.props.transport.bpm.value;\r\n\t\t}\r\n\t\tnewState.playMode = newMode;\r\n\t\tthis.setState(newState, this.onAfterChange);\r\n\t}\r\n\r\n\r\n\r\n\tonBpmRangeChange(bpmRange) {\r\n\t\tthis.setState({ bpmRange: bpmRange }, this.onAfterChange);\r\n\t}\r\n\r\n\tonBpmSliderChange = (value) => {\r\n\t\tthis.setState({ constantBpmSlider: value }, this.onAfterChange);\r\n\t}\r\n\r\n\tonBpmStepChange() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tbpmStepDropdownOpen: !prevState.bpmStepDropdownOpen\r\n\t\t}));\r\n\t}\r\n\r\n\tonBpmStepSelect(value) {\r\n\t\tthis.setState({ bpmStep: value }, this.onAfterChange);\r\n\t}\r\n\r\n\tsetValue(o) {\r\n\t\tthis.refs.byBarSlider.setValue(o.byBarInterval || InitPreset.byBarInterval)\r\n\t\tthis.refs.byTimeSlider.setValue(o.byTimeInterval || InitPreset.byTimeInterval)\r\n\t\t// this.refs.exerciseTimeSlider.setValue(o.exerciseTime || InitPreset.exerciseTime);\r\n\r\n\t\tthis.refs.bpmRange.setState({ bounds: o.bpmRange })\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tplayMode: o.playMode,\r\n\t\t\t\tplaybackMode: o.playbackMode || this.state.playbackMode,\r\n\t\t\t\tbpmStep: o.bpmStep,\r\n\t\t\t\texerciseTime: o.exerciseTime || this.state.exerciseTime,\r\n\t\t\t\tstepsNum: o.stepsNum || this.state.stepsNum,\r\n\t\t\t\tbyBarInterval: o.byBarInterval,// || this.state.byBarInterval,\r\n\t\t\t\tbyTimeInterval: o.byTimeInterval, //|| this.state.byTimeInterval,\r\n\t\t\t\tbpmRange: o.bpmRange,\r\n\r\n\t\t\t\tconstantBpmSlider: o.constantBpmSlider || this.state.constantBpmSlider\r\n\r\n\t\t\t},\r\n\t\t\tthis.onAfterChange\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tonTimeIntervalChange(v) {\r\n\t\tthis.setState({ byTimeInterval: v, interval: v }, this.onAfterChange);\r\n\t}\r\n\r\n\tonBarIntervalChange(v) {\r\n\t\tthis.setState({ byBarInterval: v, interval: v }, this.onAfterChange);\r\n\t}\r\n\r\n\tbyBarFormatter(barsNum) {\r\n\t\treturn barsNum + \" \" + TrRange(barsNum, \"bars\");\r\n\t}\r\n\r\n\trenderIncreaseBpmDropdown() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ButtonDropdown\r\n\t\t\t\t\tstyle={{ margin: \"0px 5px\" }}\r\n\t\t\t\t\tisOpen={this.state.bpmStepDropdownOpen}\r\n\t\t\t\t\ttoggle={() => this.onBpmStepChange()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DropdownToggle caret size=\"sm\" outline color=\"light\">\r\n\t\t\t\t\t\t{this.state.bpmStep}\r\n\t\t\t\t\t</DropdownToggle>\r\n\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t{[1,2,3,5,10,15,20,30,50,100].map(el => {\r\n\t\t\t\t\t\t\treturn <DropdownItem key={\"bpm_\"+el} onClick={() => {this.onBpmStepSelect(el)}}>{el}</DropdownItem>\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t</ButtonDropdown>\r\n\t\t\t\tbpm\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonStepsSliderChange(value) {\r\n\t\tthis.setState({ stepsNum: value }, this.onAfterChange);\r\n\t}\r\n\r\n\tonExerciseTimeSliderChange(value) {\r\n\t\tthis.setState({ exerciseTime: value }, this.onAfterChange);\r\n\t}\r\n\r\n\r\n\r\n\trenderTimeSlider() {\r\n\t\tconst marks = {}\r\n\t\tconst mArr = [300,600,900,1200,1800,3600,7200,10800]\r\n\t\t\r\n\t\tmArr.map(el => {\r\n\t\t\tmarks[el] = {value: el, label: Utils.formatTime(el)};\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\treturn (<div>\r\n\t\t\t{Tr(\"Exercise Time\")}\r\n\t\t\t<DiscreteSlider\r\n\t\t\t\tref=\"exerciseTimeSlider\"\r\n\t\t\t\tbadgeFormatter={Utils.formatTimeLong}\r\n\t\t\t\tmarkFormatter={Utils.formatTime}\r\n\t\t\t\tmarks={marks}\r\n\t\t\t\tvalue={this.state.exerciseTime}\r\n\t\t\t\tonChange={(value) => this.onExerciseTimeSliderChange(value)}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t</div>);\r\n\t}\r\n\r\n\trenderStepsSlider() {\r\n\t\treturn (<div>\r\n\t\t\t{Tr(\"Number of steps\")}\r\n\t\t\t<AdvancedSlider\r\n\t\t\t\tref=\"stepsSlider\"\r\n\t\t\t\tmin={2}\r\n\t\t\t\tincluded={false}\r\n\t\t\t\tmax={100}\r\n\t\t\t\tmarks={{ 1: '1', 5: '5', 10: '10', 15: '15', 20: '20', 30: '30', 40: '40', 50: '50', 60: '60', 70: '70', 80: '80', 90: '90', 100: '100' }}\r\n\t\t\t\tvalue={this.state.stepsNum}\r\n\t\t\t\tonChange={(value) => this.onStepsSliderChange(value)}\r\n\t\t\t/>\r\n\t\t</div>);\r\n\t}\r\n\trenderSpeedRange() {\r\n\t\treturn (<div>\r\n\t\t\t{Tr(\"BPM range\")}\r\n\t\t\t<AdvancedRange\r\n\t\t\t\tref=\"bpmRange\"\r\n\t\t\t\tmin={30}\r\n\t\t\t\tmax={1200}\r\n\t\t\t\tdefaultValue={[\r\n\t\t\t\t\tthis.state.bpmRange[0],\r\n\t\t\t\t\tthis.state.bpmRange[1]\r\n\t\t\t\t]}\r\n\t\t\t\tpushable={true}\r\n\t\t\t\tonAfterChange={(value) => this.onBpmRangeChange(value)}\r\n\t\t\t/>\r\n\t\t</div>);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SimplePanel className=\"ModePanel\" title=\"Mode\" width=\"300px\">\r\n\t\t\t\t<h6>{Tr('Increase speed')}</h6>\r\n\t\t\t\t<ButtonGroup size=\"sm\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(PlayModes.SET_TIME)}\r\n\t\t\t\t\t\tactive={this.state.playMode === PlayModes.SET_TIME}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Tr(\"Set time\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(PlayModes.BY_BAR)}\r\n\t\t\t\t\t\tactive={this.state.playMode === PlayModes.BY_BAR}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Tr(\"By bar\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(PlayModes.BY_TIME)}\r\n\t\t\t\t\t\tactive={this.state.playMode === PlayModes.BY_TIME}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Tr(\"By time\")}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(PlayModes.CONSTANT)}\r\n\t\t\t\t\t\tactive={this.state.playMode === PlayModes.CONSTANT}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Tr(\"Constant\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\r\n\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== PlayModes.CONSTANT}>\r\n\t\t\t\t\t{this.renderSpeedRange()}\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === PlayModes.SET_TIME}>\r\n\t\t\t\t\t{this.renderTimeSlider()}\r\n\t\t\t\t\t{this.renderStepsSlider()}\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === PlayModes.BY_BAR}>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{Tr(\"Increase speed every\")}\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byBarSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byBarInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={this.byBarFormatter}\r\n\t\t\t\t\t\t\tonChange={v => this.onBarIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={301}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 5, 10, 20, 50, 100, 300]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === PlayModes.BY_TIME}>\r\n\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t{Tr(\"Increase speed every\")}\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byTimeSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byTimeInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={Utils.formatTimeLong}\r\n\t\t\t\t\t\t\tmarkFormatter={Utils.formatTime}\r\n\t\t\t\t\t\t\tonChange={v => this.onTimeIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={1200}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 5, 10, 30, 60, 120, 240, 600, 1200]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== PlayModes.CONSTANT && this.state.playMode !== PlayModes.SET_TIME}>\r\n\t\t\t\t\t{this.renderIncreaseBpmDropdown()}\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === PlayModes.CONSTANT}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{Tr(\"BPM\")}\r\n\r\n\t\t\t\t\t\t<AdvancedSlider\r\n\t\t\t\t\t\t\tref=\"constantBpmSlider\"\r\n\t\t\t\t\t\t\tincluded={false}\r\n\t\t\t\t\t\t\tmin={10}\r\n\t\t\t\t\t\t\tbtnStep={10}\r\n\t\t\t\t\t\t\tmax={1200}\r\n\t\t\t\t\t\t\tmarks={{ 30: '30', 200: '200', 400: '400', 600: '600', 800: '800', 1000: '1000',  1200: '1200' }}\r\n\t\t\t\t\t\t\tvalue={this.state.constantBpmSlider}\r\n\t\t\t\t\t\t\tonChange={this.onBpmSliderChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t</SimplePanel>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModePanel;\r\n\r\nModePanel.defaultProps = {\r\n\tplayMode: InitPreset.playMode,\r\n\tplaybackMode: InitPreset.playbackMode,\r\n\tinterval: InitPreset.interval,\r\n\tbpmStep: InitPreset.bpmStep,\r\n\tbpmRange: InitPreset.bpmRange,\r\n\tbyTimeInterval: InitPreset.byTimeInterval,\r\n\tbyBarInterval: InitPreset.byBarInterval,\r\n\tstepsNum: InitPreset.stepsNum,\r\n\texerciseTime: InitPreset.exerciseTime,\r\n\tconstantBpmSlider: InitPreset.constantBpmSlider,\r\n\t// currentBpm: InitPreset.bpmRange[0],\r\n\tonAfterChange: null\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Badge, ButtonGroup, Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { Samples, InstrumentsByKey } from '../Instruments'\r\nimport { InitPreset } from '../PresetsLib'\r\nimport Tr from './../Locale'\r\nimport Config from \"../Config\";\r\nclass TrackRow extends Component {\r\n\r\n    state = {\r\n        activeIdx: null,\r\n        label: Tr(\"Please select\")\r\n\r\n        // instrument: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        // load initial sample defined in InitPreset\r\n        if (!InitPreset.samples[this.props.idx]) {\r\n            return\r\n        }\r\n\r\n        // TODO: I think I can find better place for this code. It's doing the job though and I'm lazy so...\r\n        const instrument = InstrumentsByKey[InitPreset.samples[this.props.idx].instrumentKey];\r\n        const file = InitPreset.samples[this.props.idx].file;\r\n        this.onSampleSelect(instrument.key, file);\r\n    }\r\n\r\n    addBeat() {\r\n        if (this.props.trackRow.length < Config.MAXIMUM_TIMESIGNATURE) {\r\n            this.props.onMeasureChange(this.props.trackRow.length + 1)\r\n        }\r\n    }\r\n\r\n    removeBeat() {\r\n        if (this.props.trackRow.length > 1) {\r\n            this.props.onMeasureChange(this.props.trackRow.length - 1)\r\n        }\r\n    }\r\n\r\n    onSampleChange() {\r\n        this.setState(prevState => ({\r\n            sampleDropdownOpen: !prevState.sampleDropdownOpen\r\n        }));\r\n\r\n    }\r\n\r\n    onSampleSelect(instrumentKey, filename) {\r\n        this.props.soundLibrary.use(this.props.idx, instrumentKey, filename)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"trackRow\">\r\n                <div className=\"label\">\r\n                    <ButtonDropdown\r\n                        isOpen={this.state.sampleDropdownOpen}\r\n                        toggle={() => this.onSampleChange()}\r\n                    >\r\n                        <DropdownToggle\r\n                            caret\r\n                            size=\"sm\"\r\n                            outline\r\n                            // className='w-100'\r\n                            style={{ width: '6rem' }}\r\n                            color=\"light\"\r\n                            ref=\"dropdown\"\r\n                        >\r\n                            {this.props.soundLibrary.playersArr[this.props.idx] ? this.props.soundLibrary.playersArr[this.props.idx].fullLabel : Tr('Select')}\r\n                            {/* {(this.props.instrument && this.props.instrument.file) || 'Please select'} */}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                            {\r\n                                Samples.map((sample, idx) => {\r\n                                    return (\r\n                                        <DropdownItem key={'row_' + idx} onClick={() => this.onSampleSelect(sample.instrumentKey, sample.file)}>\r\n                                            {InstrumentsByKey[sample.instrumentKey].label} - {sample.label}\r\n                                        </DropdownItem>);\r\n                                })\r\n                            }\r\n                        </DropdownMenu>\r\n                    </ButtonDropdown>\r\n\r\n                    <Badge color=\"outline\" style={{ alignSelf: 'center', width: '1.2rem'}}>{ this.props.trackRow.length }</Badge>\r\n                    {/* <Badge color=\"outline\">{this.props.trackRow.length != this.props.timeSignature ? this.props.trackRow.length : ''}</Badge> */}\r\n                    \r\n                    <ButtonGroup size=\"xs\" vertical>\r\n                        <Button onClick={() => this.addBeat()}>+</Button>\r\n                        <Button onClick={() => this.removeBeat()}>-</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n\r\n                <div className=\"cells\" ref=\"cellsDiv\">\r\n                    {/* <div className='indicator' style={{ left: this.props.progress + '%', position: 'relative' }}>|</div> */}\r\n                    {\r\n                        this.props.trackRow.map((el, idx) => {\r\n                            const style = {}\r\n                            if (this.props.trackRow[idx]) {\r\n                                style.backgroundColor = Config.COLOR_PALETTE[this.props.idx]\r\n                            }\r\n                            return (\r\n                                <div\r\n                                    key={\"cell_\" + idx}\r\n                                    className=\"clickable cell\"\r\n                                    style={style}\r\n                                    onClick={() => this.props.onClick(this.props.idx, idx)} />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackRow;\r\n\r\nTrackRow.defaultProps = {\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport TrackRow from './TrackRow'\r\nimport SimplePanel from \"../SimplePanel\";\r\nimport { Badge, Button, ButtonGroup } from 'reactstrap'\r\nimport { InitPreset } from \"../PresetsLib\";\r\nimport Tr from \"../Locale\"\r\nimport Config from \"../Config\";\r\n\r\nclass TrackView extends Component {\r\n    state = {\r\n        // track: this.props.track,\r\n        // trackInstruments: [],\r\n        timeSignature: this.props.timeSignature\r\n    }\r\n\r\n    rowRefs = [];\r\n\r\n    handleCellClick(sampleIdx, columnIdx) {\r\n        // copy array\r\n        let track = [...this.props.track];\r\n\r\n        let v = track[sampleIdx][columnIdx];\r\n\r\n        if (v > 0) {\r\n            track[sampleIdx][columnIdx] = 0;\r\n        }\r\n        else {\r\n            track[sampleIdx][columnIdx] = 1;\r\n        }\r\n        this.props.onChange(track, this.props.timeSignature);\r\n    }\r\n\r\n    setProgress(progress) {\r\n        this.indicator.style.left = this.indicator.minLeft + progress * (this.indicator.maxRight - this.indicator.minLeft) + 'px'\r\n    }\r\n\r\n    updateDimensions() {\r\n        // TODO: this is quite ugly\r\n        const cellsBBtop = this.refs.trackRow_0.refs.cellsDiv.getBoundingClientRect();\r\n        const cellsBBbottom = this.refs.trackRow_3.refs.cellsDiv.getBoundingClientRect();\r\n        const box = { left: cellsBBtop.left, top: cellsBBtop.top, bottom: cellsBBbottom.bottom, right: cellsBBbottom.right };\r\n        const indicator = this.refs.indicator;\r\n\r\n        const left = this.refs.trackRow_0.refs.cellsDiv.offsetLeft;\r\n        indicator.minLeft = this.refs.trackRow_0.refs.cellsDiv.offsetLeft;\r\n        const right = left + this.refs.trackRow_0.refs.cellsDiv.offsetWidth;\r\n        indicator.style.left = left + 'px'\r\n        indicator.maxRight = right;\r\n\r\n        indicator.style.height = box.bottom - box.top + 'px'\r\n        this.indicator = indicator;\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('resize', () => this.updateDimensions());\r\n        this.updateDimensions();\r\n    }\r\n\r\n    addBeat() {\r\n        // add silent beat to each track, make sure we don't exceed max allowed timesignature\r\n\r\n        if (this.props.timeSignature < Config.MAXIMUM_TIMESIGNATURE) {\r\n            let track = [...this.props.track]\r\n\r\n            for (let i = 0; i < track.length; i++) {\r\n                if (track[i].length < Config.MAXIMUM_TIMESIGNATURE) {\r\n                    track[i].push(0)\r\n                }\r\n            }\r\n            this.props.onChange(track, this.props.timeSignature + 1)\r\n        }\r\n    }\r\n\r\n    removeBeat() {\r\n        // remove a beat from each track, making sure there won't be negative timeSignatures on any track\r\n\r\n        if (this.props.timeSignature > 1) {\r\n            let track = [...this.props.track];\r\n\r\n            for (let i = 0; i < track.length; i++) {\r\n                if (track[i].length > 1) {\r\n                    track[i].pop()\r\n                }\r\n            }\r\n            this.props.onChange(track, this.props.timeSignature - 1)\r\n\r\n        }\r\n    }\r\n\r\n    onTrackRowSignatureChange(trackId, newTimeSignature) {\r\n\r\n        if (newTimeSignature < 24) {\r\n            let track = [...this.props.track]\r\n            if (newTimeSignature > track[trackId].length) {\r\n                // add silent beat\r\n                track[trackId].push(0);\r\n\r\n            }\r\n            else {\r\n                track[trackId].pop();\r\n            }\r\n\r\n            this.props.onChange(track, this.props.timeSignature)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.updateDimensions();\r\n    }\r\n\r\n    render() {\r\n\r\n        let indicatorProgress = 0;\r\n        if (this.indicator) {\r\n            indicatorProgress = this.indicator.minLeft + this.props.partProgress * (this.indicator.maxRight - this.indicator.minLeft) + 'px';\r\n        }\r\n\r\n        return (\r\n            <SimplePanel style={{ padding: '15px' }} title={Tr(\"Sequencer\")}>\r\n                <div className=\"trackView\">\r\n                    <div className=\"trackContainer\">\r\n                        <div className=\"indicator\" ref='indicator' style={{ left: indicatorProgress }} />\r\n                        {\r\n                            // TODO: get rid of this hardcoded stuff\r\n                            [0, 1, 2, 3].map(idx => {\r\n                                return (\r\n                                    <TrackRow\r\n                                        idx={idx}\r\n                                        ref={\"trackRow_\" + idx}\r\n                                        soundLibrary={this.props.soundLibrary}//.use(idx, instrument, file);\r\n                                        onMeasureChange={(newTimeSignature) => this.onTrackRowSignatureChange(idx, newTimeSignature)}\r\n                                        key={\"trackRow_\" + idx}\r\n                                        timeSignature={this.props.timeSignature}\r\n                                        progress={this.props.progress}\r\n                                        trackRow={this.props.track[idx]}\r\n                                        onClick={(sampleIdx, trackIdx) => this.handleCellClick(sampleIdx, trackIdx)}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"btnContainer\">\r\n                        <ButtonGroup size=\"sm\" vertical>\r\n                            <Button onClick={() => this.addBeat()}>+</Button>\r\n                            <Button onClick={() => this.removeBeat()}>-</Button>\r\n                        </ButtonGroup>\r\n                        <div height=\"1em\">\r\n                            <Badge className=\"beatsCntBadge\" color=\"dark\">{this.props.timeSignature}</Badge>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </SimplePanel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackView;\r\n\r\nTrackView.defaultProps = {\r\n    track: InitPreset.track\r\n}\r\n\r\n","import Tone from 'tone'\r\nimport { Samples, InstrumentsByKey } from './Instruments';\r\n\r\n// class SoundLibrary extends Component {\r\nclass SoundLibrary  {\r\n    // playersArr = [];\r\n    players = new Tone.Players({})\r\n    playersArr = []; \r\n    // state = {\r\n    //     players: []\r\n    // }\r\n    reverb = new Tone.Reverb().toMaster();\r\n\r\n    constructor(props) {\r\n        // super(props)\r\n\r\n        // this is required for convolution rever to generate IR profile\r\n        this.reverb.decay = 4;\r\n        this.reverb.predelay = 0.05;\r\n        this.reverb.generate();\r\n\r\n        this.reverb.wet.value = 0;\r\n        this.players.connect(this.reverb);\r\n        this.players.toMaster();\r\n    }\r\n\r\n    use(idx, instrumentKey, file) {\r\n        const instrument = InstrumentsByKey[instrumentKey];\r\n\r\n        this.players.add('player_' + idx, './audio/' + instrumentKey + '/' + file, (player) => this.onLoad(player));\r\n\r\n        let player = this.players.get('player_' + idx);\r\n        player.instrument = instrument;\r\n        player.file = file;\r\n        player.idx = idx;\r\n        player.fullLabel = Samples.find(el => el.file === file).label;\r\n\r\n        this.playersArr[idx] = player;\r\n    }\r\n\r\n    getSamples() {\r\n        let samples = [];\r\n        this.playersArr.map(player => {\r\n            samples.push({\r\n                file: player.file,\r\n                instrumentKey: player.instrument.key\r\n            })\r\n            // expected to return value from arrow func\r\n            return true;\r\n        });\r\n        return samples;\r\n    }\r\n\r\n    play(trackIdx, time) {\r\n        const player = this.playersArr[trackIdx];\r\n        if (player && player.loaded) {\r\n            player.start(time);\r\n        }\r\n    }\r\n\r\n    setReverb(wet) {\r\n        this.reverb.wet.value = wet;\r\n    }\r\n    // setVolume(newVolume) {\r\n    //     this.state.players.map(player => {\r\n    //         player.volume.value = newVolume;\r\n    //     });\r\n    // }\r\n}\r\nexport default SoundLibrary;","import React, { Component } from \"react\";\r\nimport Tone from \"tone\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport SimplePanel from './SimplePanel'\r\nimport { Button } from 'reactstrap'\r\nimport { InitPreset } from './PresetsLib'\r\nimport Planner from './Planner'\r\nimport Tr from './Locale'\r\nimport PresetsManager from './PresetsManager'\r\nimport SvgClock from \"./SvgClock\";\r\nimport ModePanel from './ModePanel'\r\nimport TrackView from './TrackView/TrackView'\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler'\r\nimport Config from './Config'\r\nimport SoundLibrary from \"./SoundLibrary\";\r\nimport AdvancedSlider from \"./Sliders/AdvancedSlider\";\r\n\r\nclass SoundMachine extends Component {\r\n\tsoundLibrary = new SoundLibrary();\r\n\r\n\tstate = {\r\n\t\tinitialized: false,\r\n\t\tconfig: InitPreset,\r\n\t\ttrack: this.props.track,\r\n\t\ttimeSignature: this.props.timeSignature\r\n\t};\r\n\r\n\ttransport = Tone.Transport;\r\n\ttone = Tone;\r\n\r\n\tcomponentDidMount() {\r\n\t\tTone.Transport.lookAhead = 10;\r\n\r\n\t\t// initialize main loop\r\n\t\tthis.part = new Tone.Part((time, note) => this.repeat(time, note), [])\r\n\t\tthis.part.loop = true;\r\n\t\t// this.part.humanize = true;\r\n\t\tthis.part.start(0)\r\n\r\n\r\n\t\tconst config = this.getConfig();\r\n\t\tthis.setPlan(config);\r\n\r\n\t\tthis.initProgressUpdate();\r\n\t\tthis.documentTitle = document.title;\r\n\r\n\t\tthis.setState({ initialized: true })\r\n\t\tthis.props.onReady();\r\n\t}\r\n\r\n\tgetConfig() {\r\n\t\treturn { ...this.refs.modePanel.state, ...{ track: this.state.track }, ...{ timeSignature: this.state.timeSignature }, ...{ samples: this.soundLibrary.getSamples() } };\r\n\t}\r\n\r\n\tinitProgressUpdate() {\r\n\t\tsetInterval(() => this.onProgress(), 1000 / Config.PROGRESS_UPDATE_FPS)\r\n\t}\r\n\r\n\tsetPlan(config) {\r\n\t\t// cancel all events\r\n\t\tthis.transport.cancel();\r\n\t\tthis.transport.position = 0;\r\n\t\tthis.setTrack(config.track.slice(), config.timeSignature);\t// TODO: Unsure why we need to pass copy\r\n\t\tthis.refs.planner.setPlan(config);\r\n\r\n\t}\r\n\r\n\t// trackRow.length determine polyrhythm measure, timeSignature is main time signature we relate polyrythms to\r\n\tcreatePoly(trackRow, trackIdx, timeSignature) {\r\n\t\tconst ticks = this.tone.Time(\"1m\").toTicks();\r\n\t\tconst interval = ticks / trackRow.length;\r\n\r\n\t\tfor (let i = 0; i < trackRow.length; i++) {\r\n\t\t\tif (trackRow[i] > 0) {\r\n\t\t\t\tthis.part.add(interval.toFixed(0) * i + 'i', trackIdx);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetTrack(track, timeSignature) {\r\n\t\tif (this.state.track === track) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// make sure we have 4 tracks\r\n\t\tif (track.length < Config.TRACKS_NUMBER) {\r\n\t\t\ttrack.push(new Array(timeSignature).fill(0));\r\n\t\t}\r\n\t\tthis.setTimeSignature(timeSignature);\r\n\r\n\t\tthis.part.removeAll();\r\n\r\n\t\tfor (let i = 0; i < track.length; i++) {\r\n\t\t\tthis.createPoly(track[i], i, timeSignature)\r\n\t\t}\r\n\t\tthis.part.loopEnd = '1m'\r\n\t\tthis.part.start(0);\r\n\r\n\t\tthis.setState({ track: track, timeSignature: timeSignature })\r\n\r\n\t}\r\n\r\n\tonProgress() {\r\n\t\tif (this.transport.state === 'stopped') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.refs.debug) {\r\n\t\t\tthis.refs.debug.innerHTML = this.transport.seconds.toFixed(1)\r\n\t\t}\r\n\r\n\t\tif (this.refs.planner) { this.refs.planner.updateProgress() }\r\n\r\n\t\tthis.refs.svgClock.setProgress(this.part.progress)\r\n\t\tthis.refs.trackView.setProgress(this.part.progress)\r\n\t}\r\n\r\n\trepeat = (time, trackIdx) => {\r\n\t\tthis.soundLibrary.play(trackIdx, time)\r\n\t}\r\n\r\n\tcalcTimeForBpm(seconds, bpm) {\r\n\t\treturn Tone.Time(seconds * bpm / this.baseBpm);\r\n\t}\r\n\r\n\tsetTimeSignature(timeSignature) {\r\n\t\tif (timeSignature !== this.transport.timeSignature) {\r\n\t\t\tthis.transport.timeSignature = timeSignature;\r\n\t\t}\r\n\t}\r\n\r\n\tsetBpm = bpm => {\r\n\r\n\t\tif (isNaN(bpm) || bpm <= 0 || bpm > 1200) {\r\n\t\t\tthrow new Error(\"Invalid BPM value: \" + bpm)\r\n\t\t}\r\n\r\n\t\tif (bpm !== this.transport.bpm.value) {\r\n\t\t\tTone.Transport.bpm.value = bpm;\r\n\r\n\t\t\tdocument.title = bpm.toFixed(0) + ' | ' + this.documentTitle;\r\n\r\n\t\t\t// the animation and overflow retrigger seems to make metronome bit jiggery, unsure if we should implement it\r\n\t\t\t// this.refs.bpmInfo.classList.remove('bump')\r\n\t\t\t// void this.refs.bpmInfo.offsetWidth;\r\n\t\t\t// this.refs.bpmInfo.classList.add('bump');\r\n\t\t\t// const bpmInfo = this.refs.bpmInfo\r\n\t\t\t// bpmInfo.addEventListener( \"animationend\",  function() {\r\n\t\t\t// \tbpmInfo.classList.remove(\"bump\");\r\n\t\t\t//   } );\r\n\t\t\tthis.setState({ bpm: bpm })\r\n\t\t}\r\n\t};\r\n\r\n\ttoggle() {\r\n\t\tTone.Transport.state === 'started' ? this.stop() : this.start();\r\n\t};\r\n\r\n\tonPlanStep(bpm) {\r\n\t\tthis.setBpm(bpm);\r\n\t}\r\n\r\n\tonControlChange() {\r\n\t\tconst v = this.getConfig();\r\n\r\n\t\tthis.setPlan(v);\r\n\t}\r\n\r\n\tonPresetSelect(preset) {\r\n\t\t// set preset's stuff\r\n\t\tthis.setState({ track: preset.track, timeSignature: preset.timeSignature }, function () {\r\n\t\t\tthis.refs.modePanel.setValue(preset)\r\n\t\t});\r\n\r\n\t\t// set instruments\r\n\t\tfor (let i = 0; i < preset.samples.length; i++) {\r\n\t\t\tthis.soundLibrary.use(i, preset.samples[i].instrumentKey, preset.samples[i].file)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tonTrackChange(newTrack, timeSignature) {\r\n\t\tif (this.state.timeSignature !== timeSignature) {\r\n\t\t\t// length changed so after setting track, recreate Plan\r\n\t\t\tconst config = this.getConfig();\r\n\t\t\tconfig.track = newTrack;\r\n\t\t\tconfig.timeSignature = timeSignature;\r\n\t\t\tthis.setPlan(config);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setTrack(newTrack, timeSignature)\r\n\t\t}\r\n\t}\r\n\r\n\tonVolumeChange(newVolume) {\r\n\t\tthis.tone.Master.volume.value = -60 + (newVolume * 60 / 100) + 6\r\n\t\t// this.soundLibrary.setVolume(newVolume / 100)\r\n\t}\r\n\r\n\tonReverbChange(value) {\r\n\t\tthis.soundLibrary.setReverb(value / 100)\r\n\t\t// console.log('reverb',value)\r\n\t}\r\n\r\n\thandleKey(key, e) {\r\n\t\te.preventDefault();\r\n\t\tswitch (key) {\r\n\r\n\t\t\tcase 's':\r\n\t\t\tcase 'space':\r\n\t\t\t\tthis.toggle();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'esc':\r\n\t\t\t\tthis.stop();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'left':\r\n\t\t\t\tthis.refs.planner.stepBackward()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'right':\r\n\t\t\t\tthis.refs.planner.stepForward()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'up':\r\n\t\t\t\tif (this.state.bpm < 600) {\r\n\t\t\t\t\tthis.setBpm(this.state.bpm + 10);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'down':\r\n\t\t\t\tif (this.state.bpm > 10) {\r\n\t\t\t\t\tthis.setBpm(this.state.bpm - 10);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\r\n\t\t\t<>\r\n\t\t\t\t<KeyboardEventHandler handleKeys={['s', 'space', 'esc', 'left', 'right', 'up', 'down']} onKeyEvent={(key, e) => this.handleKey(key, e)} />\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<SimplePanel title={Tr('Control')}>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t// color=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggle()}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor={this.state.isPlaying ? 'secondary' : 'light'}\r\n\t\t\t\t\t\t\t\t\t\t\t// outline\r\n\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{Tr(\"Start / Stop\")}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t\t<Row><Col><h2><span ref=\"bpmInfo\" className='badge badge-dark bpm-info'>BPM: {Tone.Transport.bpm.value.toFixed(0)}</span></h2></Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{Tr(\"Volume\")}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<AdvancedSlider\r\n\t\t\t\t\t\t\t\t\t\t\t\tref=\"volumeSlider\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t// included={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisableBtns={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\tbtnStep={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmax={100}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={90}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// marks={{ 30:k '30', 200: '200', 400: '400', 600: '600', 800: '800', 1000: '1000',  1200: '1200' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// value={this.state.constantBpmSlider}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(newVolume) => this.onVolumeChange(newVolume)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>{Tr(\"Reverb\")}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<AdvancedSlider\r\n\t\t\t\t\t\t\t\t\t\t\t\tref=\"reverbSlider\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t// included={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisableBtns={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\tbtnStep={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmax={100}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// marks={{ 30:k '30', 200: '200', 400: '400', 600: '600', 800: '800', 1000: '1000',  1200: '1200' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// value={this.state.constantBpmSlider}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(newVolume) => this.onReverbChange(newVolume)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t</SimplePanel>\r\n\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col style={{ margin: 'auto' }}>\r\n\t\t\t\t\t\t\t<SvgClock ref=\"svgClock\" soundLibrary={this.soundLibrary} timeSignature={this.state.timeSignature} track={this.state.track} />\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<ModePanel\r\n\t\t\t\t\t\t\tref=\"modePanel\"\r\n\t\t\t\t\t\t\ttransport={this.transport}\r\n\t\t\t\t\t\t\tonChange={() => this.onControlChange()}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<TrackView\r\n\t\t\t\t\t\t\t\tref='trackView'\r\n\t\t\t\t\t\t\t\tsoundLibrary={this.soundLibrary}\r\n\t\t\t\t\t\t\t\ttrack={this.state.track}\r\n\t\t\t\t\t\t\t\t// partProgress={this.state.partProgress}\r\n\t\t\t\t\t\t\t\tinstrument={this.state.instrument}\r\n\t\t\t\t\t\t\t\t// instrumentLib={this.instrumentLib}\r\n\t\t\t\t\t\t\t\ttimeSignature={this.state.timeSignature}\r\n\t\t\t\t\t\t\t\t// onInstrumentChanged={(trackIdx, instrument) => this.onInstrumendChanged(trackIdx, instrument)}\r\n\t\t\t\t\t\t\t\tonChange={(track, timeSignature) => this.onTrackChange(track, timeSignature)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Planner\r\n\t\t\t\t\t\t\t\ttransport={this.transport}\r\n\t\t\t\t\t\t\t\tonChange={() => this.onControlChange()}\r\n\t\t\t\t\t\t\t\tonPlanStep={(bpm) => this.onPlanStep(bpm)}\r\n\t\t\t\t\t\t\t\tonPlanEnd={() => this.stop()}\r\n\t\t\t\t\t\t\t\tref=\"planner\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<PresetsManager\r\n\t\t\t\t\t\t\t\tref=\"presetsManager\"\r\n\t\t\t\t\t\t\t\tgetPreset={() => this.getConfig()}\r\n\t\t\t\t\t\t\t\tonSelect={preset => this.onPresetSelect(preset)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t</Container >\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\r\n\t\tthis.transport.stop();\r\n\t\tthis.transport.position = 0;\r\n\t\tthis.setState({ isPlaying: false });\r\n\t}\r\n\r\n\tstart() {\r\n\t\tthis.transport.start(\"+.1\");\r\n\t\tthis.part.start();\r\n\t\tthis.setState({ isPlaying: true });\r\n\t}\r\n}\r\n\r\nexport default SoundMachine;\r\n\r\n\r\nSoundMachine.defaultProps = {\r\n\tinstrument: InitPreset.instrument,\r\n\ttrack: InitPreset.track,\r\n\ttimeSignature: InitPreset.timeSignature,\r\n\tonReady: function () { }\r\n};","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./components/SoundMachine\";\r\nimport SoundMachine from \"./components/SoundMachine\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Badge, Container, Row, Col } from \"reactstrap\";\r\nimport SimplePanel from \"./components/SimplePanel\";\r\nimport ReactGA from 'react-ga';\r\nimport Tr from './components/Locale'\r\n\r\nclass App extends Component {\r\n\r\n\tstate = {\r\n\t\tshowMask: true\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// google analytics\r\n\t\tReactGA.initialize({\r\n\t\t\ttrackingId: 'UA-151010848-1',\r\n\t\t\tdebug: true,\r\n\t\t\tgaOptions: {\r\n\t\t\t\tcookieDomain: 'none'\r\n\t\t\t}\r\n\t\t});\r\n\t\tReactGA.pageview(window.location.pathname + window.location.search);\r\n\t}\r\n\r\n\tremoveLoadMask() {\r\n\t\tthis.setState({ showMask: false })\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Container className=\"app-container \">\r\n\t\t\t\t{/* <Container className=\"app-container \"> */}\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<SoundMachine ref=\"sm\" onReady={() => this.removeLoadMask()} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<SimplePanel title={Tr(\"Keyboard controls\")} className=\"about\">\r\n\t\t\t\t\t\t\t\t<div><code>{Tr(\"arrow up/down\")}</code> - {Tr(\"higher/lower BPM\")}</div>\r\n\t\t\t\t\t\t\t\t<div><code>{Tr(\"arrow left/right\")}</code> - {Tr(\"previous/next step according to plan\")}</div>\r\n\t\t\t\t\t\t\t\t<div><code>space, s</code> - {Tr(\"start/stop\")}</div>\r\n\t\t\t\t\t\t\t\t<div><code>esc</code> - {Tr(\"stop\")}</div>\r\n\t\t\t\t\t\t\t</SimplePanel>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<div className=\"footer\">\r\n\t\t\t\t\t\t\t\t<div><h6>If you like this app consider donation to a developer using following <Badge href=\"https://paypal.me/indiebubblerdev\" target=\"blank\">link</Badge></h6></div>\r\n\t\t\t\t\t\t\t\t<div>Join discord using <Badge href=\"https://discord.gg/fAwnmVh\" target=\"blank\">this link</Badge> for feedback and improvement suggestions.</div>\r\n\t\t\t\t\t\t\t\t<div>By using this site you agree to the use of cookies to store user defined presets and analytics.</div>\r\n\t\t\t\t\t\t\t\t<div>Created using <Badge href=\"https://reactjs.org/\" target=\"blank\" >React</Badge> and <Badge href=\"https://tonejs.github.io/\" target=\"blank\">Tone.js</Badge>. Source code available <Badge href=\"https://github.com/indiebubbler/metro\">here</Badge>.</div>\r\n\t\t\t\t\t\t\t\t<div>If you want help translating this page please contact <Badge href=\"mailto:indiebubbler@gmail.com?subject=Feedback\">indiebubbler@gmail.com</Badge>.</div>\r\n\t\t\t\t\t\t\t\t<div>&#169; IndieBubbler 2019-2020. Version 2.0 beta</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<div ref=\"loadMask\" className={this.state.showMask === true ? 'loadmask ' : 'loadmask fadeOut'} />\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(   <App  />  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}