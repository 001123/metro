{"version":3,"sources":["components/AccentTypes.jsx","components/SoundMachineInstrument.jsx","components/InstrumentLib.jsx","components/PlayModes.jsx","components/Vis.jsx","components/SoundMachine.jsx","components/SimpleProgress.jsx","components/Utils.jsx","components/Planner.jsx","components/AdvancedSlider.jsx","components/Accent.jsx","components/BarManager.jsx","components/EditPresetModal.jsx","components/PresetsManager.jsx","components/SimplePanel.jsx","components/PlaybackModes.jsx","components/GeometricSlider.jsx","components/AdvancedRange.jsx","components/ModePanel.jsx","components/PresetsLib.jsx","App.jsx","serviceWorker.js","index.js"],"names":["accentTypes","ACCENT_1","ACCENT_2","ACCENT_3","accentTypesArr","SoundMachineInstrument","props","_this","Object","classCallCheck","this","console","log","key","o","C3","samples","C#3","D3","possibleConstructorReturn","getPrototypeOf","call","baseUrl","label","Sampler","instruments","TABLA","ELECTRO_KIT","InstrumentLib","defaultInstrument","state","lib","currentInstrument","undefined","fft","tabla","electro","setInstrument","Tone","FFT","fan","toMaster","Error","Component","playModes","BY_BAR","BY_TIME","STABLE","Vis","width","height","values","redraw","ctx","refs","canvas","getContext","clearRect","rect","max","Infinity","min","length","barWidth","lineWidth","lineCap","i","len","x","h","Math","strokeStyle","beginPath","moveTo","lineTo","stroke","_this2","window","addEventListener","updateDimensions","clientWidth","container","react_default","a","createElement","ref","SoundMachine","accentNotes","instrumentLib","currentBeat","beatsPerStep","progressRefreshRate","score","isPlaying","accents","executeStep","step","lastStep","currentStep","getBpm","bpm","setBpm","newLE","playMode","duration","Transport","setLoopPoints","lastLoopDuration","start","repeat","time","idx","note","getInstrument","triggerAttack","Draw","schedule","onBeat","isNaN","value","loopEnd","setBeatsPerStep","newBps","pop","push","timeSignature","loop","setState","handleStartStop","stop","instrument","onToggle","clearInterval","stepProgressUpdateTimer","setInterval","updateProgress","_this3","Synth","triggerAttackRelease","Buffer","on","onBufferError","onStop","onStart","onLoopEnd","context","latencyHint","Loop","onProgress","progress","vis","drawFFT","getValue","instrumentKey","_this4","Button","outline","color","onClick","block","active","defaultProps","SimpleProgress","Container","className","style","display","Utils","padTime","t","formatTime","timeInSeconds","Date","setSeconds","getMinutes","getSeconds","Planner","bars","stepProgress","isPaused","timer","startTime","stepsCounter","barRender","b","cls","setStep","segmentDuration","toFixed","end","s","segments","bpmRange","segment","interval","bpmStep","stableBpmSlider","uiStateObject","plan","makePlan","totalPlanTime","bar","timeEnd","startTimeFormatted","endTimeFormatted","prevState","stepChanged","pause","resetStep","stepIdx","getCurrentStep","onStep","date","Badge","currentBpm","components_SimpleProgress","lockBpm","opacity","map","AdvancedSlider","Fragment","get","prototype","Slider","Accent","isCurrent","type","BarManager","defaultValue","onAfterChange","selected","newBars","toConsumableArray","lastActiveAccent","toggleCurrent","el","components_Accent","handleCellClick","EditPresetModal","modal","preset","showDelete","toggle","bind","assertThisInitialized","title","onSave","e","newTitle","target","objectSpread","onDeleteBtn","size","onSaveBtn","Modal","isOpen","ModalHeader","ModalBody","Input","onChange","titleChanged","JSON","stringify","ModalFooter","handleSave","renderDelete","PresetsManager","showEdit","userPresets","cookies","Array","fill","onSelect","toLowerCase","saveInCookie","presets","set","path","indexOf","splice","stopPropagation","presetEditor","edit","parse","Row","item","Col","hidden","isHidden","onPresetClick","onMouseEnter","showEditBtn","onMouseLeave","hideEditBtn","class","visibility","onPresetEdit","components_EditPresetModal","onPresetDelete","onSavePreset","SimplePanel","children","playbackModes","STOP","CYCLE","REPEAT","CONTINUE","GeometricSlider","regression","d","exponential","precision","string","prepareMarks","marks","marksAt","findX","markFormatter","floor","marksStyle","v","predict","y","equation","onBadgeClick","badgeFormatter","es","included","marksNum","desc","AdvancedRange","bounds","Range","ModePanel","playbackMode","bpmStepDropdownOpen","byTimeInterval","byBarInterval","onBpmSliderChange","newMode","playBackMode","byBarSlider","byTimeSlider","setValue","barsNum","newPlaybackMode","ButtonDropdown","margin","onBpmStepChange","DropdownToggle","caret","DropdownMenu","DropdownItem","onBpmStepSelect","components_AdvancedRange","pushable","onBpmRangeChange","components_SimplePanel","ButtonGroup","onModeChange","Collapse","renderSpeedRange","components_GeometricSlider","byBarFormatter","onBarIntervalChange","byTimeFormatter","onTimeIntervalChange","renderIncreaseBpmDropdown","components_AdvancedSlider","30","100","200","300","400","500","600","onPlaybackChange","PresetsLib","InitPreset","App","instrumentDropdownOpen","instrumentDropdownLabel","cycleDropdownOpen","playbackDirection","onBeatsPerStepChange","getUiState","sm","barManager","getAccents","setAccents","newBpm","document","handleKeyDown","planner","setPlan","setVis","keyCode","preventDefault","stepBackward","stepForward","newInstrument","getCurrentInstrumentLabel","xs","onInstrumentChange","onInstrumentSelect","components_BarManager","onAccentsChange","renderPresetsPane","setProgress","components_SoundMachine","beat","components_ModePanel","onModePanelChanged","renderPlaybackPane","_this5","components_PresetsManager","uiState","onPresetSelect","modePanel","_this6","components_Planner","onPlanStep","components_Vis","isLastStep","isFirstStep","currentMode","setActive","renderLeftPane","renderMidPane","renderRightPane","s1","s2","withCookies","Boolean","location","hostname","match","ReactDOM","render","es6","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d89792d1.chunk.js","sourcesContent":["export const accentTypes = {\r\n\tACCENT_1: 0,\r\n\tACCENT_2: 1,\r\n\tACCENT_3: 2\r\n};\r\n\r\nexport const accentTypesArr = [\r\n\taccentTypes.ACCENT_1, accentTypes.ACCENT_2, accentTypes.ACCENT_3\r\n];","import {Sampler} from 'tone'\r\n\r\n\r\nclass SoundMachineInstrument extends Sampler {\r\n\r\n    constructor(props) {\r\n        console.log('<SoundMachineInstrument>constructor', props.key)\r\n        var o = {\r\n            \"C3\" : props.samples[0],\r\n            \"C#3\" : props.samples[1],\r\n            \"D3\" : props.samples[2],\r\n        };\r\n        super(o,{\r\n            baseUrl: props.baseUrl || './audio/' + props.key + '/'\r\n        });\r\n        this.key = props.key;\r\n        this.label = props.label;\r\n    }\r\n}\r\n\r\nexport default SoundMachineInstrument;\r\n\r\n ","import { Component } from \"react\";\r\nimport SoundMachineInstrument from \"./SoundMachineInstrument\"\r\nimport Tone from 'tone'\r\nexport const instruments = {\r\n\tTABLA: \"tabla\",\r\n\tELECTRO_KIT: \"electrokit\"\r\n\t// ACOUSTIC_KIT: \"acoustic_kit\"\r\n};\r\n\r\nclass InstrumentLib extends Component {\r\n\tstate = {};\r\n    lib = {};\r\n    currentInstrument = undefined\r\n    fft = undefined\r\n\r\n\r\n    constructor(defaultInstrument) {\r\n        super();\r\n    \r\n        //Tone.Buffer.on(\"load\", () => this.onBufferLoaded());\r\n\t\tvar tabla = new SoundMachineInstrument({\r\n            key: instruments.TABLA,\r\n            label: \"Tabla\",\r\n\t\t\tsamples: [\"dha-slide.wav\", \"dhin-slide.wav\", \"tin.wav\"]\r\n        });\r\n        \r\n        this.lib[ tabla.key ] = tabla;\r\n    \r\n        var electro = new SoundMachineInstrument({\r\n            key: instruments.ELECTRO_KIT,\r\n            label: 'Electronic Kit',\r\n\t\t\tsamples: [\"Kick.wav\", \"HiHat.wav\", \"Snare.wav\"]\r\n        });\r\n        \r\n        this.lib[ electro.key ] = electro;\r\n\r\n        this.setInstrument(defaultInstrument)\r\n        \r\n        console.log('<InstrumentLib>done constructor')\r\n\r\n\r\n        this.fft = new Tone.FFT(128);\r\n\t\t//get the waveform data for the audio\r\n\t\t// var waveform = new Tone.Waveform(1024);\r\n        \r\n        electro.fan(this.fft).toMaster();\r\n        tabla.fan(this.fft).toMaster();\r\n        // electro.fft = fft;\r\n        // electro.waveform = waveform;\r\n\r\n    }\r\n\r\n    setInstrument(key) {\r\n        if (this.lib[key] === undefined) {\r\n            throw new Error(\"InstrumentLib has no such instrument with given key: \" + key)\r\n        }\r\n        this.currentInstrument = key;\r\n    }\r\n \r\n    getInstrument() {\r\n        if (this.lib[this.currentInstrument] === undefined) {\r\n            throw new Error(\"There is no such instrument in InstrumentLib: \" + this.currentInstrument)\r\n        }\r\n        return this.lib[this.currentInstrument];\r\n    }\r\n\r\n\t// render() {\r\n\t// \treturn <div />;\r\n\t// }\r\n}\r\nexport default InstrumentLib;\r\n","export const playModes = {\r\n\tBY_BAR: \"by_bar\",\r\n\tBY_TIME: \"by_time\",\r\n\tSTABLE: \"stable\"\r\n};","import React, { Component } from 'react';\r\n\r\nclass Vis extends Component {\r\n    state = {}\r\n    ctx;\r\n    width = 300;\r\n    height = 200;\r\n    values = [];\r\n\r\n    drawFFT(values) {\r\n        this.values = values;\r\n        this.redraw();\r\n    }\r\n\r\n    redraw() {\r\n        this.ctx = this.refs.canvas.getContext(\"2d\");\r\n        \r\n        // this.ctx.clearRect(0, 0,this.width,this.height);\r\n        // console.log('<Vis>redraw', this.width, this.height)\r\n        this.ctx.clearRect(0,0,this.width, this.height)\r\n        this.ctx.rect(0, 0, this.width, this.height);\r\n        // this.ctx.stroke();\r\n        \r\n        var max = -Infinity;\r\n        var min = Infinity;\r\n\r\n        if (this.values.length > 0) {\r\n            \r\n            const barWidth = this.width / (this.values.length+2);\r\n\r\n            // this.values store decibels for each freq in range [-140,0]\r\n            this.ctx.lineWidth = barWidth;\r\n            this.ctx.lineCap = \"round\";\r\n            for (let i = 0, len = this.values.length; i < len ; i++) {\r\n                // debugger\r\n                var x = (barWidth + 5)* i + barWidth / 2 ;\r\n                \r\n                var h = ((this.values[i] + 140) / 140) * this.height;\r\n\r\n\r\n                max = Math.max(max, this.values[i])\r\n                min = Math.min(min, this.values[i])\r\n                // this.ctx.fillStyle = \"rgba(255, 85, 85, \"+ (1 - i/(len+10)) + \")\";\r\n                // this.ctx.fillRect(x, this.height, barWidth, -h);\r\n                this.ctx.strokeStyle = \"rgba(255, 85, 85, \"+ (1 - i/(len+10)) + \")\";\r\n                this.ctx.beginPath();\r\n                this.ctx.moveTo(x, this.height );\r\n                this.ctx.lineTo(x, this.height - h);\r\n                // this.ctx.lineTo(70, 100);\r\n                \r\n                this.ctx.stroke();\r\n                \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // drawBar(val) {\r\n    //     // if (val > 0) {\r\n    //         console.log('val',val)\r\n    //     // }\r\n    //     // this.ctx.clearRect(0, 0, this.width, this., canvasHeight);\r\n    //     var barWidth = this.width / val.size;\r\n    //     debugger\r\n    //     for (var i = 0, len = values.length; i < len; i++){\r\n    //         var x = canvasWidth * (i / len);\r\n    //         var y = (values[i] + 140) * 2;\r\n    //         fftContext.fillStyle = \"rgba(0, 0, 0, \" + i/len + \")\";\r\n    //         fftContext.fillRect(x, canvasHeight - y, barWidth, canvasHeight);\r\n    //     }\r\n    // }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", () => this.updateDimensions());\r\n        this.updateDimensions()\r\n        this.redraw();\r\n    }\r\n\r\n    updateDimensions() {\r\n        let { clientWidth } = this.refs.container;\r\n        \r\n        this.refs.canvas.width = clientWidth;\r\n        // this.refs.canvas.height = clientHeight\r\n\r\n        this.width = clientWidth;\r\n        // this.height = clientHeight;\r\n \r\n        this.redraw();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div ref=\"container\">\r\n                    <canvas ref='canvas' height=\"200\"/>\r\n                </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Vis;","import React, { Component } from \"react\";\r\nimport Tone from \"tone\";\r\nimport { accentTypes } from \"./AccentTypes\";\r\nimport InstrumentLib from \"./InstrumentLib\";\r\nimport { Button } from 'reactstrap'\r\nimport { playModes } from \"./PlayModes\";\r\nimport Vis from \"./Vis\"\r\nclass SoundMachine extends Component {\r\n\r\n\taccentNotes = [\"C3\", \"C#3\", \"D3\"]; // this stay in sync with AccentTypes\r\n\r\n\tinstrumentLib = undefined;\r\n\r\n\tcurrentBeat = 0;\r\n\tbeatsPerStep = 4;\r\n\r\n\tprogressRefreshRate = 1000 / 60; // fps\r\n\r\n\tscore = [\"C3\", \"C#3\", \"C#3\", \"C#3\"];\r\n\r\n\tstate = {\r\n\t\tisPlaying: false\r\n\t};\r\n\r\n\taccents = [accentTypes.ACCENT_1]; // default with accent on first beat\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t// init instruments library\r\n\t\tthis.instrumentLib = new InstrumentLib(this.props.instrument)\r\n\t}\r\n\r\n\tonBufferError() {\r\n\t\tthrow new Error(\"Some buffers weren't found\")\r\n\t}\r\n\r\n\tonStop() {\r\n\t\tconsole.log('onStop')\r\n\t\tthis.props.onToggle(this.state.isPlaying)\r\n\r\n\t\tclearInterval(this.stepProgressUpdateTimer);\r\n\t}\r\n\r\n\tonStart() {\r\n\t\tthis.props.onToggle(this.state.isPlaying)\r\n\r\n\t\tthis.stepProgressUpdateTimer = setInterval(\r\n\t\t\t() => this.updateProgress(),\r\n\t\t\tthis.progressRefreshRate\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// reload/debug bell\r\n\t\tvar synth = new Tone.Synth().toMaster();\r\n\t\tsynth.triggerAttackRelease(\"A2\");\r\n\r\n\t\tTone.Buffer.on(\"error\", () => this.onBufferError());\r\n\r\n\t\tTone.Transport.on('stop', () => this.onStop());\r\n\t\tTone.Transport.on('start', () => this.onStart());\r\n\t\tTone.Transport.on('pause', () => console.log('TRANSPORT.pause'));\r\n\t\t// Tone.Transport.on('start', () => console.log('TRANSPORT.start'));\r\n\t\tTone.Transport.on('loop', (time) => this.props.onLoopEnd(time));\r\n\r\n\t\tTone.context.latencyHint = \"playback\";\r\n\r\n\t\tTone.Transport.timeSignature = 4;// [this.beatsPerStep, 4];\r\n\r\n\t\tTone.Transport.loop = true;\r\n\t\tTone.Transport.loopEnd = \"1m\"\r\n\r\n\t\tthis.loop = new Tone.Loop((time) => this.repeat(time), \"4n\");\r\n\t\tthis.loop.start()\r\n\t\tconsole.log('Transport loopEnd set to', Tone.Transport.loopEnd)\r\n\r\n\t\t//Tone.Transport.scheduleRepeat((time) => this.repeat(time), \"4n\");\r\n\r\n\r\n\t}\r\n\r\n\tupdateProgress() {\r\n\t\tthis.props.onProgress(Tone.Transport.progress);\r\n\r\n\t\tif (this.vis) {\r\n\t\t\tthis.vis.drawFFT(this.instrumentLib.fft.getValue())\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetStep(step) {\r\n\t\tconsole.log(\"<SM>store step:\", step)\r\n\r\n\t\tif (step === this.currentStep) {\r\n\t\t\tconsole.log('step didnt changed so continue only')\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.currentStep = step;\r\n\r\n\t\tif (this.state.isPlaying === true) {\r\n\t\t\tconsole.log(\"<SM>execute step:\", step)\r\n\t\t\tthis.executeStep(step)\r\n\t\t}\r\n\t\treturn this.currentStep.bpm\r\n\t}\r\n\r\n\texecuteStep = (step) => {\r\n\t\tconsole.log('executeStep ', step)\r\n\t\tif (this.lastStep !== step) {\r\n\t\t\tthis.lastStep = step;\r\n\t\t\tthis.currentStep = step;\r\n\r\n\t\t\tif (this.getBpm() !== step.bpm) {\r\n\t\t\t\tthis.setBpm(step.bpm)\r\n\t\t\t}\r\n\t\t\tvar t = Tone;\r\n\r\n\t\t\t// const d = new Tone.Time(this.currentStep.duration, this.currentStep.playMode === playModes.BY_TIME ? 's' : 'm');\r\n\t\t\t// console.log('calc time', d.toTicks(), Tone.Transport.loopEnd)\r\n\r\n\t\t\t// if (Tone.Transport.lastLoopDuration !== this.currentStep.duration) {\r\n\t\t\t\tconst newLE =  this.currentStep.playMode === playModes.BY_TIME ?  step.duration : step.duration + 'm';\r\n\t\t\t\t// console.log('new Loop End', newLE)\r\n\t\t\t\tTone.Transport.setLoopPoints(0,  newLE);\r\n\t\t\t\tTone.Transport.lastLoopDuration = this.currentStep.duration;\r\n\t\t\t\t// Tone.Transport.loopEnd = \"1m\";//this.currentStep.playMode === playModes.BY_TIME ?  step.duration : step.duration + 'm'\r\n\t\t\t\t// console.log('Tone.Transport.loopEnd changed from', oldLE, 'to', Tone.Transport.loopEnd);\r\n\t\t\t// }\r\n\r\n\t\t}\r\n\r\n\r\n\t\tif (Tone.Transport.state === 'stopped') {\r\n\t\t\tconsole.log('starting transport')\r\n\t\t\tTone.Transport.start(\"+0.01\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trepeat = (time) => {\r\n\t\tconst idx = this.currentBeat++ % this.beatsPerStep;\r\n\r\n\t\tconst note = this.score[idx];\r\n\r\n\t\t// make sound\r\n\t\tthis.instrumentLib.getInstrument().triggerAttack(note, time);\r\n\r\n\r\n\r\n\r\n\t\t// draw stuff\r\n\t\tTone.Draw.schedule(() => this.onBeat(idx), time)\r\n\t}\r\n\r\n\tsetInstrument(instrumentKey) {\r\n\t\tthis.instrumentLib.setInstrument(instrumentKey);\r\n\t}\r\n\r\n\tgetCurrentInstrumentLabel() {\r\n\t\treturn this.instrumentLib.getInstrument().label;\r\n\t}\r\n\r\n\tsetBpm = bpm => {\r\n\r\n\t\tif (isNaN(bpm) || bpm <= 0 || bpm > 1000) {\r\n\t\t\tdebugger\r\n\t\t\tthrow new Error(\"Invalid BPM value: \" + bpm)\r\n\t\t}\r\n\r\n\t\tif (bpm != Tone.Transport.bpm.value) {\r\n\t\t\tTone.Transport.bpm.value = bpm;\r\n\t\t\tTone.Transport.loopEnd = \"1m\"\r\n\t\t\tconsole.log('bpm changed to', bpm)\r\n\t\t}\r\n\t};\r\n\r\n\tsetBeatsPerStep = newBps => {\r\n\t\tconsole.log(\"<SoundMachine>setBeatsPerStep\", newBps)\r\n\r\n\r\n\t\tthis.beatsPerStep = newBps;\r\n\r\n\t\t// remove if needed\r\n\t\twhile (this.score.length > newBps) {\r\n\t\t\tthis.score.pop();\r\n\t\t}\r\n\r\n\t\t// add if needed\r\n\t\twhile (this.score.length < newBps) {\r\n\t\t\tthis.score.push(accentTypes.ACCENT_1)\r\n\t\t}\r\n\r\n\t\tTone.Transport.timeSignature = newBps;//[newBps, 4];\r\n\t\tTone.Transport.loop = true;\r\n\r\n\t\t// this will refresh visualisation\r\n\t\tthis.setState({ beatsPerStep: newBps })\r\n\t};\r\n\r\n\tonBeat = (currentBeat) => {\r\n\t\tthis.props.onBeat(currentBeat);\r\n\r\n\t\t// this.fft.connect(Tone.Master);\r\n\r\n\t\t// console.log('beat', this.fft.getValue())\r\n\t}\r\n\r\n\tsetAccents(accentTypesArr) {\r\n\t\tthis.accents = accentTypesArr;\r\n\r\n\t\tfor (let i = 0; i < this.score.length; i++) {\r\n\t\t\t// by default 2 will be the tick note\r\n\t\t\tlet note = this.accentNotes[accentTypes.ACCENT_2];\r\n\r\n\t\t\t// if accent for this step is specified set it here\r\n\t\t\tif (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_1\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_1];\r\n\t\t\t} else if (\r\n\t\t\t\taccentTypesArr[i] !== undefined &&\r\n\t\t\t\taccentTypesArr[i] === accentTypes.ACCENT_3\r\n\t\t\t) {\r\n\t\t\t\tnote = this.accentNotes[accentTypes.ACCENT_3];\r\n\t\t\t}\r\n\t\t\tthis.score[i] = note;\r\n\t\t}\r\n\t}\r\n\r\n\thandleStartStop = () => {\r\n\t\tconsole.log(\"<SM>HandleStartStop, state:\", Tone.Transport.state)\r\n\r\n\t\tif (Tone.Transport.state === 'started') {\r\n\t\t\tthis.stop();\r\n\r\n\t\t} else {\r\n\t\t\tthis.start(this.currentStep);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\r\n\t\t\t<Button\r\n\t\t\t\toutline\r\n\t\t\t\tcolor=\"light\"\r\n\t\t\t\tonClick={() => this.handleStartStop()}\r\n\t\t\t\tblock\r\n\t\t\t\tactive={this.state.isPlaying}\r\n\t\t\t>\r\n\t\t\t\tStart / Stop\r\n\t\t\t</Button>\r\n\r\n\t\t\t// <div style={{width: '100%'}}>\r\n\t\t\t// \t{/* <div>Sound is {this.state.isPlaying === true ? \"playing\" : \"stopped\"}</div> */}\r\n\t\t\t// \t{/* <SimpleVis ref=\"vis\" beats={this.state.beatsPerStep}/> */}\r\n\t\t\t// </div>\r\n\t\t);\r\n\t}\r\n\r\n\tsetVis(vis) {\r\n\t\tthis.vis = vis;\r\n\t}\r\n\tstop() {\r\n\t\tconsole.log('<SM>stop')\r\n\t\tthis.setState({ isPlaying: false });\r\n\t\tthis.currentBeat = 0;\r\n\t\tTone.Transport.stop();\r\n\t}\r\n\r\n\tstart(step) {\r\n\t\tconsole.log('<SM>Start')\r\n\t\tthis.setState({ isPlaying: true }, this.executeStep(step));\r\n\r\n\t}\r\n\r\n\tgetBpm = () => {\r\n\t\treturn Tone.Transport.bpm.value;\r\n\t};\r\n}\r\n\r\nexport default SoundMachine;\r\n\r\n\r\nSoundMachine.defaultProps = {\r\n\tbeatsPerStep: 4,\r\n\tonLoopEnd: function (time) { },\r\n\tonToggle: function (state) { },\r\n\tonProgress: function (progress) { }\r\n};","import React, { Component } from 'react';\r\nimport {Container} from 'reactstrap';\r\n\r\nclass SimpleProgress extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( <Container className=\"SimpleProgress\">\r\n            <div className=\"bar\" style={{width: this.props.value  + \"%\", display: 'block'}} />\r\n        </Container> );\r\n    }\r\n}\r\n \r\nexport default SimpleProgress;","const Utils = {\r\n    padTime: function(t) {\r\n\t\treturn t < 10 ? \"0\" + t : t;\r\n\t},\r\n\tformatTime: function(timeInSeconds) {\r\n\t\t//{this.leadingZeroCheck(now.getMinutes())}:{now.getSeconds()} --\r\n\t\tlet t = new Date(0, 0, 0, 0, 0, 0, 0);\r\n\t\tt.setSeconds(timeInSeconds);\r\n\t\tlet m = t.getMinutes();\r\n\t\tlet o = \"\";\r\n\t\tif (m !== 0) {\r\n\t\t\to += t.getMinutes(); //this.padTime(t.getMinutes());\r\n            o += \":\";\r\n            o += \"\" + Utils.padTime(t.getSeconds());\r\n        }\r\n        else {\r\n            o += t.getSeconds();\r\n        }\r\n\t\treturn o;\r\n    }\r\n}\r\n\r\nexport default Utils;","import React, { Component } from \"react\";\r\nimport { Badge } from \"reactstrap\";\r\nimport { playModes } from \"./PlayModes\";\r\nimport SimpleProgress from \"./SimpleProgress\";\r\nimport Utils from \"./Utils\";\r\n\r\nclass Planner extends Component {\r\n\tstate = {\r\n\t\tbars: [],\r\n\t\tstepProgress: 0,\r\n\t\tisPaused: false\r\n\t};\r\n\r\n\ttimer = {\r\n\t\tref: null,\r\n\t\tstartTime: null\r\n\t};\r\n\tstepsCounter = 0;\r\n\t// stepProgressUpdateInterval = 1000 / 30; // 30 fps\r\n\r\n\tmakePlan(s) {\r\n\t\tlet segments = [];\r\n\r\n\t\tif (s.playMode === playModes.BY_BAR) {\r\n\t\t\tconst min = s.bpmRange[0];\r\n\t\t\tconst max = s.bpmRange[1];\r\n\t\t\tlet bpm = min;\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tlet segment = {\r\n\t\t\t\t\tbpm: bpm,\r\n\t\t\t\t\tduration: s.interval,\r\n\t\t\t\t\tend: s.interval \t// TODO <--- remove this \r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (s.playMode === playModes.BY_TIME) {\r\n\t\t\tconst min = s.bpmRange[0];\r\n\t\t\tconst max = s.bpmRange[1];\r\n\t\t\tlet bpm = min;\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tlet segment = {\r\n\t\t\t\t\ttime: i * s.interval,\r\n\t\t\t\t\tstart: i * s.interval,\r\n\t\t\t\t\tend: i * s.interval + s.interval,\r\n\t\t\t\t\tduration: s.interval,\r\n\t\t\t\t\tbpm: bpm\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t} else if (s.playMode === playModes.STABLE) {\r\n\t\t\tlet segment = {\r\n\t\t\t\ttime: Infinity, // TODO <--remove\r\n\t\t\t\tduration: Infinity,\r\n\t\t\t\tbpm: s.stableBpmSlider\r\n\t\t\t};\r\n\t\t\tsegments.push(segment);\r\n\t\t}\r\n\t\treturn segments;\r\n\t}\r\n\r\n\t// TODO: this is ugly\r\n\tsetPlan(uiStateObject) {\r\n\t\t// debugger\r\n\t\tconst plan = this.makePlan(uiStateObject);\r\n\r\n\t\t// console.log(\"<Planner>setPlan\", plan);\r\n\t\tvar bars = [];\r\n\r\n\t\tlet totalPlanTime = 0;\r\n\t\tconst playMode = uiStateObject.playMode;\r\n\t\tlet i = 0;\r\n\r\n\t\tswitch (uiStateObject.playMode) {\r\n\t\t\tcase playModes.BY_BAR:\r\n\t\t\t\tfor (i = 0; i < plan.length; i++) {\r\n\t\t\t\t\tconst bar = {\r\n\t\t\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\t\t\tduration: plan[i].end,\r\n\t\t\t\t\t\tend: plan[i].end,\r\n\t\t\t\t\t\tstep: this.stepsCounter++,\r\n\t\t\t\t\t\tplayMode: playModes.BY_BAR\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\ttotalPlanTime +=\r\n\t\t\t\t\t\t(60 / plan[i].bpm) *\r\n\t\t\t\t\t\tuiStateObject.beatsPerStep *\r\n\t\t\t\t\t\tplan[i].end;\r\n\t\t\t\t\tbars.push(bar);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase playModes.BY_TIME:\r\n\t\t\t\tfor (i = 0; i < plan.length; i++) {\r\n\t\t\t\t\tconst bar = {\r\n\t\t\t\t\t\ttime: plan[i].time,\r\n\t\t\t\t\t\tduration: plan[i].end - plan[i].time,\t// TODO: remove other unnecesary parameters\r\n\t\t\t\t\t\ttimeEnd: plan[i].end,\r\n\t\t\t\t\t\tsegmentDuration: plan[i].end - plan[i].time,\r\n\t\t\t\t\t\tstartTimeFormatted: Utils.formatTime(plan[i].start),\r\n\t\t\t\t\t\tendTimeFormatted: Utils.formatTime(plan[i].end),\r\n\t\t\t\t\t\tbpm: plan[i].bpm,\r\n\t\t\t\t\t\tplayMode: playModes.BY_TIME,\r\n\t\t\t\t\t\tstep: this.stepsCounter++\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\ttotalPlanTime += plan[i].end;\r\n\r\n\t\t\t\t\tbars.push(bar);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase playModes.STABLE:\r\n\t\t\t\ttotalPlanTime = Infinity;\r\n\t\t\t\tbars.push({\r\n\t\t\t\t\tbpm: plan[0].bpm,\r\n\t\t\t\t\tduration: Infinity,\r\n\t\t\t\t\tplayMode: playModes.STABLE,\r\n\t\t\t\t\ttime: Infinity,\r\n\t\t\t\t\tstep: 0\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(\"plan set to play at {0} bpm\", plan[0].bpm);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// update to new state\r\n\t\tthis.stepsCounter = 0;\r\n\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({\r\n\t\t\t\ttotalPlanTime: totalPlanTime,\r\n\t\t\t\tcurrentStep: 0,\r\n\t\t\t\tbars: bars,\r\n\t\t\t\tplayMode: playMode\r\n\t\t\t}),\r\n\t\t\t() => this.stepChanged()\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\t\t// console.log(\"lockBpm\", this.props.lockBpm);\r\n\t\tthis.pause();\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tsetStep(stepIdx) {\r\n\t\tconsole.log('this.state.currentStep !== stepIdx',this.state.currentStep , stepIdx)\r\n\r\n\t\tif (this.state.currentStep !== stepIdx) {\r\n\t\t\tthis.setState({currentStep: stepIdx}, this.stepChanged)\r\n\t\t}\r\n\t}\r\n\r\n\tisLastStep() {\r\n\t\treturn this.state.currentStep === this.state.bars.length -1;\r\n\t}\r\n\t\r\n\tisFirstStep() {\r\n\t\treturn this.state.currentStep === 0;\r\n\t}\r\n\r\n\r\n\tstepForward() {\r\n\t\tconsole.log(\"<Planner>stepForward()\")\r\n\t\t// check if we're not at the end of plan\r\n\t\tif (this.state.currentStep + 1 < this.state.bars.length) {\r\n\t\t\tthis.setStep(this.state.currentStep + 1)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log('no more steps')\r\n\t\t}\r\n\t}\r\n\r\n\tstepBackward() {\r\n\t\tconsole.log(\"<Planner>stepBackward()\")\r\n\r\n\r\n\t\tif (this.state.currentStep - 1 >= 0) {\r\n\t\t\tthis.setStep(this.state.currentStep - 1)\r\n\t\t}\r\n\t}\r\n\r\n\t// onInterval() {\r\n\t// \tthis.stepForward();\r\n\t// \t// if (this.timer) {\r\n\t// \t// \t// set time when we changed step to be able to render progress easily\r\n\t// \t// \tthis.timer.startTime = new Date();\r\n\t// \t// }\r\n\t// }\r\n\r\n\tstart() {\r\n\t\t\r\n\t}\r\n\r\n\tsetProgress(progress) {\r\n\t\tthis.setState({stepProgress: progress});\r\n\t}\r\n\t\r\n\t\r\n\t// planChanged = () => {\r\n\t// \tconsole.log(\"<Planner>planChanged\");\r\n\t// \tthis.stepChanged();\r\n\t// };\r\n\r\n\tstepChanged() {\r\n\t\tconsole.log(\"<Planner>stepChanged\")\r\n\t\tconst step = this.getCurrentStep();\r\n\t\tthis.props.onStep(step);\r\n\t}\r\n\r\n\tresetStep() {\r\n\t\tconsole.log('<Planner> resetStep()')\r\n\t\tthis.setStep(0)\r\n\t}\r\n\r\n\tgetCurrentStep() {\r\n\t\tif (this.state.currentStep >= this.state.bars.length) {\r\n\t\t\tthrow new Error(\"Trying to get step that doesn't exists\");\r\n\t\t}\r\n\t\treturn this.state.bars[this.state.currentStep];\r\n\t}\r\n\r\n\t// onStepClick(idx) {\r\n\t// \tthis.setStep(idx)\r\n\t// }\r\n\r\n\tbarRender = b => {\r\n\t\tconst cls = this.state.currentStep === b.step ? \"current-step\" : \"\";\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => this.setStep(b.step)}\r\n\t\t\t\tclassName={\"step \" + cls}\r\n\t\t\t\tkey={\"key_\" + b.bpm}\r\n\t\t\t>\r\n\t\t\t\t{b.segmentDuration !== undefined\r\n\t\t\t\t\t? Utils.formatTime(b.segmentDuration.toFixed(0)) + \" \"\r\n\t\t\t\t\t: b.end + \" bars \"}\r\n\t\t\t\tat {b.bpm.toFixed(0)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tformatTime(date) {\r\n\t\treturn date.getMinutes() + \":\" + date.getSeconds();\r\n\t}\r\n \r\n\trender() {\r\n\t\tif (this.state.bars.length === 0) {\r\n\t\t\treturn <div>No plan</div>;\r\n\t\t}\r\n\t\telse if (this.state.bars[0].time === Infinity) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{/* Playing at constant speed {this.state.bars[0].bpm} bpm */}\r\n\t\t\t\t\t<h2><Badge color=\"dark\">BPM: {this.props.currentBpm}</Badge></h2>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Planner\">\r\n\t\t\t\t<h2><Badge color=\"dark\">BPM: {this.props.currentBpm}</Badge></h2>\r\n\t\t\t\t{/* <div>Next step in {this.state.stepProgress.toFixed(1)} seconds</div> */}\r\n\t\t\t\t<SimpleProgress value={this.state.stepProgress * 100} />\r\n\r\n\t\t\t\t{/* <Button onClick={() => this.togglePause()}>\r\n\t\t\t\t\tisPaused:\r\n\t\t\t\t\t{this.state.isPaused === true ? \"paused\" : \"normal\"}\r\n\t\t\t\t</Button> */}\r\n\r\n\t\t\t\t<div style={this.props.lockBpm ? { opacity: 0.5 } : {}}>\r\n\t\t\t\t\t{this.state.bars.map(bar => this.barRender(bar))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tTotal time: {Utils.formatTime(this.state.totalPlanTime)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Planner;\r\n\r\nPlanner.defaultProps = {\r\n\tplayMode: playModes.BY_BAR,\r\n\tcurrentStep: 0,\r\n\tonStep: function(step) {}\r\n};\r\n","import React from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { Badge  } from \"reactstrap\";\r\n// import {Container, Row, Col} from 'reactstrap'\r\n\r\nclass AdvancedSlider extends Slider {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t// onClick={this.onBadgeClick}\r\n\t\t\t\t\t\tclassName=\"d-i\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.value}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ height: \"30px\" }}>\r\n\t\t\t\t\t<div>{super.render()}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonBadgeClick() {\r\n\t\t// TODO attach editorInPlace\r\n\t}\r\n}\r\n\r\nexport default AdvancedSlider;\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nclass Accent extends Component {\r\n\tstate = {\r\n\t\tisCurrent: false\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={\"Accent \" + (this.state.isCurrent === true ? \"active\" : \"\")}  onClick={this.props.onClick}>\r\n\t\t\t\t<div className={\"type\" + this.props.type}></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\ttoggleCurrent() {\r\n\t\tthis.setState({isCurrent: !this.state.isCurrent})\r\n\t}\r\n}\r\n\r\nexport default Accent;\r\n","import React, { Component } from \"react\";\r\nimport { accentTypesArr } from \"./AccentTypes\";\r\nimport Accent from \"./Accent\";\r\n\r\nclass BarManager extends Component {\r\n\tstate = {\r\n\t\tbars: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state.bars = props.defaultValue;\r\n\t}\r\n\r\n\tsetAccents(accents, beatsPerStep) {\r\n\t\tthis.setState({ bars: accents }, this.props.onAfterChange);\r\n\t}\r\n\r\n\thandleCellClick(selected) {\r\n\t\tlet newBars = [...this.state.bars];\r\n\t\t\r\n\t\tconst type = newBars[selected];\r\n\t\t// set new type\r\n\t\tnewBars[selected] = accentTypesArr[(type + 1) % 3];;\r\n\t\t\r\n\t\tthis.setState({bars: newBars}, this.props.onAfterChange)\r\n\t}\r\n\r\n\tgetAccents() {\r\n\t\treturn this.state.bars;\r\n\t}\r\n\r\n\tsetActive(idx) {\r\n\t\t// unselect previous element\r\n\t\tif (this.lastActiveAccent) {\r\n\t\t\tthis.lastActiveAccent.toggleCurrent();\r\n\t\t\tthis.lastActiveAccent = undefined\r\n\t\t}\r\n\t\t// select new \r\n\t\tconst el = this.refs[\"accent\" + idx];\r\n\r\n\t\t// make sure it exits though\r\n\t\tif (el) {\r\n\t\t\tel.toggleCurrent();\r\n\t\t\tthis.lastActiveAccent = el;\r\n\t\t}\r\n\t}\r\n \r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{this.state.bars.map((bar, idx) => (\r\n\t\t\t\t\t<Accent ref={\"accent\" + idx}\r\n\t\t\t\t\t\ttype={bar}\r\n\t\t\t\t\t\tonClick={() => this.handleCellClick(idx)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BarManager;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n\tInput,\r\n\tButton,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tModalFooter\r\n} from \"reactstrap\";\r\n\r\nclass EditPresetModal extends Component {\r\n\tstate = {\r\n\t\tmodal: false,\r\n\t\tpreset: null,\r\n\t\tshowDelete: false\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmodal: false\r\n\t\t};\r\n\t\tthis.toggle = this.toggle.bind(this);\r\n\t}\r\n\r\n\ttoggle() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tmodal: !prevState.modal\r\n\t\t}));\r\n\t}\r\n\r\n\thandleSave() {\r\n\t\tconst preset = this.state.preset;\r\n\t\tconst title = this.state.preset.title;\r\n\t\tif (title && title.length > 0) {\r\n\t\t\tthis.props.onSave(title, preset);\r\n\t\t\tthis.toggle();\r\n\t\t}\r\n\t}\r\n\r\n\tedit(preset, showDelete) {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tpreset: preset,\r\n\t\t\t\tshowDelete: showDelete\r\n\t\t\t},\r\n\t\t\tthis.toggle\r\n\t\t);\r\n\t}\r\n\r\n\ttitleChanged(e) {\r\n\t\tconst newTitle = e.target.value;\r\n\t\tlet preset = { ...this.state.preset };\r\n\t\tpreset.title = newTitle;\r\n\t\tthis.setState({ preset });\r\n\t\t// this.setState()\r\n\t\t// this.setState({title: e.target.value}\r\n\t}\r\n\r\n\tonDeleteBtn() {\r\n\t\tthis.props.onDeleteBtn(this.state.preset);\r\n\t\tthis.toggle();\r\n\t}\r\n\r\n\trenderDelete() {\r\n\t\t \r\n\t\tif (this.state.showDelete === true) {\r\n\t\t\treturn(<Button color=\"warning\" onClick={() => this.onDeleteBtn()}>\r\n\t\t\t\tDelete\r\n\t\t\t\t</Button>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button\r\n\t\t\t\t\toutline\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\tonClick={this.props.onSaveBtn}\r\n\t\t\t\t>\r\n\t\t\t\t\tSave Preset\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tisOpen={this.state.modal}\r\n\t\t\t\t\ttoggle={this.toggle}\r\n\t\t\t\t\tclassName={this.props.className}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggle}>Save Preset</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tonChange={e => this.titleChanged(e)}\r\n\t\t\t\t\t\t\tdefaultValue={\r\n\t\t\t\t\t\t\t\t(this.state.preset &&\r\n\t\t\t\t\t\t\t\t\tthis.state.preset.title) ||\r\n\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"code\">\r\n\t\t\t\t\t\t\t{JSON.stringify(this.state.preset)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => this.handleSave()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggle}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{this.renderDelete()}\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditPresetModal;\r\n\r\n\r\nEditPresetModal.defaultProps = {\r\n\tonDeleteBtn: function(preset) {},\r\n\tonSave: function(title, preset) {},\r\n\tonSaveBtn: function(e, idx) {}\r\n };\r\n","import React, { Component } from \"react\";\r\nimport {Container, Row, Col } from \"reactstrap\";\r\nimport EditPresetModal from \"./EditPresetModal\"\r\n\r\nclass PresetsManager extends Component {\r\n\tstate = {\r\n\t\tshowDelete: [],\r\n\t\tshowEdit: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.userPresets = this.props.cookies.get('userPresets');\r\n\t\t\r\n\t\tthis.state.showDelete = this.userPresets ? Array(this.userPresets.length).fill(false) : []\r\n\t\tthis.state.showEdit = this.userPresets ? Array(this.userPresets.length).fill(false) : []\r\n\t}\r\n\t\r\n\tonPresetClick(preset) {\r\n\t\tthis.props.onSelect(preset);\r\n\t}\r\n\r\n\tonSavePreset(title, o) {\r\n\t\tconst preset = {title: title, ...o}\r\n\t\t\r\n\t\tlet userPresets = this.props.cookies.get('userPresets');\r\n\r\n\t\tif (!userPresets) {\r\n\t\t\tuserPresets = [];\r\n\t\t}\r\n\t\t\r\n\t\t// overwrite by title \r\n\t\tlet idx = -1;\r\n\r\n\t\tfor (let i = 0 ; i < userPresets.length; i++) {\r\n\t\t\tif (userPresets[i].title.toLowerCase() === title.toLowerCase()) {\r\n\t\t\t\tidx = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (idx < 0) {\r\n\t\t\tuserPresets.push(preset)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tuserPresets[idx] = preset;\r\n\t\t}\r\n\r\n\t\tthis.saveInCookie(userPresets);\r\n\t}\r\n\r\n\tsaveInCookie(presets) {\r\n\t\tthis.props.cookies.set('userPresets', JSON.stringify(presets),{ path: '/' });\r\n\t\tthis.userPresets = presets;\r\n\t}\r\n\r\n\tshowDeleteBtn(e, idx) {\r\n\t\tlet showDelete = {...this.state};\r\n\t\tshowDelete[idx] = true;\r\n\t\tthis.setState({showDelete});\r\n\t}\r\n\r\n\tshowEditBtn(e, idx) {\r\n\t\tlet showEdit = {...this.state};\r\n\t\tshowEdit[idx] = true;\r\n\t\tthis.setState({showEdit});\r\n\t}\r\n\thideEditBtn(e) {\r\n\t\tthis.setState({showEdit: false})\r\n\t}\r\n\r\n\tonPresetDelete(preset) {\r\n\t\tlet idx = this.userPresets.indexOf(preset) \r\n\t\tif (idx < 0) {\r\n\t\t\tthrow new Error(\"Selected preset \" +  preset.title + \" has not been found in the store\" )\r\n\t\t}\r\n\t\tthis.userPresets.splice(idx,1);\r\n\t\tthis.saveInCookie(this.userPresets);\r\n\t}\r\n\r\n\tonPresetEdit(e, idx) {\r\n\t\tconsole.log('preset EDIT',e,idx);\r\n\t\t/// prevent from triggerring onClick \r\n\t\te.stopPropagation()\r\n\t\tif (idx !== undefined) {\r\n\t\t\tthis.refs.presetEditor.edit(this.userPresets[idx], true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// new preset\r\n\t\t\tthis.refs.presetEditor.edit(this.props.preset)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst userPresets = this.props.cookies.cookies.userPresets ?  JSON.parse(  this.props.cookies.cookies.userPresets ) : [];\r\n\t\t// console.log('<PresetsManager>userPresets', userPresets)\r\n\t\treturn (\r\n\t\t\t<Container className=\"PresetsManager\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{this.props.presets.map((item, idx) => (\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Col className=\"preset\" hidden={item.isHidden}\r\n\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\tmy presets:\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{userPresets.map((item, idx) => (\r\n\t\t\t\t\t\t<Col className=\"preset\"\r\n\t\t\t\t\t\t\tonMouseEnter={(e) => this.showEditBtn(e, idx)}\r\n\t\t\t\t\t\t\tonMouseLeave={(e) => this.hideEditBtn(e, idx)}\r\n\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t\t<div class='x' style={{visibility: this.state.showEdit[idx] ? '' : 'hidden'}} onClick={(e) => this.onPresetEdit(e,idx)}>Edit</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<EditPresetModal ref='presetEditor' onDeleteBtn={(preset) => this.onPresetDelete(preset)} onSaveBtn={(e,idx) => this.onPresetEdit(e,idx)} onSave={(title, preset) => this.onSavePreset(title, preset)}/>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PresetsManager;\r\n\r\nPresetsManager.defaultProps = {\r\n\tonSelect: function(preset) {}\r\n };","import React, { Component } from 'react';\r\nimport {Container, Row} from 'reactstrap'\r\n\r\nclass SimplePanel extends Component {\r\n    render() { \r\n        return (\r\n            <Container className={\"pane \" + this.props.className}>\r\n\t\t\t\t<Row className=\"pane-title\">{this.props.title}</Row>\r\n\t\t\t\t<Row className=\"pane-body\">{this.props.children}</Row>\r\n            </Container>\r\n            );\r\n    }\r\n}\r\n \r\nexport default SimplePanel;\r\n\r\n\r\nSimplePanel.defaultProps = {\r\n    title: 'title',\r\n    children: [],\r\n    className: ''\r\n };","export const playbackModes = {\r\n\tSTOP: \"stop\",\r\n\tCYCLE: \"cycle\",\r\n\tREPEAT: \"repeat\",\r\n\tCONTINUE: \"continue\"\r\n};","import React, { Component } from 'react';\r\nimport Slider from 'rc-slider'\r\nimport regression from 'regression';\r\nimport {Badge} from 'reactstrap'\r\n\r\n\r\nclass GeometricSlider extends Component {\r\n\tstate = {\r\n        value: undefined,\r\n        regression: undefined\r\n\t};\r\n\r\n    constructor(props) {\r\n        // TOneverDo \r\n        // currently it works only for min=1 only\r\n        super(props);\r\n        \r\n        const d = [[0,this.props.min],  [100, this.props.max]];\r\n        \r\n        this.state.regression = regression.exponential(d, {precision : 10 })\r\n        console.log('slider func', this.state.regression.string)\r\n\r\n        this.prepareMarks();\r\n\r\n        this.state.value = this.props.defaultValue;\r\n        \r\n    }\r\n\r\n    prepareMarks() {\r\n        this.marks = {};\r\n        \r\n        for (let i = 0; i < this.props.marksAt.length; i++) {\r\n            this.marks[  this.findX(this.props.marksAt[i]) ]  = this.props.marksAt[i];\r\n        }\r\n    }\r\n\r\n    makeMark(value) {\r\n        return {\r\n            label: this.props.markFormatter(\r\n                Math.floor(value)\r\n            ),\r\n            style: this.props.marksStyle\r\n        };\r\n    }\r\n\r\n    onChange(v) {\r\n        console.log('onChange', v)\r\n        const value =  Math.floor(this.state.regression.predict(v)[1]);\r\n        this.setState({value: value})\r\n        this.props.onChange(value)\r\n    }\r\n \r\n    findX(y) {\r\n        // y = e^bx ==> x = ln(y) / b\r\n        return Math.log(y)/this.state.regression.equation[1];\r\n    }\r\n    \r\n    setValue(v) {\r\n        this.setState({value: v})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            \t<div>\r\n\t\t\t\t\t<Badge  color=\"light\" onClick={this.onBadgeClick} className=\"d-i\">\r\n                        {this.props.badgeFormatter(this.state.value)}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n                <Slider ref=\"slider\" included={false} value={this.findX(this.state.value)} style={{height: '45px'}} onChange={(v) => this.onChange(v)} min={0} max={100} step={0.5} marks={this.marks}/>\r\n            </>\r\n        )\r\n\r\n    }\r\n    \r\n}\r\n \r\nexport default GeometricSlider;\r\n\r\nGeometricSlider.defaultProps = {\r\n    marksNum: 6,\r\n    marksStyle: {\r\n        color: '#ccc'\r\n    },\r\n    desc: '',\r\n    badgeFormatter: function(v) {return v;},\r\n    markFormatter: function(v) {return v;},\r\n    defaultValue: 50,\r\n    marksAt: []\r\n}","import React from \"react\";\r\nimport { Range } from \"rc-slider\";\r\nimport { Badge } from \"reactstrap\";\r\n\r\nclass AdvancedRange extends Range {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t// onClick={this.onBadgeClick}\r\n\t\t\t\t\t\tclassName=\"d-i\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.bounds[0]} - {this.state.bounds[1]}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</div>\r\n                <div style={{ height: \"30px\" }}>\r\n                {super.render()}\r\n                </div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AdvancedRange;\r\n","import React, { Component } from \"react\";\r\nimport SimplePanel from \"./SimplePanel\";\r\nimport {\r\n\tButtonGroup,\r\n\tButton,\r\n\tCollapse,\r\n\tButtonDropdown,\r\n\tDropdownToggle,\r\n\tDropdownItem,\r\n\tDropdownMenu\r\n} from \"reactstrap\";\r\nimport { playModes } from \"./PlayModes\";\r\nimport { playbackModes } from \"./PlaybackModes\";\r\nimport GeometricSlider from \"./GeometricSlider\";\r\nimport AdvancedRange from \"./AdvancedRange\"\r\nimport AdvancedSlider from \"./AdvancedSlider\"\r\nimport Utils from \"./Utils\";\r\n\r\nclass ModePanel extends Component {\r\n\tstate = {\r\n\t\tplaybackMode: playbackModes.STOP,\r\n\t\tplayMode: playModes.BY_TIME,\r\n\t\tbpmStep: 10,\r\n\t\tbpmStepDropdownOpen: false,\r\n\t\tbyTimeInterval: 5,\r\n\t\tbyBarInterval: 2,\r\n\t\tstableBpmSlider: 300,\r\n\t\tbpmRange: [100, 250]\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state.playMode = props.playMode;\r\n\t\tif (props.playMode === playModes.BY_BAR) {\r\n\t\t\tthis.state.byBarInterval = props.interval;\r\n\t\t} else {\r\n\t\t\tthis.state.byTimeInterval = props.interval;\r\n\t\t}\r\n\t\tthis.state.bpmStep = props.bpmStep;\r\n\t\tthis.state.bpmRange = props.bpmRange;\r\n\t\tconsole.log('<ModePanel> constructor')\r\n\t}\r\n\r\n\tonModeChange(newMode) {\r\n\t\tthis.setState({ playMode: newMode }, this.props.onAfterChange);\r\n\t}\r\n\r\n\r\n\tonBpmRangeChange(bpmRange) {\r\n\t\tconsole.log('<ModePanel>onBpmRangeChange(' + bpmRange[0] + ')')\r\n\t\tthis.setState({ bpmRange: bpmRange }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBpmSliderChange = (value) => {\r\n\t\tconsole.log('onBpmSliderChange', value)\r\n\t\tthis.setState({ stableBpmSlider: value }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBpmStepChange() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tbpmStepDropdownOpen: !prevState.bpmStepDropdownOpen\r\n\t\t}));\r\n\t}\r\n\r\n\tonBpmStepSelect(value) {\r\n\t\tthis.setState({ bpmStep: value }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tgetValue() {\r\n\r\n\t\tconsole.log('getValue', this.state.playbackMode)\r\n\r\n\t\tconst o = {\r\n\t\t\tplayMode: this.state.playMode,\r\n\t\t\tplaybackMode: this.state.playbackMode,\r\n\t\t\tinterval:\r\n\t\t\t\tthis.state.playMode === playModes.BY_BAR\r\n\t\t\t\t\t? this.state.byBarInterval\r\n\t\t\t\t\t: this.state.byTimeInterval,\r\n\t\t\tbpmStep: this.state.bpmStep,\r\n\t\t\tbpmRange: this.state.playMode !== playModes.STABLE ? this.state.bpmRange : this.props.bpmRange,//this.refs.bpmRange.getValue() : null,\r\n\t\t\tstableBpmSlider: this.state.stableBpmSlider\r\n\t\t};\r\n\t\t// debugger\r\n\t\treturn o;\r\n\t}\r\n\r\n\tsetValue(o) {\r\n\t\tconsole.log(\"<ModePanel>setValue\", o)\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tplayMode: o.playMode,\r\n\t\t\t\tplayBackMode: o.playBackMode || this.state.playBackMode,\r\n\t\t\t\tbpmStep: o.bpmStep,\r\n\t\t\t\tbyBarInterval:\r\n\t\t\t\t\to.playMode === playModes.BY_BAR\r\n\t\t\t\t\t\t? o.interval\r\n\t\t\t\t\t\t: this.state.byBarInterval,\r\n\t\t\t\tbyTimeInterval:\r\n\t\t\t\t\to.playMode === playModes.BY_TIME\r\n\t\t\t\t\t\t? o.interval\r\n\t\t\t\t\t\t: this.state.byTimeInterval,\r\n\t\t\t\tbpmRange: o.bpmRange,\r\n\t\t\t\tstableBpmSlider: o.stableBpmSlider || this.state.stableBpmSlider\r\n\t\t\t},\r\n\t\t\tthis.props.onAfterChange\r\n\t\t);\r\n\r\n\r\n\t\tconst slider =\r\n\t\t\to.playMode === playModes.BY_BAR\r\n\t\t\t\t? this.refs.byBarSlider\r\n\t\t\t\t: this.refs.byTimeSlider;\r\n\t\tslider.setValue(o.interval);\r\n\r\n\t\tthis.refs.bpmRange.setState({ bounds: o.bpmRange })\r\n\t}\r\n\r\n\tonTimeIntervalChange(v) {\r\n\t\tthis.setState({ byTimeInterval: v }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tonBarIntervalChange(v) {\r\n\t\tthis.setState({ byBarInterval: v }, this.props.onAfterChange);\r\n\t}\r\n\r\n\tbyBarFormatter(barsNum) {\r\n\t\tlet s = barsNum + \" \";\r\n\t\tif (barsNum === 1) {\r\n\t\t\ts += \"bar\";\r\n\t\t} else {\r\n\t\t\ts += \"bars\";\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\r\n\tbyTimeFormatter(time) {\r\n\t\tlet s = Utils.formatTime(time) + \" \";\r\n\r\n\t\tif (time === 1) {\r\n\t\t\ts += \"second\";\r\n\t\t} else if (time < 60) {\r\n\t\t\ts += \"seconds\";\r\n\t\t} else if (time < 120) {\r\n\t\t\ts += \"minute\";\r\n\t\t} else {\r\n\t\t\ts += \"minutes\";\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\r\n\tonPlaybackChange(newPlaybackMode) {\r\n\t\tthis.setState({ playbackMode: newPlaybackMode });\r\n\t}\r\n\r\n\trenderIncreaseBpmDropdown() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\tincrease speed by\r\n\t\t\t\t<ButtonDropdown\r\n\t\t\t\t\tstyle={{ margin: \"0px 5px\" }}\r\n\t\t\t\t\tisOpen={this.state.bpmStepDropdownOpen}\r\n\t\t\t\t\ttoggle={() => this.onBpmStepChange()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DropdownToggle caret size=\"sm\" outline color=\"light\">\r\n\t\t\t\t\t\t{this.state.bpmStep}\r\n\t\t\t\t\t</DropdownToggle>\r\n\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(5);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t5\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(10);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t10\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(20);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t20\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(30);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t30\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tthis.onBpmStepSelect(50);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t50\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t</ButtonDropdown>\r\n\t\t\t\tbpm\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\trenderSpeedRange() {\r\n\r\n\t\t// console.log('renderSpeedRange', this.state.bpmRange[0])\r\n\t\treturn (<div>\r\n\t\t\tSpeed range\r\n\t\t\t<AdvancedRange\r\n\t\t\t\tref=\"bpmRange\"\r\n\t\t\t\tmin={30}\r\n\t\t\t\tmax={600}\r\n\t\t\t\tdefaultValue={[\r\n\t\t\t\t\tthis.state.bpmRange[0],\r\n\t\t\t\t\tthis.state.bpmRange[1]\r\n\t\t\t\t]}\r\n\t\t\t\tpushable={true}\r\n\t\t\t\tonAfterChange={(value) => this.onBpmRangeChange(value)}\r\n\t\t\t/>\r\n\t\t</div>);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SimplePanel className=\"ModePanel\" title=\"Mode\">\r\n\t\t\t\t<ButtonGroup size=\"sm\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.BY_BAR)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.BY_BAR}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBy bar\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.BY_TIME)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.BY_TIME}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBy time\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(playModes.STABLE)}\r\n\t\t\t\t\t\tactive={this.state.playMode === playModes.STABLE}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStable\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== playModes.STABLE}>\r\n\t\t\t\t\t{/* {this.state.playMode !== playModes.STABLE ? this.renderSpeedRange() : ''} */}\r\n\t\t\t\t\t{this.renderSpeedRange()}\r\n\t\t\t\t</Collapse>\r\n\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.BY_BAR}>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tIncrease speed every\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byBarSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byBarInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={this.byBarFormatter}\r\n\t\t\t\t\t\t\tonChange={v => this.onBarIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={301}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 5, 10, 20, 50, 100, 300]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.BY_TIME}>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tIncrease speed every\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byTimeSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byTimeInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={this.byTimeFormatter}\r\n\t\t\t\t\t\t\tmarkFormatter={Utils.formatTime}\r\n\t\t\t\t\t\t\tonChange={v => this.onTimeIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={600}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 5, 10, 30, 60, 120, 240, 600]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t{this.state.playMode !== playModes.STABLE ? this.renderIncreaseBpmDropdown() : ''}\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === playModes.STABLE}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tChoose bpm\r\n\r\n\t\t\t\t\t\t<AdvancedSlider\r\n\t\t\t\t\t\t\tref=\"stableBpmSlider\"\r\n\t\t\t\t\t\t\tincluded={false}\r\n\t\t\t\t\t\t\tmin={10}\r\n\t\t\t\t\t\t\tmax={600}\r\n\t\t\t\t\t\t\tmarks={{ 30: '30', 100: '100', 200: '200', 300: '300', 400: '400', 500: '500', 600: '600' }}\r\n\t\t\t\t\t\t\tvalue={this.state.stableBpmSlider}\r\n\t\t\t\t\t\t\tonChange={this.onBpmSliderChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== playModes.STABLE}>\r\n\t\t\t\t\t<div>After plan</div>\r\n\t\t\t\t\t<ButtonGroup size=\"sm\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(playbackModes.STOP)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === playbackModes.STOP}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tStop\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(playbackModes.CYCLE)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === playbackModes.CYCLE}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCycle back\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(playbackModes.CONTINUE)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === playbackModes.CONTINUE}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLast speed\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(playbackModes.REPEAT)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === playbackModes.REPEAT}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tStart over\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</SimplePanel>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModePanel;\r\n\r\nModePanel.defaultProps = {\r\n\tonAfterChange: null\r\n};\r\n","import {playModes} from \"./PlayModes\"\r\nimport {playbackModes} from \"./PlaybackModes\"\r\nimport { instruments } from \"./InstrumentLib\";\r\n\r\n\r\nexport const PresetsLib = [\r\n    {\r\n        title: \"4 beats every 4 bars\",\r\n        beatsPerStep: 4,\r\n        playMode: playModes.BY_BAR,\r\n        interval: 4,\r\n        bpmStep: 20,\r\n        bpmRange: [100, 400],\r\n        accents: [0, 1, 2, 1]\r\n    },\r\n    {\r\n        title: \"Jhaptal tabla\",\r\n        instrument: instruments.TABLA,\r\n\t\tbeatsPerStep: 10,\r\n\t\tbpmRange: [200, 400],\r\n        accents: [0, 1, 0, 0, 1, 2, 1, 0, 0, 1 ],\r\n        playMode: playModes.BY_TIME,\r\n        interval: 5*60,\r\n        bpmStep: 10\r\n    },\r\n    {title: \"Balkan 1\", \"bpmRange\":[241,400],\"beatsPerStep\":7,\"accents\":[0,1,2,0,1,2,1],\"instrument\":\"electrokit\",\"playMode\":\"by_bar\",\"interval\":20,\"bpmStep\":30},\r\n    {title: \"Balkan 2\", \"bpmRange\":[293,400],\"beatsPerStep\":7,\"accents\":[0,1,2,0,1,2,1],\"instrument\":\"tabla\",\"playMode\":\"by_bar\",\"interval\":300,\"bpmStep\":50},\r\n    {title: \"Groove 1\", \"bpmRange\":[222,262],\"beatsPerStep\":8,\"accents\":[0,2,1,2,1,0,1,1],\"instrument\":\"electrokit\",\"playMode\":\"by_time\",\"interval\":600,\"bpmStep\":50},\r\n    {title: \"Groove 2\", \"bpmRange\":[222,400],\"beatsPerStep\":8,\"accents\":[0,2,0,2,2,2,0,1],\"instrument\":\"electrokit\",\"playMode\":\"by_bar\",\"interval\":20,\"bpmStep\":50},\r\n\r\n\r\n];\r\n\r\nexport const InitPreset = {\r\n    title: \"INIT\",\r\n    instrument: instruments.TABLA,\r\n    beatsPerStep: 4,\r\n    bpmRange: [300, 400],\r\n    accents: [1, 0, 0, 0],\r\n    playMode: playModes.BY_TIME,\r\n    playbackMode: playbackModes.STOP,\r\n    interval: 10,\r\n    bpmStep: 50,\r\n    isHidden: true\r\n}","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./components/SoundMachine\";\nimport SoundMachine from \"./components/SoundMachine\";\nimport Planner from \"./components/Planner\";\nimport \"rc-slider/assets/index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport {\n\tButtonDropdown,\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem\n} from \"reactstrap\";\nimport AdvancedSlider from \"./components/AdvancedSlider\";\nimport BarManager from \"./components/BarManager\";\nimport { instruments } from \"./components/InstrumentLib\";\nimport PresetsManager from \"./components/PresetsManager\";\nimport ModePanel from \"./components/ModePanel\";\nimport { playModes } from \"./components/PlayModes\";\nimport { withCookies } from \"react-cookie\";\nimport { PresetsLib, InitPreset } from \"./components/PresetsLib\";\nimport { accentTypes } from \"./components/AccentTypes\";\nimport SimplePanel from \"./components/SimplePanel\";\nimport Vis from \"./components/Vis\"\nimport { playbackModes } from \"./components/PlaybackModes\";\n\nclass App extends Component {\n\tstate = {\n\t\tcurrentBpm: 60,\n\t\tinstrument: instruments.ELECTRO_KIT,\n\t\tinstrumentDropdownOpen: false,\n\t\tinstrumentDropdownLabel: \"Electro kit\", // bit messy, why would we hardcode this here, it ought to be taken from instrumentLib\n\t\tcycleDropdownOpen: false\n\t};\n\n\tplaybackDirection = true; // true => forward, false => backward\n\n\tcomponentDidMount() {\n\t\t// initialize accents\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getAccents());\n\t\t\n\t\t// keyboard listeners\n\t\tdocument.addEventListener(\"keydown\", e => this.handleKeyDown(e));\n\n\t\t// initialize with UI settings\n\t\tthis.refs.planner.setPlan(this.getUiState());\n\t\t\n\t\t// this.refs.sm.setBpm(this.state.currentBpm)\n\t\t// this.initialized = true;\n\t\t\n\t\tthis.refs.sm.setVis(this.refs.vis)\n\t}\n\n\thandleKeyDown(e) {\n\t\t// console.log(\"key\", e);\n\t\tswitch (e.keyCode) {\n\t\t\tcase 32: // space\n\t\t\t\t// e.preventDefault();\n\t\t\t\tthis.refs.sm.handleStartStop();\n\t\t\t\tbreak;\n\t\t\tcase 38: // Arrow up\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.state.currentBpm < 600) {\n\t\t\t\t\tthis.setBpm(this.state.currentBpm + 10);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 40: // arrow down\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.state.currentBpm > 10) {\n\t\t\t\t\tthis.setBpm(this.state.currentBpm - 10);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 37: // Arrow left\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.refs.planner.stepBackward();\n\t\t\t\tbreak;\n\t\t\tcase 39: // Arrow right\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.refs.planner.stepForward();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tonInstrumentSelect(newInstrument) {\n\t\tthis.refs.sm.setInstrument(newInstrument);\n\t\tconst label = this.refs.sm.getCurrentInstrumentLabel();\n\t\tconsole.log(\"setting new instrument. state.instrument\", newInstrument);\n\t\tthis.setState({\n\t\t\tinstrument: newInstrument,\n\t\t\tinstrumentDropdownLabel: label\n\t\t});\n\t}\n\n\trenderPlaybackPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">PLAYBACK</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs=\"3\">Instrument</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\tisOpen={this.state.instrumentDropdownOpen}\n\t\t\t\t\t\t\ttoggle={() => this.onInstrumentChange()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DropdownToggle\n\t\t\t\t\t\t\t\tcaret\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\tcolor=\"light\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.instrumentDropdownLabel}\n\t\t\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tinstruments.TABLA\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tTabla\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t\t<DropdownItem\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis.onInstrumentSelect(\n\t\t\t\t\t\t\t\t\t\t\tinstruments.ELECTRO_KIT\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tElectro Kit\n\t\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Beats per step</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<AdvancedSlider\n\t\t\t\t\t\t\tref=\"beatsPerStep\"\n\t\t\t\t\t\t\tmin={2}\n\t\t\t\t\t\t\tmax={16}\n\t\t\t\t\t\t\tdefaultValue={this.props.beatsPerStep}\n\t\t\t\t\t\t\tonAfterChange={() => this.onBeatsPerStepChange()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={3}>Accents</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<BarManager\n\t\t\t\t\t\t\tonAfterChange={() => this.onAccentsChange()}\n\t\t\t\t\t\t\tref=\"barManager\"\n\t\t\t\t\t\t\tdefaultValue={this.props.accents}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col xs=\"3\">Playback</Col>\n\t\t\t\t\t<Col>One Time/LoopBack/Repeat</Col>\n\t\t\t\t</Row> */}\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonModePanelChanged() {\n\t\tconsole.log(\"<App>onModePanelChanged\")\n\t\tconst state = this.getUiState();\n\t\t\n\t\t// create new plan\n\t\tthis.refs.planner.setPlan(state);\n\t}\n\t\n\trenderRightPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPresetsPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonProgress(progress) {\n\t\tthis.refs.planner.setProgress(progress)\n\t}\n\n\trenderLeftPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title=\"Control\">\n\t\t\t\t\t\t\t<SoundMachine\n\t\t\t\t\t\t\t\tref=\"sm\"\n\t\t\t\t\t\t\t\tbeatsPerStep={this.state.beatsPerStep}\n\t\t\t\t\t\t\t\tonLoopEnd={() => this.onLoopEnd()}\n\t\t\t\t\t\t\t\tonBeat={beat => this.onBeat(beat)}\n\t\t\t\t\t\t\t\tinstrument={this.state.instrument}\n\t\t\t\t\t\t\t\t// onToggle={(state) => this.onSoundMachineToggle(state)}\n\t\t\t\t\t\t\t\tonProgress={(progress) => this.onProgress(progress)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</SimplePanel>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<ModePanel\n\t\t\t\t\t\t\tref=\"modePanel\"\n\t\t\t\t\t\t\tplayMode={this.props.playMode}\n\t\t\t\t\t\t\tinterval={this.props.interval}\n\t\t\t\t\t\t\tbpmStep={this.props.bpmStep}\n\t\t\t\t\t\t\tbpmRange={this.props.bpmRange}\n\t\t\t\t\t\t\t//bpmStableSlider={this.props.bpmStableSlider}\n\t\t\t\t\t\t\tcurrentBpm={this.state.currentBpm}\n\t\t\t\t\t\t\t// defaultValue={{playMode: this.props.playMode, interval: this.props.interval, bpmStep: this.props.bpmStep}}\n\t\t\t\t\t\t\tonAfterChange={() => this.onModePanelChanged()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>{this.renderPlaybackPane()}</Col>\n\t\t\t\t</Row>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col>{this.renderCyclePane()}</Col>\n\t\t\t\t</Row> */}\n\t\t\t</Container>\n\t\t);\n\t}\n\n\trenderPresetsPane() {\n\t\treturn (\n\t\t\t<Container className=\"pane\">\n\t\t\t\t<Row className=\"pane-title\">Presets</Row>\n\t\t\t\t<PresetsManager\n\t\t\t\t\tref=\"presetsManager\"\n\t\t\t\t\tpreset={this.uiState}\n\t\t\t\t\tcookies={this.props.cookies}\n\t\t\t\t\tpresets={PresetsLib}\n\t\t\t\t\tonSelect={preset => this.onPresetSelect(preset)}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonPresetSelect(preset) {\n\t\tconsole.log(\"setting preset\", preset);\n\n\t\tthis.refs.beatsPerStep.setState({ value: preset.beatsPerStep });\n\n\t\tthis.refs.sm.setBeatsPerStep(preset.beatsPerStep);\n\t\t\n\t\tthis.onInstrumentSelect(preset.instrument || instruments.TABLA);\n\n\t\tthis.refs.barManager.setAccents(preset.accents, preset.beatsPerStep);\n\t\t\n\t\tthis.refs.modePanel.setValue(preset);\n\t\t\n\t}\n\n\trenderMidPane() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title={\"Plan\"}>\n\t\t\t\t\t\t<Planner\n\t\t\t\t\t\t\tcurrentBpm={this.state.currentBpm}\n\t\t\t\t\t\t\t// onChange={() => this.onPlanChanged()}\n\t\t\t\t\t\t\tonStep={step => this.onPlanStep(step)}\n\t\t\t\t\t\t\tref=\"planner\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</SimplePanel>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<SimplePanel title={\"Visualisation\"}>\n\t\t\t\t\t\t<Vis ref=\"vis\"/>\n\t\t\t\t\t\t</SimplePanel>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t\n\t\t\t</Container>\n\t\t);\n\t}\n\n\tonLoopEnd() {\n\t\t\n\t\tconst pm = this.refs.modePanel.state.playbackMode;\n\t\t\n\t\tswitch (pm)\n\t\t{\n\t\t\tcase playbackModes.CYCLE:\n\t\t\t\tif (this.refs.planner.isLastStep() || this.refs.planner.isFirstStep()) {\n\t\t\t\t\tthis.playbackDirection = !this.playbackDirection;\n\t\t\t\t}\n\t\t\t\tthis.playbackDirection === true ? this.refs.planner.stepForward() : this.refs.planner.stepBackward();\n\t\t\t\tbreak;\n\t\t\tcase playbackModes.REPEAT:\n\t\t\t\tif (this.refs.planner.isLastStep()) {\n\t\t\t\t\tthis.refs.planner.setStep(0)\n\t\t\t\t} else {\n\t\t\t\t\tthis.refs.planner.stepForward();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase playbackModes.CONTINUE: \n\t\t\t\tif (this.refs.planner.isLastStep()) {\n\t\t\t\t\tlet currentMode = this.refs.modePanel.getValue();\n\t\t\t\t\tcurrentMode.playMode = playModes.STABLE;\n\t\t\t\t\tcurrentMode.stableBpmSlider = this.state.currentBpm;\n\t\t\t\t\tthis.refs.modePanel.setValue(currentMode);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.refs.planner.stepForward();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase playbackModes.STOP: \n\t\t\t\tif (this.refs.planner.isLastStep()) {\n\t\t\t\t\tthis.refs.sm.handleStartStop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.refs.planner.stepForward();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault: \n\t\t\t\tthis.refs.planner.stepForward();\t\t\n\t\t}\n\t}\n\n\tonBeat(idx) {\n\t\tthis.refs.barManager.setActive(idx);\n\t}\n\t \n\trender() {\n\t\t// set the title with current BPM\n\t\tdocument.title =\n\t\t\t\"BPM: \" + this.state.currentBpm.toFixed(0) + \" | SpeedTrainer\"\n\n\t\t// render everything else\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t\n\t\t\t\t<Container className=\"app-container\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* left pane with controls */}\n\t\t\t\t\t\t\t{this.renderLeftPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>{this.renderMidPane()}</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* right pane with examples and plan*/}\n\t\t\t\t\t\t\t{this.renderRightPane()}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tonBeatsPerStepChange = () => {\n\t\t// plan doesn't change here, just the beats per step amount\n\t\tconst newBps = this.getUiState().beatsPerStep;\n\n\t\tif (newBps !== this.refs.sm.beatsPerStep) {\n\t\t\tconst accents = this.refs.barManager.getAccents();\n\n\t\t\twhile (accents.length > newBps) {\n\t\t\t\taccents.pop();\n\t\t\t}\n\t\t\twhile (accents.length < newBps) {\n\t\t\t\taccents.push(accentTypes.ACCENT_2);\n\t\t\t}\n\n\t\t\tthis.refs.sm.setBeatsPerStep(newBps);\n\t\t\tthis.refs.barManager.setAccents(accents);\n\t\t\tthis.setState({ beatsPerStep: newBps });\n\t\t}\n\t};\n\n\tonPlanStep(step) {\n\t\t// console.log(\"<App>onPlanStep\", step)\n\t\t// this.setBpm(step.bpm);\n\n\t\tif (step) {\n\t\t\tthis.setState({currentBpm: this.refs.sm.setStep(step)});\n\t\t}\n\t}\n\n\n\tsetBpm = newBpm => {\n\t\tthis.setState({ currentBpm: newBpm });\n\t\tthis.refs.sm.setBpm(newBpm);\n\t};\n\t\n\tonInstrumentChange() {\n\t\tthis.setState(prevState => ({\n\t\t\tinstrumentDropdownOpen: !prevState.instrumentDropdownOpen\n\t\t}));\n\t}\n\n\t\n\tgetUiState() {\n\n\t\tconst s1 = {\n\t\t\tbeatsPerStep: this.refs.beatsPerStep.getValue(),\n\t\t\taccents: this.refs.barManager.getAccents(),\n\t\t\tinstrument: this.state.instrument\n\t\t};\n\n\t\tconst s2 = this.refs.modePanel.getValue();\n// console.log('s2',s2.playbac)\n\t\tconst uiState = { ...s1, ...s2 };\n\t\t\n\t\tconsole.log(\"storing uiState\", this.uiState);\n\t\tthis.uiState = uiState;\n\t\t// HACK\n\t\tthis.uiState.instrument = this.state.instrument;\n\t\treturn uiState;\n\t}\n\n\tonAccentsChange() {\n\t\tthis.refs.sm.setAccents(this.refs.barManager.getAccents());\n\t}\n}\n\nexport default withCookies(App);\n\n// this serves as default app settings\nApp.defaultProps = {\n\tplaybackMode: InitPreset.playbackMode,\n\tplayMode: InitPreset.playMode,// playModes.BY_BAR,\n\tinterval: InitPreset.interval,\n\tinstrument: InitPreset.instrument,\n\tbpmStep: InitPreset.bpmStep,\n\tbpmRange: InitPreset.bpmRange,\n\tbeatsPerStep: InitPreset.beatsPerStep,\n\taccents: InitPreset.accents\n};\n\n// App.defaultProps = {...App.defaultProps, InitPreset}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {CookiesProvider} from 'react-cookie'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(  <CookiesProvider> <App  /> </CookiesProvider> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}